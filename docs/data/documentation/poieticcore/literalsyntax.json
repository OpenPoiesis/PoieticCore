{
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Formulas"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/LiteralSyntax"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:11PoieticCore13LiteralSyntaxC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "LiteralSyntax"
      }
    ],
    "modules" : [
      {
        "name" : "PoieticCore"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "LiteralSyntax"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "LiteralSyntax"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "final"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "LiteralSyntax"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionSyntax"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "anchor" : "Abstract-Syntax-Tree",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionSyntax",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ParenthesisSyntax",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/UnaryOperatorSyntax",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/BinaryOperatorSyntax",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/VariableSyntax",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/FunctionCallSyntax",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/FunctionArgumentSyntax",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/FunctionArgumentListSyntax"
      ],
      "title" : "Abstract Syntax Tree"
    }
  ],
  "topicSections" : [
    {
      "anchor" : "Initializers",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/LiteralSyntax\/init(type:literal:)"
      ],
      "title" : "Initializers"
    },
    {
      "anchor" : "Instance-Properties",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/LiteralSyntax\/fullText",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/LiteralSyntax\/literal",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/LiteralSyntax\/type"
      ],
      "title" : "Instance Properties"
    },
    {
      "anchor" : "Enumerations",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/LiteralSyntax\/LiteralType"
      ],
      "title" : "Enumerations"
    },
    {
      "anchor" : "Default-Implementations",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/LiteralSyntax\/ExpressionSyntax-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/poieticcore\/literalsyntax"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://PoieticCore/documentation/PoieticCore": {
  "abstract" : [
    {
      "text" : "Core library for creating applications for systems thinking and simulation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "PoieticCore",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore"
},
"doc://PoieticCore/documentation/PoieticCore/BinaryOperatorSyntax": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BinaryOperatorSyntax"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/BinaryOperatorSyntax",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BinaryOperatorSyntax"
    }
  ],
  "role" : "symbol",
  "title" : "BinaryOperatorSyntax",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/binaryoperatorsyntax"
},
"doc://PoieticCore/documentation/PoieticCore/ExpressionSyntax": {
  "abstract" : [
    {
      "text" : "Protocol for expression syntax nodes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ExpressionSyntax"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionSyntax",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ExpressionSyntax"
    }
  ],
  "role" : "symbol",
  "title" : "ExpressionSyntax",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/expressionsyntax"
},
"doc://PoieticCore/documentation/PoieticCore/Formulas": {
  "abstract" : [
    {
      "text" : "Formulas are arithmetic expressions that can be used for computation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Formulas",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Formulas",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/formulas"
},
"doc://PoieticCore/documentation/PoieticCore/FunctionArgumentListSyntax": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FunctionArgumentListSyntax"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/FunctionArgumentListSyntax",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FunctionArgumentListSyntax"
    }
  ],
  "role" : "symbol",
  "title" : "FunctionArgumentListSyntax",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/functionargumentlistsyntax"
},
"doc://PoieticCore/documentation/PoieticCore/FunctionArgumentSyntax": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FunctionArgumentSyntax"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/FunctionArgumentSyntax",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FunctionArgumentSyntax"
    }
  ],
  "role" : "symbol",
  "title" : "FunctionArgumentSyntax",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/functionargumentsyntax"
},
"doc://PoieticCore/documentation/PoieticCore/FunctionCallSyntax": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FunctionCallSyntax"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/FunctionCallSyntax",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FunctionCallSyntax"
    }
  ],
  "role" : "symbol",
  "title" : "FunctionCallSyntax",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/functioncallsyntax"
},
"doc://PoieticCore/documentation/PoieticCore/LiteralSyntax": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LiteralSyntax"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/LiteralSyntax",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LiteralSyntax"
    }
  ],
  "role" : "symbol",
  "title" : "LiteralSyntax",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/literalsyntax"
},
"doc://PoieticCore/documentation/PoieticCore/LiteralSyntax/ExpressionSyntax-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/LiteralSyntax\/ExpressionSyntax-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressionSyntax Implementations",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/literalsyntax\/expressionsyntax-implementations"
},
"doc://PoieticCore/documentation/PoieticCore/LiteralSyntax/LiteralType": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LiteralType"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/LiteralSyntax\/LiteralType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LiteralType"
    }
  ],
  "role" : "symbol",
  "title" : "LiteralSyntax.LiteralType",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/literalsyntax\/literaltype"
},
"doc://PoieticCore/documentation/PoieticCore/LiteralSyntax/fullText": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "fullText"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/LiteralSyntax\/fullText",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "fullText",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/literalsyntax\/fulltext"
},
"doc://PoieticCore/documentation/PoieticCore/LiteralSyntax/init(type:literal:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "type"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore13LiteralSyntaxC",
      "text" : "LiteralSyntax"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore13LiteralSyntaxC0C4TypeO",
      "text" : "LiteralType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "literal"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore15ExpressionTokena",
      "text" : "ExpressionToken"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/LiteralSyntax\/init(type:literal:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(type:literal:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/literalsyntax\/init(type:literal:)"
},
"doc://PoieticCore/documentation/PoieticCore/LiteralSyntax/literal": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "literal"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore15ExpressionTokena",
      "text" : "ExpressionToken"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/LiteralSyntax\/literal",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "literal",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/literalsyntax\/literal"
},
"doc://PoieticCore/documentation/PoieticCore/LiteralSyntax/type": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "type"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore13LiteralSyntaxC",
      "text" : "LiteralSyntax"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore13LiteralSyntaxC0C4TypeO",
      "text" : "LiteralType"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/LiteralSyntax\/type",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "type",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/literalsyntax\/type"
},
"doc://PoieticCore/documentation/PoieticCore/ParenthesisSyntax": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParenthesisSyntax"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ParenthesisSyntax",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParenthesisSyntax"
    }
  ],
  "role" : "symbol",
  "title" : "ParenthesisSyntax",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/parenthesissyntax"
},
"doc://PoieticCore/documentation/PoieticCore/UnaryOperatorSyntax": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UnaryOperatorSyntax"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/UnaryOperatorSyntax",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UnaryOperatorSyntax"
    }
  ],
  "role" : "symbol",
  "title" : "UnaryOperatorSyntax",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/unaryoperatorsyntax"
},
"doc://PoieticCore/documentation/PoieticCore/VariableSyntax": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VariableSyntax"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/VariableSyntax",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VariableSyntax"
    }
  ],
  "role" : "symbol",
  "title" : "VariableSyntax",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/variablesyntax"
}
}
}