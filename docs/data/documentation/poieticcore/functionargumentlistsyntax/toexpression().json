{
  "abstract" : [
    {
      "text" : "Converts an expression syntax node into an unbound arithmetic",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "expression.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Formulas",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/FunctionArgumentListSyntax",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/FunctionArgumentListSyntax\/ExpressionSyntax-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/FunctionArgumentListSyntax\/toExpression()"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "PoieticCore",
    "externalID" : "s:11PoieticCore16ExpressionSyntaxPAAE02toC0AA010ArithmeticC0OyS2SGyF::SYNTHESIZED::s:11PoieticCore26FunctionArgumentListSyntaxC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "toExpression"
      },
      {
        "kind" : "text",
        "text" : "() -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:11PoieticCore17UnboundExpressiona",
        "text" : "UnboundExpression"
      }
    ],
    "modules" : [
      {
        "name" : "PoieticCore"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "toExpression()"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "toExpression"
            },
            {
              "kind" : "text",
              "text" : "() -> "
            },
            {
              "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/UnboundExpression",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:11PoieticCore17UnboundExpressiona",
              "text" : "UnboundExpression"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "",
                  "type" : "text"
                },
                {
                  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/UnboundExpression",
                  "isActive" : true,
                  "type" : "reference"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "See Also",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/poieticcore\/functionargumentlistsyntax\/toexpression()"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://PoieticCore/documentation/PoieticCore": {
  "abstract" : [
    {
      "text" : "Core library for creating applications for systems thinking and simulation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "PoieticCore",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore"
},
"doc://PoieticCore/documentation/PoieticCore/Formulas": {
  "abstract" : [
    {
      "text" : "Formulas - arithmetic expressions.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Formulas",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Formulas",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/formulas"
},
"doc://PoieticCore/documentation/PoieticCore/FunctionArgumentListSyntax": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FunctionArgumentListSyntax"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/FunctionArgumentListSyntax",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FunctionArgumentListSyntax"
    }
  ],
  "role" : "symbol",
  "title" : "FunctionArgumentListSyntax",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/functionargumentlistsyntax"
},
"doc://PoieticCore/documentation/PoieticCore/FunctionArgumentListSyntax/ExpressionSyntax-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/FunctionArgumentListSyntax\/ExpressionSyntax-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressionSyntax Implementations",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/functionargumentlistsyntax\/expressionsyntax-implementations"
},
"doc://PoieticCore/documentation/PoieticCore/FunctionArgumentListSyntax/toExpression()": {
  "abstract" : [
    {
      "text" : "Converts an expression syntax node into an unbound arithmetic",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "expression.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "toExpression"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore17UnboundExpressiona",
      "text" : "UnboundExpression"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/FunctionArgumentListSyntax\/toExpression()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "toExpression()",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/functionargumentlistsyntax\/toexpression()"
},
"doc://PoieticCore/documentation/PoieticCore/UnboundExpression": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UnboundExpression"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/UnboundExpression",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UnboundExpression"
    }
  ],
  "role" : "symbol",
  "title" : "UnboundExpression",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/unboundexpression"
}
}
}