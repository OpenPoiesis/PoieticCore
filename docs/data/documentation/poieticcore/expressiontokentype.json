{
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Formulas"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:11PoieticCore19ExpressionTokenTypeO",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "enum"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ExpressionTokenType"
      }
    ],
    "modules" : [
      {
        "name" : "PoieticCore"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "ExpressionTokenType"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Enumeration",
    "symbolKind" : "enum",
    "title" : "ExpressionTokenType"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "enum"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "ExpressionTokenType"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/PoieticCore\/SQ",
        "doc:\/\/PoieticCore\/s8SendableP",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/TokenTypeProtocol"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "anchor" : "Parsing",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Lexer",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Scanner",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionParser",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionLexer",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/TextLocation",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Token",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/TokenTypeProtocol",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionSyntaxError"
      ],
      "title" : "Parsing"
    }
  ],
  "topicSections" : [
    {
      "anchor" : "Enumeration-Cases",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/comma",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/double",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/empty",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/error(_:)",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/identifier",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/int",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/leftParen",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/operator",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/rightParen"
      ],
      "title" : "Enumeration Cases"
    },
    {
      "anchor" : "Type-Aliases",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/TokenError"
      ],
      "title" : "Type Aliases"
    },
    {
      "anchor" : "Type-Properties",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/unexpectedCharacterError"
      ],
      "title" : "Type Properties"
    },
    {
      "anchor" : "Default-Implementations",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/Equatable-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/poieticcore\/expressiontokentype"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://PoieticCore/SQ": {
  "identifier" : "doc:\/\/PoieticCore\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://PoieticCore/documentation/PoieticCore": {
  "abstract" : [
    {
      "text" : "Core library for creating applications for systems thinking and simulation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "PoieticCore",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore"
},
"doc://PoieticCore/documentation/PoieticCore/ExpressionLexer": {
  "abstract" : [
    {
      "text" : "An object for lexical analysis of an arithmetic expression.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ExpressionLexer"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionLexer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ExpressionLexer"
    }
  ],
  "role" : "symbol",
  "title" : "ExpressionLexer",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/expressionlexer"
},
"doc://PoieticCore/documentation/PoieticCore/ExpressionParser": {
  "abstract" : [
    {
      "text" : "Parser for arithmetic expressions.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ExpressionParser"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionParser",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ExpressionParser"
    }
  ],
  "role" : "symbol",
  "title" : "ExpressionParser",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/expressionparser"
},
"doc://PoieticCore/documentation/PoieticCore/ExpressionSyntaxError": {
  "abstract" : [
    {
      "text" : "Error thrown by the expression language parser.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ExpressionSyntaxError"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionSyntaxError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ExpressionSyntaxError"
    }
  ],
  "role" : "symbol",
  "title" : "ExpressionSyntaxError",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/expressionsyntaxerror"
},
"doc://PoieticCore/documentation/PoieticCore/ExpressionTokenType": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ExpressionTokenType"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ExpressionTokenType"
    }
  ],
  "role" : "symbol",
  "title" : "ExpressionTokenType",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/expressiontokentype"
},
"doc://PoieticCore/documentation/PoieticCore/ExpressionTokenType/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/expressiontokentype\/equatable-implementations"
},
"doc://PoieticCore/documentation/PoieticCore/ExpressionTokenType/TokenError": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TokenError"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/TokenError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TokenError"
    }
  ],
  "role" : "symbol",
  "title" : "ExpressionTokenType.TokenError",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/expressiontokentype\/tokenerror"
},
"doc://PoieticCore/documentation/PoieticCore/ExpressionTokenType/comma": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "comma"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/comma",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ExpressionTokenType.comma",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/expressiontokentype\/comma"
},
"doc://PoieticCore/documentation/PoieticCore/ExpressionTokenType/double": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "double"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/double",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ExpressionTokenType.double",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/expressiontokentype\/double"
},
"doc://PoieticCore/documentation/PoieticCore/ExpressionTokenType/empty": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "empty"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/empty",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ExpressionTokenType.empty",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/expressiontokentype\/empty"
},
"doc://PoieticCore/documentation/PoieticCore/ExpressionTokenType/error(_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "error"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore21ExpressionSyntaxErrorO",
      "text" : "ExpressionSyntaxError"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/error(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ExpressionTokenType.error(_:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/expressiontokentype\/error(_:)"
},
"doc://PoieticCore/documentation/PoieticCore/ExpressionTokenType/identifier": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "identifier"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/identifier",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ExpressionTokenType.identifier",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/expressiontokentype\/identifier"
},
"doc://PoieticCore/documentation/PoieticCore/ExpressionTokenType/int": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "int"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/int",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ExpressionTokenType.int",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/expressiontokentype\/int"
},
"doc://PoieticCore/documentation/PoieticCore/ExpressionTokenType/leftParen": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "leftParen"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/leftParen",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ExpressionTokenType.leftParen",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/expressiontokentype\/leftparen"
},
"doc://PoieticCore/documentation/PoieticCore/ExpressionTokenType/operator": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "`operator`"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/operator",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ExpressionTokenType.operator",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/expressiontokentype\/operator"
},
"doc://PoieticCore/documentation/PoieticCore/ExpressionTokenType/rightParen": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "rightParen"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/rightParen",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ExpressionTokenType.rightParen",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/expressiontokentype\/rightparen"
},
"doc://PoieticCore/documentation/PoieticCore/ExpressionTokenType/unexpectedCharacterError": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unexpectedCharacterError"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore19ExpressionTokenTypeO",
      "text" : "ExpressionTokenType"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ExpressionTokenType\/unexpectedCharacterError",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "unexpectedCharacterError",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/expressiontokentype\/unexpectedcharactererror"
},
"doc://PoieticCore/documentation/PoieticCore/Formulas": {
  "abstract" : [
    {
      "text" : "Formulas - arithmetic expressions.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Formulas",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Formulas",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/formulas"
},
"doc://PoieticCore/documentation/PoieticCore/Lexer": {
  "abstract" : [
    {
      "text" : "Protocol for syntax lexers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Lexer"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Lexer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Lexer"
    }
  ],
  "role" : "symbol",
  "title" : "Lexer",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/lexer"
},
"doc://PoieticCore/documentation/PoieticCore/Scanner": {
  "abstract" : [
    {
      "text" : "Base object for simple lexers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Scanner"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Scanner",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Scanner"
    }
  ],
  "role" : "symbol",
  "title" : "Scanner",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/scanner"
},
"doc://PoieticCore/documentation/PoieticCore/TextLocation": {
  "abstract" : [
    {
      "text" : "Human-oriented location within a text.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TextLocation"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/TextLocation",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TextLocation"
    }
  ],
  "role" : "symbol",
  "title" : "TextLocation",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/textlocation"
},
"doc://PoieticCore/documentation/PoieticCore/Token": {
  "abstract" : [
    {
      "text" : "Token represents a lexical unit of the source.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Token"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Token",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Token"
    }
  ],
  "role" : "symbol",
  "title" : "Token",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/token"
},
"doc://PoieticCore/documentation/PoieticCore/TokenTypeProtocol": {
  "abstract" : [
    {
      "text" : "Protocol for token types used by the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Lexer",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TokenTypeProtocol"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/TokenTypeProtocol",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TokenTypeProtocol"
    }
  ],
  "role" : "symbol",
  "title" : "TokenTypeProtocol",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/tokentypeprotocol"
},
"doc://PoieticCore/s8SendableP": {
  "identifier" : "doc:\/\/PoieticCore\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}