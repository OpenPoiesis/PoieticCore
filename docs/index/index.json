{
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "title" : "Memory",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Object Memory and Version Frames",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/init(metamodel:)",
                    "title" : "init(metamodel: Metamodel)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/allsnapshots",
                    "title" : "var allSnapshots: any Sequence<ObjectSnapshot>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/canredo",
                    "title" : "var canRedo: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/canundo",
                    "title" : "var canUndo: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/constraints",
                    "title" : "var constraints: [Constraint]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/currentframe",
                    "title" : "var currentFrame: StableFrame",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/currentframeid",
                    "title" : "var currentFrameID: FrameID?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/frames",
                    "title" : "var frames: [StableFrame]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/isempty",
                    "title" : "var isEmpty: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/metamodel",
                    "title" : "let metamodel: Metamodel",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/redoableframes",
                    "title" : "var redoableFrames: [FrameID]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/undoableframes",
                    "title" : "var undoableFrames: [FrameID]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/validatedsnapshots",
                    "title" : "var validatedSnapshots: [ObjectSnapshot]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/versionhistory",
                    "title" : "var versionHistory: [FrameID]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/accept(_:appendhistory:)",
                    "title" : "func accept(MutableFrame, appendHistory: Bool) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/addconstraint(_:)",
                    "title" : "func addConstraint(Constraint) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/allocateid(required:)",
                    "title" : "func allocateID(required: ID?) -> ID",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/checkconstraints(_:)",
                    "title" : "func checkConstraints(any Frame) -> [ConstraintViolation]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/containsframe(_:)",
                    "title" : "func containsFrame(FrameID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/createframe(id:)",
                    "title" : "func createFrame(id: FrameID?) -> MutableFrame",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/createsnapshot(_:)",
                    "title" : "func createSnapshot(ForeignRecord) throws -> ObjectSnapshot",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/createsnapshot(_:id:snapshotid:attributes:components:structure:state:)",
                    "title" : "func createSnapshot(ObjectType, id: ObjectID?, snapshotID: SnapshotID?, attributes: [String : ForeignValue], components: [any Component], structure: StructuralComponent?, state: VersionState) -> ObjectSnapshot",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/deriveframe(original:id:)",
                    "title" : "func deriveFrame(original: FrameID?, id: FrameID?) -> MutableFrame",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/derivesnapshot(_:)",
                    "title" : "func deriveSnapshot(SnapshotID) -> ObjectSnapshot",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/discard(_:)",
                    "title" : "func discard(MutableFrame)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/frame(_:)",
                    "title" : "func frame(FrameID) -> StableFrame?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/redo(to:)",
                    "title" : "func redo(to: FrameID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/removeconstraint(_:)",
                    "title" : "func removeConstraint(Constraint)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/removeframe(_:)",
                    "title" : "func removeFrame(FrameID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/restoreall(from:)",
                    "title" : "func restoreAll(from: URL) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/restoreall(store:)",
                    "title" : "func restoreAll(store: MakeshiftMemoryStore) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/saveall(to:)",
                    "title" : "func saveAll(to: URL) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/undo(to:)",
                    "title" : "func undo(to: FrameID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/validate(_:)",
                    "title" : "func validate(MutableFrame) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectmemory\/writeall(store:)",
                    "title" : "func writeAll(store: MakeshiftMemoryStore) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/objectmemory",
                "title" : "ObjectMemory",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/id",
                    "title" : "var id: FrameID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/memory",
                    "title" : "var memory: ObjectMemory",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/snapshots",
                    "title" : "var snapshots: [ObjectSnapshot]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/frame\/assert(constraint:)-3ln1f",
                            "title" : "func assert(constraint: Constraint) throws",
                            "type" : "method"
                          }
                        ],
                        "title" : "Frame Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/frame\/assert(constraint:)-79bse",
                    "title" : "func assert(constraint: Constraint) throws",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/frame\/brokenreferences()-9kz8l",
                            "title" : "func brokenReferences() -> [ObjectID]",
                            "type" : "method"
                          }
                        ],
                        "title" : "Frame Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/frame\/brokenreferences()-pz81",
                    "title" : "func brokenReferences() -> [ObjectID]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/brokenreferences(snapshot:)",
                    "title" : "func brokenReferences(snapshot: ObjectSnapshot) -> [ObjectID]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/contains(_:)",
                    "title" : "func contains(ObjectID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/filter(_:)-44p52",
                    "title" : "func filter((ObjectSnapshot) -> Bool) -> [ObjectSnapshot]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/filter(_:)-50lwx",
                    "title" : "func filter(any Predicate) -> [ObjectSnapshot]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/filter(component:)",
                    "title" : "func filter<T>(component: T.Type) -> [(ObjectSnapshot, T)]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/filter(trait:)",
                    "title" : "func filter(trait: Trait) -> [ObjectSnapshot]",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/frame\/filter(type:)-3zj9k",
                            "title" : "func filter(type: ObjectType) -> [ObjectSnapshot]",
                            "type" : "method"
                          }
                        ],
                        "title" : "Frame Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/frame\/filter(type:)-2khoe",
                    "title" : "func filter(type: ObjectType) -> [ObjectSnapshot]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/filteredges(_:)",
                    "title" : "func filterEdges((Edge) -> Bool) -> [Edge]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/filternodes(_:)",
                    "title" : "func filterNodes((ObjectSnapshot) -> Bool) -> [Node]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/first(type:)",
                    "title" : "func first(type: ObjectType) -> ObjectSnapshot?",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/frame\/hasreferentialintegrity()-52e58",
                            "title" : "func hasReferentialIntegrity() -> Bool",
                            "type" : "method"
                          }
                        ],
                        "title" : "Frame Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/frame\/hasreferentialintegrity()-78e2a",
                    "title" : "func hasReferentialIntegrity() -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/neighbours(_:selector:)",
                    "title" : "func neighbours(ObjectID, selector: NeighborhoodSelector) -> [Edge]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/object(_:)",
                    "title" : "func object(ObjectID) -> ObjectSnapshot",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/object(named:)",
                    "title" : "func object(named: String) -> ObjectSnapshot?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/object(stringreference:)",
                    "title" : "func object(stringReference: String) -> ObjectSnapshot?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/frame",
                "title" : "Frame",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/stableframe\/graph",
                    "title" : "var graph: any Graph",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/stableframe\/id",
                    "title" : "let id: FrameID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/stableframe\/memory",
                    "title" : "let memory: ObjectMemory",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/stableframe\/snapshots",
                    "title" : "var snapshots: [ObjectSnapshot]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/stableframe\/contains(_:)",
                    "title" : "func contains(ObjectID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/stableframe\/object(_:)",
                    "title" : "func object(ObjectID) -> ObjectSnapshot",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/assert(constraint:)",
                        "title" : "func assert(constraint: Constraint) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/brokenreferences()",
                        "title" : "func brokenReferences() -> [ObjectID]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/brokenreferences(snapshot:)",
                        "title" : "func brokenReferences(snapshot: ObjectSnapshot) -> [ObjectID]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/edge(_:)",
                        "title" : "func edge(ObjectID) -> Edge",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/filter(_:)-3i21s",
                        "title" : "func filter((ObjectSnapshot) -> Bool) -> [ObjectSnapshot]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/filter(_:)-8i9o3",
                        "title" : "func filter(any Predicate) -> [ObjectSnapshot]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/filter(component:)",
                        "title" : "func filter<T>(component: T.Type) -> [(ObjectSnapshot, T)]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/filter(trait:)",
                        "title" : "func filter(trait: Trait) -> [ObjectSnapshot]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/filter(type:)",
                        "title" : "func filter(type: ObjectType) -> [ObjectSnapshot]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/filteredges(_:)",
                        "title" : "func filterEdges((Edge) -> Bool) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/filternodes(_:)",
                        "title" : "func filterNodes((ObjectSnapshot) -> Bool) -> [Node]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/first(type:)",
                        "title" : "func first(type: ObjectType) -> ObjectSnapshot?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/hasreferentialintegrity()",
                        "title" : "func hasReferentialIntegrity() -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/neighbours(_:selector:)",
                        "title" : "func neighbours(ObjectID, selector: NeighborhoodSelector) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/node(_:)",
                        "title" : "func node(ObjectID) -> Node",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/object(named:)",
                        "title" : "func object(named: String) -> ObjectSnapshot?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/object(stringreference:)",
                        "title" : "func object(stringReference: String) -> ObjectSnapshot?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/stableframe\/frame-implementations",
                    "title" : "Frame Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/edgeids",
                        "title" : "var edgeIDs: [ObjectID]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/edges",
                        "title" : "var edges: [Edge]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/frame",
                        "title" : "var frame: any Frame",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/nodeids",
                        "title" : "var nodeIDs: [ObjectID]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/nodes",
                        "title" : "var nodes: [Node]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/prettydebugdescription",
                        "title" : "var prettyDebugDescription: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/contains(edge:)",
                        "title" : "func contains(edge: ObjectID) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/contains(node:)",
                        "title" : "func contains(node: ObjectID) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/hood(_:selector:)",
                        "title" : "func hood(ObjectID, selector: NeighborhoodSelector) -> Neighborhood",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/incoming(_:)",
                        "title" : "func incoming(ObjectID) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/neighbours(_:)",
                        "title" : "func neighbours(ObjectID) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/outgoing(_:)",
                        "title" : "func outgoing(ObjectID) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/selectedges(_:)",
                        "title" : "func selectEdges(any Predicate) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/selectnodes(_:)",
                        "title" : "func selectNodes(any Predicate) -> [Node]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/topologicalsort(_:edges:)",
                        "title" : "func topologicalSort([ObjectID], edges: [Edge]) throws -> [ObjectID]",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/stableframe\/graph-implementations",
                    "title" : "Graph Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/stableframe",
                "title" : "StableFrame",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/init(memory:id:snapshots:)",
                    "title" : "init(memory: ObjectMemory, id: FrameID, snapshots: [ObjectSnapshot]?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/haschanges",
                    "title" : "var hasChanges: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/id",
                    "title" : "let id: FrameID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/memory",
                    "title" : "let memory: ObjectMemory",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/removedobjects",
                    "title" : "var removedObjects: Set<ObjectID>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/snapshots",
                    "title" : "var snapshots: [ObjectSnapshot]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/addchild(_:to:)",
                    "title" : "func addChild(ObjectID, to: ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/contains(_:)",
                    "title" : "func contains(ObjectID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/create(_:structure:attributes:components:)",
                    "title" : "func create(ObjectType, structure: StructuralComponent?, attributes: [String : ForeignValue], components: [any Component]) -> ObjectID",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/debugprint()",
                    "title" : "func debugPrint()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/insert(_:owned:)",
                    "title" : "func insert(ObjectSnapshot, owned: Bool)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/mutableobject(_:)",
                    "title" : "func mutableObject(ObjectID) -> ObjectSnapshot",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/object(_:)",
                    "title" : "func object(ObjectID) -> ObjectSnapshot",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/promote(_:)",
                    "title" : "func promote(VersionState)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/removecascading(_:)",
                    "title" : "func removeCascading(ObjectID) -> Set<ObjectID>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/removechild(_:from:)",
                    "title" : "func removeChild(ObjectID, from: ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/removefromparent(_:)",
                    "title" : "func removeFromParent(ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/setparent(_:to:)",
                    "title" : "func setParent(ObjectID, to: ObjectID?)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/unsafeinsert(_:owned:)",
                    "title" : "func unsafeInsert(ObjectSnapshot, owned: Bool)",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/assert(constraint:)",
                        "title" : "func assert(constraint: Constraint) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/brokenreferences()",
                        "title" : "func brokenReferences() -> [ObjectID]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/brokenreferences(snapshot:)",
                        "title" : "func brokenReferences(snapshot: ObjectSnapshot) -> [ObjectID]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/edge(_:)",
                        "title" : "func edge(ObjectID) -> Edge",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/filter(_:)-4lwkz",
                        "title" : "func filter((ObjectSnapshot) -> Bool) -> [ObjectSnapshot]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/filter(_:)-5kajd",
                        "title" : "func filter(any Predicate) -> [ObjectSnapshot]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/filter(component:)",
                        "title" : "func filter<T>(component: T.Type) -> [(ObjectSnapshot, T)]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/filter(trait:)",
                        "title" : "func filter(trait: Trait) -> [ObjectSnapshot]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/filter(type:)",
                        "title" : "func filter(type: ObjectType) -> [ObjectSnapshot]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/filteredges(_:)",
                        "title" : "func filterEdges((Edge) -> Bool) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/filternodes(_:)",
                        "title" : "func filterNodes((ObjectSnapshot) -> Bool) -> [Node]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/first(type:)",
                        "title" : "func first(type: ObjectType) -> ObjectSnapshot?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/hasreferentialintegrity()",
                        "title" : "func hasReferentialIntegrity() -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/neighbours(_:selector:)",
                        "title" : "func neighbours(ObjectID, selector: NeighborhoodSelector) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/node(_:)",
                        "title" : "func node(ObjectID) -> Node",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/object(named:)",
                        "title" : "func object(named: String) -> ObjectSnapshot?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/object(stringreference:)",
                        "title" : "func object(stringReference: String) -> ObjectSnapshot?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/mutableframe\/frame-implementations",
                    "title" : "Frame Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/edgeids",
                        "title" : "var edgeIDs: [ObjectID]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/edges",
                        "title" : "var edges: [Edge]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/frame",
                        "title" : "var frame: any Frame",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/nodeids",
                        "title" : "var nodeIDs: [ObjectID]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/nodes",
                        "title" : "var nodes: [Node]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/prettydebugdescription",
                        "title" : "var prettyDebugDescription: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/contains(edge:)",
                        "title" : "func contains(edge: ObjectID) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/contains(node:)",
                        "title" : "func contains(node: ObjectID) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/hood(_:selector:)",
                        "title" : "func hood(ObjectID, selector: NeighborhoodSelector) -> Neighborhood",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/incoming(_:)",
                        "title" : "func incoming(ObjectID) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/neighbours(_:)",
                        "title" : "func neighbours(ObjectID) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/outgoing(_:)",
                        "title" : "func outgoing(ObjectID) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/selectedges(_:)",
                        "title" : "func selectEdges(any Predicate) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/selectnodes(_:)",
                        "title" : "func selectNodes(any Predicate) -> [Node]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/topologicalsort(_:edges:)",
                        "title" : "func topologicalSort([ObjectID], edges: [Edge]) throws -> [ObjectID]",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/mutableframe\/graph-implementations",
                    "title" : "Graph Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/createedge(_:origin:target:)",
                        "title" : "func createEdge(ObjectType, origin: ObjectID, target: ObjectID) -> ObjectID",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/createedge(_:origin:target:attributes:components:)",
                        "title" : "func createEdge(ObjectType, origin: ObjectID, target: ObjectID, attributes: [String : ForeignValue], components: [any Component]) -> ObjectID",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/createnode(_:)",
                        "title" : "func createNode(ObjectType) -> ObjectID",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/createnode(_:name:attributes:components:)",
                        "title" : "func createNode(ObjectType, name: String?, attributes: [String : ForeignValue], components: [any Component]) -> ObjectID",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/insert(_:)-5wb8z",
                        "title" : "func insert(Edge)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/insert(_:)-8vhc8",
                        "title" : "func insert(Node)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/remove(edge:)",
                        "title" : "func remove(edge: ObjectID)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/remove(node:)",
                        "title" : "func remove(node: ObjectID)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/removeall()",
                        "title" : "func removeAll()",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/mutableframe\/mutablegraph-implementations",
                    "title" : "MutableGraph Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/mutableframe",
                "title" : "MutableFrame",
                "type" : "class"
              },
              {
                "path" : "\/documentation\/poieticcore\/frameid",
                "title" : "FrameID",
                "type" : "typealias"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/identitygenerator\/markused(_:)",
                    "title" : "func markUsed(ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/identitygenerator\/next()",
                    "title" : "func next() -> ObjectID",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/identitygenerator",
                "title" : "IdentityGenerator",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/sequentialidgenerator\/init(_:)",
                    "title" : "init(UInt64)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/sequentialidgenerator\/markused(_:)",
                    "title" : "func markUsed(ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/sequentialidgenerator\/next()",
                    "title" : "func next() -> ObjectID",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/sequentialidgenerator",
                "title" : "SequentialIDGenerator",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/versionstate\/_(_:_:)-9u9qu",
                    "title" : "static func < (VersionState, VersionState) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/versionstate\/stable",
                    "title" : "case stable",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/versionstate\/transient",
                    "title" : "case transient",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/versionstate\/validated",
                    "title" : "case validated",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/versionstate\/canderive",
                    "title" : "var canDerive: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/versionstate\/ismutable",
                    "title" : "var isMutable: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/versionstate\/'...(_:)-4ciq3",
                        "title" : "static func ... (Self) -> PartialRangeFrom<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/versionstate\/'...(_:)-9kg8s",
                        "title" : "static func ... (Self) -> PartialRangeThrough<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/versionstate\/'...(_:_:)",
                        "title" : "static func ... (Self, Self) -> ClosedRange<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/versionstate\/'.._(_:)",
                        "title" : "static func ..< (Self) -> PartialRangeUpTo<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/versionstate\/'.._(_:_:)",
                        "title" : "static func ..< (Self, Self) -> Range<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/versionstate\/_(_:_:)-42g4d",
                        "title" : "static func > (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/versionstate\/_=(_:_:)-2v90h",
                        "title" : "static func >= (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/versionstate\/_=(_:_:)-8g7xr",
                        "title" : "static func <= (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/versionstate\/comparable-implementations",
                    "title" : "Comparable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/versionstate\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/versionstate\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/versionstate",
                "title" : "VersionState",
                "type" : "enum"
              },
              {
                "title" : "Object",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/init(id:snapshotid:type:structure:attributes:components:)",
                    "title" : "init(id: ObjectID, snapshotID: SnapshotID, type: ObjectType, structure: StructuralComponent, attributes: [String : ForeignValue], components: [any Component])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/attributes",
                    "title" : "var attributes: [String : ForeignValue]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/children",
                    "title" : "var children: ChildrenSet",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/components",
                    "title" : "var components: ComponentSet",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/debugid",
                    "title" : "var debugID: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/hasissues",
                    "title" : "var hasIssues: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/id-swift.property",
                    "title" : "let id: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/inspectablecomponents",
                    "title" : "var inspectableComponents: [any InspectableComponent]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/issues",
                    "title" : "var issues: [any Error]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/name",
                    "title" : "var name: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/parent",
                    "title" : "var parent: ObjectID?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/position",
                    "title" : "var position: Point?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/prettydescription",
                    "title" : "var prettyDescription: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/snapshotid",
                    "title" : "let snapshotID: SnapshotID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/state",
                    "title" : "var state: VersionState",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/structure",
                    "title" : "var structure: StructuralComponent",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/type",
                    "title" : "let type: ObjectType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/appendissue(_:)",
                    "title" : "func appendIssue(any Error)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/attribute(forkey:)",
                    "title" : "func attribute(forKey: String) -> ForeignValue?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/foreignrecord()",
                    "title" : "func foreignRecord() -> ForeignRecord",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/promote(_:)",
                    "title" : "func promote(VersionState)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/removeallissues()",
                    "title" : "func removeAllIssues()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/removeattribute(forkey:)",
                    "title" : "func removeAttribute(forKey: String)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/setattribute(value:forkey:)",
                    "title" : "func setAttribute(value: ForeignValue, forKey: String)",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/subscript(_:)-1ik6v",
                    "title" : "subscript(String) -> (ForeignValue)?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/subscript(_:)-3b9l1",
                    "title" : "subscript<T>(T.Type) -> T?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/subscript(_:)-4wdrq",
                    "title" : "subscript(any Component.Type) -> (any Component)?",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/id-swift.typealias",
                    "title" : "ObjectSnapshot.ID",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/reservedattributenames",
                    "title" : "static let ReservedAttributeNames: [String]",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/objectsnapshot",
                "title" : "ObjectSnapshot",
                "type" : "class"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectid",
                "title" : "ObjectID",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/poieticcore\/snapshotid",
                "title" : "SnapshotID",
                "type" : "typealias"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuralcomponent\/edge(_:_:)",
                    "title" : "case edge(ObjectID, ObjectID)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuralcomponent\/node",
                    "title" : "case node",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuralcomponent\/unstructured",
                    "title" : "case unstructured",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuralcomponent\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuralcomponent\/type",
                    "title" : "var type: StructuralType",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/structuralcomponent\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/structuralcomponent\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/structuralcomponent",
                "title" : "StructuralComponent",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuraltype\/edge",
                    "title" : "case edge",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuraltype\/node",
                    "title" : "case node",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuraltype\/unstructured",
                    "title" : "case unstructured",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuraltype\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/structuraltype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/structuraltype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/structuraltype\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/structuraltype\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/structuraltype\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/structuraltype",
                "title" : "StructuralType",
                "type" : "enum"
              },
              {
                "path" : "\/documentation\/poieticcore\/childrenset",
                "title" : "ChildrenSet",
                "type" : "typealias"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectprotocol\/id",
                    "title" : "var id: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectprotocol\/name",
                    "title" : "var name: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectprotocol\/type",
                    "title" : "var type: ObjectType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectprotocol\/attribute(forkey:)",
                    "title" : "func attribute(forKey: String) -> ForeignValue?",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectprotocol\/subscript(_:)",
                    "title" : "subscript<T>(T.Type) -> T?",
                    "type" : "subscript"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/objectprotocol",
                "title" : "ObjectProtocol",
                "type" : "protocol"
              },
              {
                "title" : "Component",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/component",
                "title" : "Component",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/init(_:)",
                    "title" : "init([any Component])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/count",
                    "title" : "var count: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/has(_:)",
                    "title" : "func has(any Component.Type) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/remove(_:)",
                    "title" : "func remove(any Component.Type)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/removeall()",
                    "title" : "func removeAll()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/set(_:)-5rqbo",
                    "title" : "func set(any Component)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/set(_:)-7o58e",
                    "title" : "func set([any Component])",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-5d8h6",
                    "title" : "subscript<T>(T.Type) -> T?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-7cqju",
                    "title" : "subscript(any Component.Type) -> (any Component)?",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/endindex",
                        "title" : "var endIndex: ComponentSet.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/first",
                        "title" : "var first: Self.Element?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/indices",
                        "title" : "var indices: DefaultIndices<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/isempty",
                        "title" : "var isEmpty: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/startindex",
                        "title" : "var startIndex: ComponentSet.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/underestimatedcount",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/distance(from:to:)",
                        "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/droplast(_:)",
                        "title" : "func dropLast(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/firstindex(where:)",
                        "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/formindex(_:offsetby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/formindex(_:offsetby:limitedby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/formindex(after:)",
                        "title" : "func formIndex(after: inout Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/index(_:offsetby:)",
                        "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/index(_:offsetby:limitedby:)",
                        "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/index(after:)",
                        "title" : "func index(after: ComponentSet.Index) -> ComponentSet.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/makeiterator()",
                        "title" : "func makeIterator() -> IndexingIterator<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/map(_:)-8u8jc",
                        "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/prefix(_:)",
                        "title" : "func prefix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/prefix(through:)",
                        "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/prefix(upto:)",
                        "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/randomelement()",
                        "title" : "func randomElement() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/randomelement(using:)",
                        "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/suffix(_:)",
                        "title" : "func suffix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/suffix(from:)",
                        "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/trimmingprefix(while:)",
                        "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-4rn2g",
                        "title" : "subscript<R>(R) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-62pt4",
                        "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-9nfo4",
                        "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-9xnhm",
                        "title" : "subscript(ComponentSet.Index) -> any Component",
                        "type" : "subscript"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/index",
                        "title" : "ComponentSet.Index",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/componentset\/collection-implementations",
                    "title" : "Collection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/init(arrayliteral:)",
                        "title" : "init(arrayLiteral: any ComponentSet.ArrayLiteralElement...)",
                        "type" : "init"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/arrayliteralelement",
                        "title" : "ComponentSet.ArrayLiteralElement",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/componentset\/expressiblebyarrayliteral-implementations",
                    "title" : "ExpressibleByArrayLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/publisher",
                        "title" : "var publisher: Publishers.Sequence<Self, Never>",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/compare(_:_:)",
                        "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/filter(_:)-44vw0",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/filter(_:)-68t0j",
                        "title" : "func filter(Predicate<Self.Element>) throws -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/flatmap(_:)-4lcj",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/flatmap(_:)-5cxck",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/formatted(_:)",
                        "title" : "func formatted<S>(S) -> S.FormatOutput",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/map(_:)-4rjo",
                        "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/reversed()",
                        "title" : "func reversed() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/sorted(using:)-14mv4",
                        "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/sorted(using:)-8ong7",
                        "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/componentset\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/componentset",
                "title" : "ComponentSet",
                "type" : "struct"
              }
            ],
            "path" : "\/documentation\/poieticcore\/memory",
            "title" : "Object Memory",
            "type" : "symbol"
          },
          {
            "children" : [
              {
                "title" : "Metamodel and Object Types",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/init(traits:objecttypes:variables:constraints:)",
                    "title" : "init(traits: [Trait], objectTypes: [ObjectType], variables: [BuiltinVariable], constraints: [Constraint])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/constraints",
                    "title" : "let constraints: [Constraint]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/objecttypes",
                    "title" : "let objectTypes: [ObjectType]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/traits",
                    "title" : "let traits: [Trait]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/variablenames",
                    "title" : "var variableNames: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/variables",
                    "title" : "let variables: [BuiltinVariable]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/objecttype(name:)",
                    "title" : "func objectType(name: String) -> ObjectType?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/metamodel",
                "title" : "Metamodel",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/init(name:label:structuraltype:plane:traits:abstract:)",
                    "title" : "init(name: String, label: String?, structuralType: StructuralType, plane: Plane, traits: [Trait], abstract: String?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/abstract",
                    "title" : "let abstract: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/attributes",
                    "title" : "let attributes: [Attribute]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/label",
                    "title" : "let label: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/plane",
                    "title" : "let plane: Plane",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/structuraltype",
                    "title" : "let structuralType: StructuralType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/traits",
                    "title" : "let traits: [Trait]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/attribute(_:)",
                    "title" : "func attribute(String) -> Attribute?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/hasattribute(_:)",
                    "title" : "func hasAttribute(String) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/hastrait(_:)",
                    "title" : "func hasTrait(Trait) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/trait(forattribute:)",
                    "title" : "func trait(forAttribute: String) -> Trait?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/objecttype",
                "title" : "ObjectType",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/init(name:label:attributes:abstract:plane:)",
                    "title" : "init(name: String, label: String?, attributes: [Attribute], abstract: String?, plane: Plane)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/abstract",
                    "title" : "let abstract: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/attributekeys",
                    "title" : "var attributeKeys: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/attributes",
                    "title" : "let attributes: [Attribute]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/label",
                    "title" : "let label: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/name-swift.property",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/plane",
                    "title" : "let plane: Plane",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/position",
                    "title" : "static let Position: Trait",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/trait",
                "title" : "Trait",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/init(_:type:default:optional:label:abstract:)",
                    "title" : "init(String, type: ValueType, default: ForeignValue?, optional: Bool, label: String?, abstract: String?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/abstract",
                    "title" : "let abstract: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/defaultvalue",
                    "title" : "let defaultValue: ForeignValue?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/label",
                    "title" : "let label: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/optional",
                    "title" : "let optional: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/type",
                    "title" : "let type: ValueType",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/attribute",
                "title" : "Attribute",
                "type" : "class"
              },
              {
                "title" : "Common Components and Types",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/name-swift.type.property",
                "title" : "static let Name: Trait",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/documentation",
                "title" : "static let Documentation: Trait",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/keywords",
                "title" : "static let Keywords: Trait",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/note",
                "title" : "static var Note: Trait",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/designinfo",
                "title" : "static var DesignInfo: Trait",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/designinfo",
                "title" : "static var DesignInfo: Trait",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objecttype\/designinfo",
                "title" : "static let DesignInfo: ObjectType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/audiencelevel",
                "title" : "static let AudienceLevel: Trait",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/emptymetamodel",
                "title" : "let EmptyMetamodel: Metamodel",
                "type" : "var"
              },
              {
                "path" : "\/documentation\/poieticcore\/basicmetamodel",
                "title" : "let BasicMetamodel: Metamodel",
                "type" : "var"
              }
            ],
            "path" : "\/documentation\/poieticcore\/metamodelandtypes",
            "title" : "Metamodel and Types",
            "type" : "symbol"
          },
          {
            "children" : [
              {
                "title" : "Predicates",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/predicate\/and(_:)-8pucl",
                            "title" : "func and(any Predicate) -> CompoundPredicate",
                            "type" : "method"
                          }
                        ],
                        "title" : "Predicate Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/predicate\/and(_:)-61fti",
                    "title" : "func and(any Predicate) -> CompoundPredicate",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/predicate\/match(frame:object:)",
                    "title" : "func match(frame: any Frame, object: ObjectSnapshot) -> Bool",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/predicate\/not()-6r1ul",
                            "title" : "func not() -> any Predicate",
                            "type" : "method"
                          }
                        ],
                        "title" : "Predicate Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/predicate\/not()-473jv",
                    "title" : "func not() -> any Predicate",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/predicate\/or(_:)-7gw1c",
                            "title" : "func or(any Predicate) -> CompoundPredicate",
                            "type" : "method"
                          }
                        ],
                        "title" : "Predicate Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/predicate\/or(_:)-36pow",
                    "title" : "func or(any Predicate) -> CompoundPredicate",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/predicate",
                "title" : "Predicate",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/compoundpredicate\/init(_:predicates:)",
                    "title" : "init(LogicalConnective, predicates: any Predicate...)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/compoundpredicate\/connective",
                    "title" : "let connective: LogicalConnective",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/compoundpredicate\/predicates",
                    "title" : "let predicates: [any Predicate]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/compoundpredicate\/match(frame:object:)",
                    "title" : "func match(frame: any Frame, object: ObjectSnapshot) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/compoundpredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/compoundpredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/compoundpredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/compoundpredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/compoundpredicate",
                "title" : "CompoundPredicate",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgepredicate\/init(_:origin:target:)",
                    "title" : "init((any Predicate)?, origin: (any Predicate)?, target: (any Predicate)?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgepredicate\/match(frame:object:)",
                    "title" : "func match(frame: any Frame, object: ObjectSnapshot) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/edgepredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/edgepredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/edgepredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/edgepredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/edgepredicate",
                "title" : "EdgePredicate",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/anypredicate\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/anypredicate\/match(frame:object:)",
                    "title" : "func match(frame: any Frame, object: ObjectSnapshot) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/anypredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/anypredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/anypredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/anypredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/anypredicate",
                "title" : "AnyPredicate",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/istypepredicate\/init(_:)-1toby",
                    "title" : "init([ObjectType])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/istypepredicate\/init(_:)-9kpa",
                    "title" : "init(ObjectType)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/istypepredicate\/match(frame:object:)",
                    "title" : "func match(frame: any Frame, object: ObjectSnapshot) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/istypepredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/istypepredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/istypepredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/istypepredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/istypepredicate",
                "title" : "IsTypePredicate",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/negationpredicate\/init(_:)",
                    "title" : "init(any Predicate)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/negationpredicate\/predicate",
                    "title" : "let predicate: any Predicate",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/negationpredicate\/match(frame:object:)",
                    "title" : "func match(frame: any Frame, object: ObjectSnapshot) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/negationpredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/negationpredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/negationpredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/negationpredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/negationpredicate",
                "title" : "NegationPredicate",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/init(_:)",
                    "title" : "init(any Component.Type)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/match(frame:object:)",
                    "title" : "func match(frame: any Frame, object: ObjectSnapshot) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/hascomponentpredicate",
                "title" : "HasComponentPredicate",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/allsatisfy\/init(_:)",
                    "title" : "init(any Predicate)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/allsatisfy\/predicate",
                    "title" : "let predicate: any Predicate",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/allsatisfy\/check(frame:objects:)",
                    "title" : "func check(frame: any Frame, objects: [ObjectSnapshot]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/allsatisfy",
                "title" : "AllSatisfy",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintrequirement\/check(frame:objects:)",
                    "title" : "func check(frame: any Frame, objects: [ObjectSnapshot]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/constraintrequirement",
                "title" : "ConstraintRequirement",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/logicalconnective\/and",
                    "title" : "case and",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/logicalconnective\/or",
                    "title" : "case or",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/logicalconnective\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/logicalconnective\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/logicalconnective",
                "title" : "LogicalConnective",
                "type" : "enum"
              },
              {
                "title" : "Constraints",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraint\/init(name:abstract:match:requirement:)",
                    "title" : "init(name: String, abstract: String?, match: any Predicate, requirement: any ConstraintRequirement)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraint\/abstract",
                    "title" : "let abstract: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraint\/match",
                    "title" : "let match: any Predicate",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraint\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraint\/requirement",
                    "title" : "let requirement: any ConstraintRequirement",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraint\/check(_:)",
                    "title" : "func check(any Frame) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/constraint",
                "title" : "Constraint",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeendpointtypes\/init(origin:target:edge:)",
                    "title" : "init(origin: IsTypePredicate?, target: IsTypePredicate?, edge: IsTypePredicate?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeendpointtypes\/edge",
                    "title" : "let edge: IsTypePredicate?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeendpointtypes\/origin",
                    "title" : "let origin: IsTypePredicate?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeendpointtypes\/target",
                    "title" : "let target: IsTypePredicate?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeendpointtypes\/check(frame:objects:)",
                    "title" : "func check(frame: any Frame, objects: [ObjectSnapshot]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/edgeendpointtypes",
                "title" : "EdgeEndpointTypes",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rejectall\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rejectall\/check(frame:objects:)",
                    "title" : "func check(frame: any Frame, objects: [ObjectSnapshot]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/rejectall",
                "title" : "RejectAll",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/acceptall\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/acceptall\/check(frame:objects:)",
                    "title" : "func check(frame: any Frame, objects: [ObjectSnapshot]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/acceptall",
                "title" : "AcceptAll",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintviolation\/init(constraint:objects:)",
                    "title" : "init(constraint: Constraint, objects: [ObjectID])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintviolation\/constraint",
                    "title" : "let constraint: Constraint",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintviolation\/objects",
                    "title" : "let objects: [ObjectID]",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/constraintviolation\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/constraintviolation\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/constraintviolation",
                "title" : "ConstraintViolation",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/uniqueneighbourrequirement\/init(_:required:)",
                    "title" : "init(NeighborhoodSelector, required: Bool)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/uniqueneighbourrequirement\/isrequired",
                    "title" : "let isRequired: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/uniqueneighbourrequirement\/selector",
                    "title" : "let selector: NeighborhoodSelector",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/uniqueneighbourrequirement\/check(frame:objects:)",
                    "title" : "func check(frame: any Frame, objects: [ObjectSnapshot]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/uniqueneighbourrequirement",
                "title" : "UniqueNeighbourRequirement",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/uniqueproperty\/init(_:)",
                    "title" : "init((ObjectSnapshot) -> Value?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/uniqueproperty\/extract",
                    "title" : "var extract: (ObjectSnapshot) -> Value?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/uniqueproperty\/check(frame:objects:)",
                    "title" : "func check(frame: any Frame, objects: [ObjectSnapshot]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/uniqueproperty",
                "title" : "UniqueProperty",
                "type" : "class"
              }
            ],
            "path" : "\/documentation\/poieticcore\/predicatesandconstraints",
            "title" : "Predicates and Constraints",
            "type" : "symbol"
          },
          {
            "children" : [
              {
                "title" : "Graph, Nodes and Edges",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/edgeids-63tny",
                            "title" : "var edgeIDs: [ObjectID]",
                            "type" : "property"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/edgeids-7ycza",
                    "title" : "var edgeIDs: [ObjectID]",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/edges-31fd4",
                            "title" : "var edges: [Edge]",
                            "type" : "property"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/edges-53jr7",
                    "title" : "var edges: [Edge]",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/frame-nrxg",
                            "title" : "var frame: any Frame",
                            "type" : "property"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/frame-7ji4z",
                    "title" : "var frame: any Frame",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/nodeids-3396q",
                            "title" : "var nodeIDs: [ObjectID]",
                            "type" : "property"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/nodeids-4afw4",
                    "title" : "var nodeIDs: [ObjectID]",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/nodes-4z20u",
                            "title" : "var nodes: [Node]",
                            "type" : "property"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/nodes-41elf",
                    "title" : "var nodes: [Node]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/graph\/prettydebugdescription",
                    "title" : "var prettyDebugDescription: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/contains(edge:)-97l6i",
                            "title" : "func contains(edge: ObjectID) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/contains(edge:)-9v9o",
                            "title" : "func contains(edge: ObjectID) -> Bool",
                            "type" : "method"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/contains(edge:)-2upzx",
                    "title" : "func contains(edge: ObjectID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/contains(node:)-80fw4",
                            "title" : "func contains(node: ObjectID) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/contains(node:)-4zshy",
                            "title" : "func contains(node: ObjectID) -> Bool",
                            "type" : "method"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/contains(node:)-34pej",
                    "title" : "func contains(node: ObjectID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/edge(_:)-74sgs",
                            "title" : "func edge(ObjectID) -> Edge",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/edge(_:)-1a5ez",
                            "title" : "func edge(ObjectID) -> Edge",
                            "type" : "method"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/edge(_:)-31vec",
                    "title" : "func edge(ObjectID) -> Edge",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/hood(_:selector:)-47x7u",
                            "title" : "func hood(ObjectID, selector: NeighborhoodSelector) -> Neighborhood",
                            "type" : "method"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/hood(_:selector:)-3m41k",
                    "title" : "func hood(ObjectID, selector: NeighborhoodSelector) -> Neighborhood",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/incoming(_:)-1d1ga",
                            "title" : "func incoming(ObjectID) -> [Edge]",
                            "type" : "method"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/incoming(_:)-1tb9h",
                    "title" : "func incoming(ObjectID) -> [Edge]",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/neighbours(_:)-jblt",
                            "title" : "func neighbours(ObjectID) -> [Edge]",
                            "type" : "method"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/neighbours(_:)-55pd7",
                    "title" : "func neighbours(ObjectID) -> [Edge]",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/node(_:)-10660",
                            "title" : "func node(ObjectID) -> Node",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/node(_:)-6huic",
                            "title" : "func node(ObjectID) -> Node",
                            "type" : "method"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/node(_:)-82lgd",
                    "title" : "func node(ObjectID) -> Node",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/outgoing(_:)-l3sj",
                            "title" : "func outgoing(ObjectID) -> [Edge]",
                            "type" : "method"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/outgoing(_:)-6wz8l",
                    "title" : "func outgoing(ObjectID) -> [Edge]",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/selectedges(_:)-17s86",
                            "title" : "func selectEdges(any Predicate) -> [Edge]",
                            "type" : "method"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/selectedges(_:)-4ip8t",
                    "title" : "func selectEdges(any Predicate) -> [Edge]",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/selectnodes(_:)-7qxt8",
                            "title" : "func selectNodes(any Predicate) -> [Node]",
                            "type" : "method"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/selectnodes(_:)-89ih1",
                    "title" : "func selectNodes(any Predicate) -> [Node]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/graph\/topologicalsort(_:edges:)",
                    "title" : "func topologicalSort([ObjectID], edges: [Edge]) throws -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/graph",
                "title" : "Graph",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutablegraph\/createedge(_:origin:target:)",
                    "title" : "func createEdge(ObjectType, origin: ObjectID, target: ObjectID) -> ObjectID",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutablegraph\/createedge(_:origin:target:attributes:components:)",
                    "title" : "func createEdge(ObjectType, origin: ObjectID, target: ObjectID, attributes: [String : ForeignValue], components: [any Component]) -> ObjectID",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/mutablegraph\/createnode(_:)-888gn",
                            "title" : "func createNode(ObjectType) -> ObjectID",
                            "type" : "method"
                          }
                        ],
                        "title" : "MutableGraph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/mutablegraph\/createnode(_:)-jkr4",
                    "title" : "func createNode(ObjectType) -> ObjectID",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutablegraph\/createnode(_:name:attributes:components:)",
                    "title" : "func createNode(ObjectType, name: String?, attributes: [String : ForeignValue], components: [any Component]) -> ObjectID",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutablegraph\/insert(_:)-4enkr",
                    "title" : "func insert(Node)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutablegraph\/insert(_:)-9huce",
                    "title" : "func insert(Edge)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutablegraph\/remove(edge:)",
                    "title" : "func remove(edge: ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutablegraph\/remove(node:)",
                    "title" : "func remove(node: ObjectID)",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/mutablegraph\/removeall()-628za",
                            "title" : "func removeAll()",
                            "type" : "method"
                          }
                        ],
                        "title" : "MutableGraph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/mutablegraph\/removeall()-98jcu",
                    "title" : "func removeAll()",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/mutablegraph",
                "title" : "MutableGraph",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/node\/init(_:)",
                    "title" : "init?(ObjectSnapshot)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/node\/snapshot",
                    "title" : "let snapshot: ObjectSnapshot",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/node\/id",
                        "title" : "var id: ObjectID",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/node\/name",
                        "title" : "var name: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/node\/type",
                        "title" : "var type: ObjectType",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/node\/attribute(forkey:)",
                        "title" : "func attribute(forKey: String) -> ForeignValue?",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/node\/subscript(_:)",
                        "title" : "subscript<T>(T.Type) -> T?",
                        "type" : "subscript"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/node\/objectprotocol-implementations",
                    "title" : "ObjectProtocol Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/node",
                "title" : "Node",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edge\/init(_:)",
                    "title" : "init?(ObjectSnapshot)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edge\/origin",
                    "title" : "let origin: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edge\/snapshot",
                    "title" : "let snapshot: ObjectSnapshot",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edge\/target",
                    "title" : "let target: ObjectID",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/edge\/id",
                        "title" : "var id: ObjectID",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/edge\/name",
                        "title" : "var name: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/edge\/type",
                        "title" : "var type: ObjectType",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/edge\/attribute(forkey:)",
                        "title" : "func attribute(forKey: String) -> ForeignValue?",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/edge\/subscript(_:)",
                        "title" : "subscript<T>(T.Type) -> T?",
                        "type" : "subscript"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/edge\/objectprotocol-implementations",
                    "title" : "ObjectProtocol Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/edge",
                "title" : "Edge",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgedirection\/incoming",
                    "title" : "case incoming",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgedirection\/outgoing",
                    "title" : "case outgoing",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgedirection\/reversed",
                    "title" : "var reversed: EdgeDirection",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/edgedirection\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/edgedirection\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/edgedirection",
                "title" : "EdgeDirection",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/graphcycleerror\/init(edges:)",
                    "title" : "init(edges: [ObjectID])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/graphcycleerror\/edges",
                    "title" : "let edges: [ObjectID]",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/graphcycleerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graphcycleerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/graphcycleerror",
                "title" : "GraphCycleError",
                "type" : "struct"
              },
              {
                "title" : "Neighbourhoods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/neighborhood\/init(graph:nodeid:direction:edges:)",
                    "title" : "init(graph: any Graph, nodeID: ObjectID, direction: EdgeDirection, edges: [Edge])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/neighborhood\/direction",
                    "title" : "let direction: EdgeDirection",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/neighborhood\/edges",
                    "title" : "let edges: [Edge]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/neighborhood\/graph",
                    "title" : "let graph: any Graph",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/neighborhood\/nodeid",
                    "title" : "let nodeID: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/neighborhood\/nodes",
                    "title" : "var nodes: [Node]",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/neighborhood",
                "title" : "Neighborhood",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/neighborhoodselector\/init(predicate:direction:)",
                    "title" : "init(predicate: any Predicate, direction: EdgeDirection)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/neighborhoodselector\/direction",
                    "title" : "let direction: EdgeDirection",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/neighborhoodselector\/predicate",
                    "title" : "let predicate: any Predicate",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/neighborhoodselector",
                "title" : "NeighborhoodSelector",
                "type" : "class"
              }
            ],
            "path" : "\/documentation\/poieticcore\/graphs",
            "title" : "Graph",
            "type" : "symbol"
          },
          {
            "children" : [
              {
                "title" : "Foreign Value",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/array(_:)",
                    "title" : "case array([ForeignAtom])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/atom(_:)",
                    "title" : "case atom(ForeignAtom)",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/init(_:)-2173e",
                    "title" : "init(Int)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/init(_:)-2q19a",
                    "title" : "init(Double)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/init(_:)-45u2y",
                    "title" : "init(Point)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/init(_:)-4tepc",
                    "title" : "init([Point])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/init(_:)-7ln3y",
                    "title" : "init(String)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/init(_:)-8l2id",
                    "title" : "init([Double])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/init(_:)-8l4o5",
                    "title" : "init(Bool)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/init(_:)-8oklt",
                    "title" : "init(ObjectID)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/init(_:)-fatr",
                    "title" : "init([String])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/init(any:)",
                    "title" : "init?(any: Any)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/init(ids:)",
                    "title" : "init(ids: [ObjectID])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/arrayitemtype",
                    "title" : "var arrayItemType: AtomType?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/atomtype",
                    "title" : "var atomType: AtomType?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/isarray",
                    "title" : "var isArray: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/isnumeric",
                    "title" : "var isNumeric: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/valuetype",
                    "title" : "var valueType: ValueType?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/anyvalue()",
                    "title" : "func anyValue() -> Any",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/asjsonobject()",
                    "title" : "func asJSONObject() -> Any",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/boolarray()",
                    "title" : "func boolArray() throws -> [Bool]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/boolvalue()",
                    "title" : "func boolValue() throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/doublearray()",
                    "title" : "func doubleArray() throws -> [Double]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/doublevalue()",
                    "title" : "func doubleValue() throws -> Double",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/idarray()",
                    "title" : "func idArray() throws -> [ObjectID]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/idvalue()",
                    "title" : "func idValue() throws -> ObjectID",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/intarray()",
                    "title" : "func intArray() throws -> [Int]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/intvalue()",
                    "title" : "func intValue() throws -> Int",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/pointarray()",
                    "title" : "func pointArray() throws -> [Point]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/pointvalue()",
                    "title" : "func pointValue() throws -> Point",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/stringarray()",
                    "title" : "func stringArray() throws -> [String]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/stringvalue()",
                    "title" : "func stringValue() throws -> String",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/fromjson(_:)",
                    "title" : "static func fromJSON(String) throws -> ForeignValue",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignvalue\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignvalue\/encode(to:)",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/encodable-implementations",
                    "title" : "Encodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignvalue\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignvalue\/init(extendedgraphemeclusterliteral:)",
                        "title" : "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/expressiblebyextendedgraphemeclusterliteral-implementations",
                    "title" : "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignvalue\/init(floatliteral:)",
                        "title" : "init(floatLiteral: Double)",
                        "type" : "init"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignvalue\/floatliteraltype",
                        "title" : "ForeignValue.FloatLiteralType",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/expressiblebyfloatliteral-implementations",
                    "title" : "ExpressibleByFloatLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignvalue\/init(integerliteral:)",
                        "title" : "init(integerLiteral: Int)",
                        "type" : "init"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignvalue\/integerliteraltype",
                        "title" : "ForeignValue.IntegerLiteralType",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/expressiblebyintegerliteral-implementations",
                    "title" : "ExpressibleByIntegerLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignvalue\/init(stringliteral:)",
                        "title" : "init(stringLiteral: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignvalue\/stringliteraltype",
                        "title" : "ForeignValue.StringLiteralType",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/expressiblebystringliteral-implementations",
                    "title" : "ExpressibleByStringLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignvalue\/init(unicodescalarliteral:)",
                        "title" : "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/expressiblebyunicodescalarliteral-implementations",
                    "title" : "ExpressibleByUnicodeScalarLiteral Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignvalue",
                "title" : "ForeignValue",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/bool(_:)",
                    "title" : "case bool(Bool)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/double(_:)",
                    "title" : "case double(Double)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/id(_:)",
                    "title" : "case id(ObjectID)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/int(_:)",
                    "title" : "case int(Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/point(_:)",
                    "title" : "case point(Point)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/string(_:)",
                    "title" : "case string(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/init(_:)-18ij6",
                    "title" : "init(ObjectID)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/init(_:)-47uxw",
                    "title" : "init(Int)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/init(_:)-5o0r8",
                    "title" : "init(Bool)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/init(_:)-6p40z",
                    "title" : "init(Point)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/init(_:)-9e33v",
                    "title" : "init(Double)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/init(_:)-hj81",
                    "title" : "init(String)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/init(any:)",
                    "title" : "init?(any: Any)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/isnumeric",
                    "title" : "var isNumeric: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/valuetype",
                    "title" : "var valueType: AtomType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/anyvalue()",
                    "title" : "func anyValue() -> Any",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/asjsonobject()",
                    "title" : "func asJSONObject() -> Any",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/boolvalue()",
                    "title" : "func boolValue() throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/doublevalue()",
                    "title" : "func doubleValue() throws -> Double",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/idvalue()",
                    "title" : "func idValue() throws -> ObjectID",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/intvalue()",
                    "title" : "func intValue() throws -> Int",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/pointvalue()",
                    "title" : "func pointValue() throws -> Point",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/stringvalue()",
                    "title" : "func stringValue() -> String",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/fromjson(_:)",
                    "title" : "static func fromJSON(String) throws -> ForeignAtom",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignatom\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignatom\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignatom\/encode(to:)",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignatom\/encodable-implementations",
                    "title" : "Encodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignatom\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignatom\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignatom",
                "title" : "ForeignAtom",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/init(_:)",
                    "title" : "init([String : ForeignValue])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/allkeys",
                    "title" : "var allKeys: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/dictionary",
                    "title" : "var dictionary: [String : ForeignValue]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/idvalue(for:)",
                    "title" : "func IDValue(for: String) throws -> UInt64",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/idvalueifpresent(for:)",
                    "title" : "func IDValueIfPresent(for: String) throws -> UInt64?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/asjsonobject()",
                    "title" : "func asJSONObject() -> Any",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/boolvalue(for:)",
                    "title" : "func boolValue(for: String) throws -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/boolvalueifpresent(for:)",
                    "title" : "func boolValueIfPresent(for: String) throws -> Bool?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/contains(_:)",
                    "title" : "func contains(String) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/doublevalue(for:)",
                    "title" : "func doubleValue(for: String) throws -> Double",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/doublevalueifpresent(for:)",
                    "title" : "func doubleValueIfPresent(for: String) throws -> Double?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/intvalue(for:)",
                    "title" : "func intValue(for: String) throws -> Int",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/intvalueifpresent(for:)",
                    "title" : "func intValueIfPresent(for: String) throws -> Int?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/stringvalue(for:)",
                    "title" : "func stringValue(for: String) throws -> String",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/stringvalueifpresent(for:)",
                    "title" : "func stringValueIfPresent(for: String) throws -> String?",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/subscript(_:)",
                    "title" : "subscript(String) -> ForeignValue?",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/encode(to:)",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/encodable-implementations",
                    "title" : "Encodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/==(_:_:)",
                        "title" : "static func == (ForeignRecord, ForeignRecord) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/publisher",
                        "title" : "var publisher: Publishers.Sequence<Self, Never>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/underestimatedcount",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/compare(_:_:)",
                        "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> DropFirstSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/droplast(_:)",
                        "title" : "func dropLast(Int) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/filter(_:)-9tjtz",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/filter(_:)-9ts4z",
                        "title" : "func filter(Predicate<Self.Element>) throws -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/flatmap(_:)-17wbo",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/flatmap(_:)-2qh47",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/formatted(_:)",
                        "title" : "func formatted<S>(S) -> S.FormatOutput",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/makeiterator()",
                        "title" : "func makeIterator() -> ForeignRecord.Iterator",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/map(_:)",
                        "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/prefix(_:)",
                        "title" : "func prefix(Int) -> PrefixSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/reversed()",
                        "title" : "func reversed() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/sorted(using:)-2g2s5",
                        "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/sorted(using:)-5d8nr",
                        "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/suffix(_:)",
                        "title" : "func suffix(Int) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/iterator",
                        "title" : "ForeignRecord.Iterator",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignrecord",
                "title" : "ForeignRecord",
                "type" : "struct"
              },
              {
                "path" : "\/documentation\/poieticcore\/attributekey",
                "title" : "AttributeKey",
                "type" : "typealias"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/keyedattributes\/attributekeys",
                    "title" : "var attributeKeys: [AttributeKey]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/keyedattributes\/attribute(forkey:)",
                    "title" : "func attribute(forKey: String) -> ForeignValue?",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/keyedattributes\/dictionary(withkeys:)-8fe4k",
                            "title" : "func dictionary(withKeys: [AttributeKey]) -> [AttributeKey : ForeignValue]",
                            "type" : "method"
                          }
                        ],
                        "title" : "KeyedAttributes Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/keyedattributes\/dictionary(withkeys:)-511xu",
                    "title" : "func dictionary(withKeys: [AttributeKey]) -> [AttributeKey : ForeignValue]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/keyedattributes",
                "title" : "KeyedAttributes",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecorderror\/typemismatch(_:_:)",
                    "title" : "case typeMismatch(String, String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecorderror\/unknownkey(_:)",
                    "title" : "case unknownKey(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecorderror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignrecorderror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignrecorderror",
                "title" : "ForeignRecordError",
                "type" : "enum"
              },
              {
                "title" : "Object Import and Export",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframereader\/init(data:memory:)",
                    "title" : "convenience init(data: Data, memory: ObjectMemory) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframereader\/init(info:memory:)",
                    "title" : "init(info: ForeignFrameInfo, memory: ObjectMemory)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframereader\/init(path:memory:)",
                    "title" : "convenience init(path: String, memory: ObjectMemory) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframereader\/info",
                    "title" : "let info: ForeignFrameInfo",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframereader\/memory",
                    "title" : "let memory: ObjectMemory",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframereader\/metamodel",
                    "title" : "var metamodel: Metamodel",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframereader\/references",
                    "title" : "var references: [String : ObjectID]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframereader\/read(_:into:)-3fzac",
                    "title" : "func read(Data, into: MutableFrame) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframereader\/read(_:into:)-65epr",
                    "title" : "func read([ForeignObject], into: MutableFrame) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignframereader",
                "title" : "ForeignFrameReader",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframebundle\/init(path:)",
                    "title" : "convenience init(path: String) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframebundle\/init(url:)",
                    "title" : "init(url: URL) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframebundle\/collectionnames",
                    "title" : "var collectionNames: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframebundle\/info",
                    "title" : "let info: ForeignFrameInfo",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframebundle\/url",
                    "title" : "let url: URL",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframebundle\/objects(in:)",
                    "title" : "func objects(in: String) throws -> [ForeignObject]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframebundle\/urlforobjectcollection(_:)",
                    "title" : "func urlForObjectCollection(String) -> URL",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignframebundle",
                "title" : "ForeignFrameBundle",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframeinfo\/init(from:)",
                    "title" : "init(from: any Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframeinfo\/collections",
                    "title" : "let collections: [String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframeinfo\/frameformatversion",
                    "title" : "let frameFormatVersion: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframeinfo\/metadata",
                    "title" : "let metadata: [String : ForeignValue]?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignframeinfo",
                "title" : "ForeignFrameInfo",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobject\/init(from:)",
                    "title" : "init(from: any Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobject\/attributes",
                    "title" : "let attributes: ForeignRecord?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobject\/children",
                    "title" : "let children: [String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobject\/id",
                    "title" : "let id: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobject\/name",
                    "title" : "let name: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobject\/origin",
                    "title" : "let origin: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobject\/snapshotid",
                    "title" : "let snapshotID: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobject\/target",
                    "title" : "let target: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobject\/type",
                    "title" : "let type: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignobject\/codingkeys\/attributes",
                        "title" : "case attributes",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignobject\/codingkeys\/children",
                        "title" : "case children",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignobject\/codingkeys\/id",
                        "title" : "case id",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignobject\/codingkeys\/name",
                        "title" : "case name",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignobject\/codingkeys\/origin",
                        "title" : "case origin",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignobject\/codingkeys\/snapshotid",
                        "title" : "case snapshotID",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignobject\/codingkeys\/target",
                        "title" : "case target",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignobject\/codingkeys\/type",
                        "title" : "case type",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignobject\/codingkeys\/init(intvalue:)",
                        "title" : "init?(intValue: Int)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignobject\/codingkeys\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignobject\/codingkeys\/init(stringvalue:)",
                        "title" : "init?(stringValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/foreignobject\/codingkeys\/debugdescription",
                            "title" : "var debugDescription: String",
                            "type" : "property"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/foreignobject\/codingkeys\/description",
                            "title" : "var description: String",
                            "type" : "property"
                          }
                        ],
                        "path" : "\/documentation\/poieticcore\/foreignobject\/codingkeys\/codingkey-implementations",
                        "title" : "CodingKey Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/foreignobject\/codingkeys\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticcore\/foreignobject\/codingkeys\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/foreignobject\/codingkeys\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/foreignobject\/codingkeys\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/poieticcore\/foreignobject\/codingkeys\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignobject\/codingkeys",
                    "title" : "ForeignObject.CodingKeys",
                    "type" : "enum"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignobject",
                "title" : "ForeignObject",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/framereadererror\/datacorrupted",
                    "title" : "case dataCorrupted",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/framereadererror\/invalidobjectreference(_:_:_:)",
                    "title" : "case invalidObjectReference(String, String, Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/framereadererror\/invalidstructuralkeypresent(_:_:_:)",
                    "title" : "case invalidStructuralKeyPresent(String, StructuralType, Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/framereadererror\/objectpropertynotfound(_:_:)",
                    "title" : "case objectPropertyNotFound(String, Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/framereadererror\/propertynotfound(_:)",
                    "title" : "case propertyNotFound(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/framereadererror\/typemismatch(_:)",
                    "title" : "case typeMismatch([String])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/framereadererror\/unknownobjecttype(_:_:)",
                    "title" : "case unknownObjectType(String, Int)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/framereadererror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/framereadererror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/framereadererror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/framereadererror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/framereadererror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/framereadererror",
                "title" : "FrameReaderError",
                "type" : "enum"
              },
              {
                "title" : "CSV Reading and Writing",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/init(_:fields:options:)",
                    "title" : "init(String, fields: [String]?, options: CSVOptions) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/next()",
                    "title" : "func next() -> ForeignRecord?",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/publisher",
                        "title" : "var publisher: Publishers.Sequence<Self, Never>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/underestimatedcount",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/compare(_:_:)",
                        "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/contains(_:)",
                        "title" : "func contains(Self.Element) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> DropFirstSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/droplast(_:)",
                        "title" : "func dropLast(Int) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/elementsequal(_:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/filter(_:)-3af86",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/filter(_:)-4gppa",
                        "title" : "func filter(Predicate<Self.Element>) throws -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/flatmap(_:)-3oq6e",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/flatmap(_:)-8remy",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/formatted(_:)",
                        "title" : "func formatted<S>(S) -> S.FormatOutput",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/joined()",
                        "title" : "func joined() -> FlattenSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/joined(separator:)",
                        "title" : "func joined<Separator>(separator: Separator) -> JoinedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/makeiterator()",
                        "title" : "func makeIterator() -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/map(_:)",
                        "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/prefix(_:)",
                        "title" : "func prefix(Int) -> PrefixSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/reversed()",
                        "title" : "func reversed() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/sorted(using:)-5b172",
                        "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/sorted(using:)-94azp",
                        "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/split(separator:maxsplits:omittingemptysubsequences:)",
                        "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/starts(with:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/suffix(_:)",
                        "title" : "func suffix(Int) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/csvforeignrecordreader",
                "title" : "CSVForeignRecordReader",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvformatter\/init(options:)",
                    "title" : "init(options: CSVOptions)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvformatter\/options",
                    "title" : "let options: CSVOptions",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvformatter\/format(_:)",
                    "title" : "func format([String]) -> String",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvformatter\/quote(_:)",
                    "title" : "func quote(String) -> String",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/csvformatter",
                "title" : "CSVFormatter",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvoptions\/init(fielddelimiter:recorddelimiter:)",
                    "title" : "init(fieldDelimiter: Character, recordDelimiter: Character)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvoptions\/fielddelimiter",
                    "title" : "let fieldDelimiter: Character",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvoptions\/recorddelimiter",
                    "title" : "let recordDelimiter: Character",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/csvoptions",
                "title" : "CSVOptions",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvwriter\/init(_:formatter:)",
                    "title" : "init(FileDescriptor, formatter: CSVFormatter) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvwriter\/init(path:formatter:)",
                    "title" : "convenience init(path: String, formatter: CSVFormatter) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvwriter\/close()",
                    "title" : "func close() throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvwriter\/write(row:)",
                    "title" : "func write(row: [String]) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/csvwriter",
                "title" : "CSVWriter",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csverror\/headerexpected",
                    "title" : "case headerExpected",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csverror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csverror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/csverror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csverror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/csverror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/csverror",
                "title" : "CSVError",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/poieticcore\/foreigninterfaces",
            "title" : "Foreign Interfaces",
            "type" : "symbol"
          },
          {
            "children" : [
              {
                "title" : "Arithmetic Expression",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/binary(_:_:_:)",
                    "title" : "case binary(ArithmeticExpression<L, V, F>.FunctionReference, ArithmeticExpression<L, V, F>, ArithmeticExpression<L, V, F>)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/function(_:_:)",
                    "title" : "case function(ArithmeticExpression<L, V, F>.FunctionReference, [ArithmeticExpression<L, V, F>])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/unary(_:_:)",
                    "title" : "case unary(ArithmeticExpression<L, V, F>.FunctionReference, ArithmeticExpression<L, V, F>)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/value(_:)",
                    "title" : "case value(ArithmeticExpression<L, V, F>.LiteralValue)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/variable(_:)",
                    "title" : "case variable(ArithmeticExpression<L, V, F>.VariableReference)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/allvariables",
                    "title" : "var allVariables: [ArithmeticExpression<L, V, F>.VariableReference]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/children",
                    "title" : "var children: [ArithmeticExpression<L, V, F>]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/valuetype",
                    "title" : "var valueType: AtomType",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/functionreference",
                    "title" : "ArithmeticExpression.FunctionReference",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/literalvalue",
                    "title" : "ArithmeticExpression.LiteralValue",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/variablereference",
                    "title" : "ArithmeticExpression.VariableReference",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/arithmeticexpression\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/arithmeticexpression\/==(_:_:)",
                        "title" : "static func == (ArithmeticExpression<L, V, F>, ArithmeticExpression<L, V, F>) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/arithmeticexpression",
                "title" : "ArithmeticExpression",
                "type" : "enum"
              },
              {
                "path" : "\/documentation\/poieticcore\/unboundexpression",
                "title" : "UnboundExpression",
                "type" : "typealias"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/builtinvariable\/==(_:_:)",
                    "title" : "static func == (BuiltinVariable, BuiltinVariable) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/builtinvariable\/init(name:value:abstract:)",
                    "title" : "init(name: String, value: ForeignValue?, abstract: String?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/builtinvariable\/abstract",
                    "title" : "let abstract: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/builtinvariable\/initialvalue",
                    "title" : "let initialValue: ForeignValue?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/builtinvariable\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/builtinvariable\/valuetype",
                    "title" : "let valueType: AtomType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/builtinvariable\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/builtinvariable\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/builtinvariable\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/builtinvariable",
                "title" : "BuiltinVariable",
                "type" : "class"
              },
              {
                "path" : "\/documentation\/poieticcore\/bindexpression(_:variables:functions:)",
                "title" : "func bindExpression<V>(UnboundExpression, variables: [String : V], functions: [String : any FunctionProtocol]) throws -> ArithmeticExpression<ForeignValue, V, any FunctionProtocol>",
                "type" : "func"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionerror\/functionerror(_:)",
                    "title" : "case functionError(FunctionError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionerror\/unknownfunction(_:)",
                    "title" : "case unknownFunction(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionerror\/unknownvariable(_:)",
                    "title" : "case unknownVariable(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressionerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/expressionerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/expressionerror",
                "title" : "ExpressionError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/expressionexpected",
                    "title" : "case expressionExpected",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/invalidcharacterinnumber",
                    "title" : "case invalidCharacterInNumber",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/missingrightparenthesis",
                    "title" : "case missingRightParenthesis",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/numberexpected",
                    "title" : "case numberExpected",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/unexpectedcharacter",
                    "title" : "case unexpectedCharacter",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/unexpectedtoken",
                    "title" : "case unexpectedToken",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/expressionsyntaxerror",
                "title" : "ExpressionSyntaxError",
                "type" : "enum"
              },
              {
                "title" : "Functions",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionprotocol\/name",
                    "title" : "var name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionprotocol\/signature",
                    "title" : "var signature: Signature",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionprotocol\/apply(_:)",
                    "title" : "func apply([ForeignValue]) throws -> ForeignValue",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/functionprotocol\/description",
                        "title" : "var description: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/functionprotocol\/customstringconvertible-implementations",
                    "title" : "CustomStringConvertible Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/functionprotocol",
                "title" : "FunctionProtocol",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericfunction\/==(_:_:)",
                    "title" : "static func == (NumericFunction, NumericFunction) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericfunction\/init(name:signature:implementation:)",
                    "title" : "init(name: String, signature: Signature, implementation: NumericFunction.Implementation)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericfunction\/implementation-swift.property",
                    "title" : "let implementation: NumericFunction.Implementation",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericfunction\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericfunction\/signature",
                    "title" : "let signature: Signature",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericfunction\/apply(_:)",
                    "title" : "func apply([ForeignValue]) throws -> ForeignValue",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericfunction\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericfunction\/implementation-swift.typealias",
                    "title" : "NumericFunction.Implementation",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/numericfunction\/description",
                        "title" : "var description: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/numericfunction\/customstringconvertible-implementations",
                    "title" : "CustomStringConvertible Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/numericfunction\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/numericfunction\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/numericfunction",
                "title" : "NumericFunction",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericunaryfunction\/==(_:_:)",
                    "title" : "static func == (NumericUnaryFunction, NumericUnaryFunction) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericunaryfunction\/init(name:argumentname:implementation:)",
                    "title" : "init(name: String, argumentName: String, implementation: NumericUnaryFunction.Implementation)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericunaryfunction\/implementation-swift.property",
                    "title" : "let implementation: NumericUnaryFunction.Implementation",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericunaryfunction\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericunaryfunction\/signature",
                    "title" : "let signature: Signature",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericunaryfunction\/apply(_:)",
                    "title" : "func apply([ForeignValue]) throws -> ForeignValue",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericunaryfunction\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericunaryfunction\/implementation-swift.typealias",
                    "title" : "NumericUnaryFunction.Implementation",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/numericunaryfunction\/description",
                        "title" : "var description: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/numericunaryfunction\/customstringconvertible-implementations",
                    "title" : "CustomStringConvertible Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/numericunaryfunction\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/numericunaryfunction\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/numericunaryfunction",
                "title" : "NumericUnaryFunction",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/==(_:_:)",
                    "title" : "static func == (NumericBinaryFunction, NumericBinaryFunction) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/init(name:implementation:)",
                    "title" : "init(name: String, implementation: NumericBinaryFunction.Implementation)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/implementation-swift.property",
                    "title" : "let implementation: NumericBinaryFunction.Implementation",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/signature",
                    "title" : "let signature: Signature",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/apply(_:)",
                    "title" : "func apply([ForeignValue]) throws -> ForeignValue",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/implementation-swift.typealias",
                    "title" : "NumericBinaryFunction.Implementation",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/description",
                        "title" : "var description: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/customstringconvertible-implementations",
                    "title" : "CustomStringConvertible Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/numericbinaryfunction",
                "title" : "NumericBinaryFunction",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionerror\/invalidnumberofarguments(_:_:)",
                    "title" : "case invalidNumberOfArguments(Int, Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionerror\/typemismatch(_:_:)",
                    "title" : "case typeMismatch(Int, String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionerror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/functionerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/functionerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/functionerror",
                "title" : "FunctionError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/argumenttype\/any",
                    "title" : "case any",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/argumenttype\/concrete(_:)",
                    "title" : "case concrete(AtomType)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/argumenttype\/union(_:)",
                    "title" : "case union([AtomType])",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/argumenttype\/matches(_:)",
                    "title" : "func matches(AtomType) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/argumenttype\/numeric",
                    "title" : "static let numeric: ArgumentType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/argumenttype\/objectreference",
                    "title" : "static let objectReference: ArgumentType",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/argumenttype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/argumenttype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/argumenttype",
                "title" : "ArgumentType",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/init(_:variadic:returns:)",
                    "title" : "init([FunctionArgument], variadic: FunctionArgument?, returns: AtomType?)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/init(numeric:)",
                    "title" : "convenience init(numeric: [String])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/init(numericvariadic:)",
                    "title" : "convenience init(numericVariadic: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/isvariadic",
                    "title" : "var isVariadic: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/minimalargumentcount",
                    "title" : "var minimalArgumentCount: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/positional",
                    "title" : "let positional: [FunctionArgument]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/returntype",
                    "title" : "var returnType: AtomType?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/variadic",
                    "title" : "let variadic: FunctionArgument?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/validate(_:)",
                    "title" : "func validate([AtomType]) -> Signature.ValidationResult",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/numericunary",
                    "title" : "static let NumericUnary: Signature",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/numericvariadic",
                    "title" : "static let NumericVariadic: Signature",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/void",
                    "title" : "static let Void: Signature",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/signature\/validationresult\/invalidnumberofarguments",
                        "title" : "case invalidNumberOfArguments",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/signature\/validationresult\/ok",
                        "title" : "case ok",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/signature\/validationresult\/typemismatch(_:)",
                        "title" : "case typeMismatch([Int])",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/signature\/validationresult\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticcore\/signature\/validationresult\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/signature\/validationresult",
                    "title" : "Signature.ValidationResult",
                    "type" : "enum"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/signature",
                "title" : "Signature",
                "type" : "class"
              },
              {
                "title" : "Parsing",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Associated Types",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/lexer\/tokentype",
                    "title" : "TokenType",
                    "type" : "associatedtype"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/lexer\/atend-5lkrl",
                            "title" : "var atEnd: Bool",
                            "type" : "property"
                          }
                        ],
                        "title" : "Lexer Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/lexer\/atend-5zjy4",
                    "title" : "var atEnd: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/lexer\/scanner",
                    "title" : "var scanner: Scanner",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/lexer\/acceptleadingtrivia()",
                    "title" : "func acceptLeadingTrivia()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/lexer\/accepttoken()",
                    "title" : "func acceptToken() -> Self.TokenType?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/lexer\/accepttrailingtrivia()",
                    "title" : "func acceptTrailingTrivia()",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/lexer\/next()-2ucgz",
                            "title" : "func next() -> Token<Self.TokenType>",
                            "type" : "method"
                          }
                        ],
                        "title" : "Lexer Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/lexer\/next()-2g4r7",
                    "title" : "func next() -> Token<Self.TokenType>",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/lexer",
                "title" : "Lexer",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/scanner\/init(string:)",
                    "title" : "init(string: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/scanner\/currentindex",
                    "title" : "var currentIndex: String.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/scanner\/endindex",
                    "title" : "let endIndex: String.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/scanner\/source",
                    "title" : "let source: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/scanner",
                "title" : "Scanner",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionparser\/init(lexer:)",
                    "title" : "init(lexer: ExpressionLexer)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionparser\/init(string:)",
                    "title" : "convenience init(string: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionparser\/atend",
                    "title" : "var atEnd: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionparser\/parse()",
                    "title" : "func parse() throws -> UnboundExpression",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/expressionparser",
                "title" : "ExpressionParser",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionlexer\/init(scanner:)",
                    "title" : "init(scanner: Scanner)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionlexer\/init(string:)",
                    "title" : "convenience init(string: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionlexer\/scanner",
                    "title" : "var scanner: Scanner",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionlexer\/accepttoken()",
                    "title" : "func acceptToken() -> ExpressionTokenType?",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionlexer\/tokentype",
                    "title" : "ExpressionLexer.TokenType",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressionlexer\/atend",
                        "title" : "var atEnd: Bool",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressionlexer\/acceptleadingtrivia()",
                        "title" : "func acceptLeadingTrivia()",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressionlexer\/accepttrailingtrivia()",
                        "title" : "func acceptTrailingTrivia()",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressionlexer\/next()",
                        "title" : "func next() -> Token<Self.TokenType>",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/expressionlexer\/lexer-implementations",
                    "title" : "Lexer Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/expressionlexer",
                "title" : "ExpressionLexer",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/textlocation\/init(line:column:index:)",
                    "title" : "init(line: Int, column: Int, index: String.Index)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/textlocation\/init(string:index:)",
                    "title" : "init(string: String, index: String.Index)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/textlocation\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/textlocation\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/textlocation\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/textlocation",
                "title" : "TextLocation",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/init(type:source:range:leadingtriviarange:trailingtriviarange:textlocation:)",
                    "title" : "init(type: Token<T>.TokenType, source: String, range: Range<String.Index>, leadingTriviaRange: Range<String.Index>?, trailingTriviaRange: Range<String.Index>?, textLocation: TextLocation)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/leadingtrivia",
                    "title" : "let leadingTrivia: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/leadingtriviarange",
                    "title" : "let leadingTriviaRange: Range<String.Index>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/range",
                    "title" : "let range: Range<String.Index>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/text",
                    "title" : "let text: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/textlocation",
                    "title" : "let textLocation: TextLocation",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/trailingtrivia",
                    "title" : "let trailingTrivia: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/trailingtriviarange",
                    "title" : "let trailingTriviaRange: Range<String.Index>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/type",
                    "title" : "let type: T",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/tokentype",
                    "title" : "Token.TokenType",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/token\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/token\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/token",
                "title" : "Token",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/comma",
                    "title" : "case comma",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/double",
                    "title" : "case double",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/empty",
                    "title" : "case empty",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/error(_:)",
                    "title" : "case error(ExpressionSyntaxError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/identifier",
                    "title" : "case identifier",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/int",
                    "title" : "case int",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/leftparen",
                    "title" : "case leftParen",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/operator",
                    "title" : "case `operator`",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/rightparen",
                    "title" : "case rightParen",
                    "type" : "case"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/tokenerror",
                    "title" : "ExpressionTokenType.TokenError",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/unexpectedcharactererror",
                    "title" : "static var unexpectedCharacterError: ExpressionTokenType",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressiontokentype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/expressiontokentype",
                "title" : "ExpressionTokenType",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/tokentypeprotocol\/empty",
                    "title" : "static var empty: Self",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/tokentypeprotocol\/unexpectedcharactererror",
                    "title" : "static var unexpectedCharacterError: Self",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/tokentypeprotocol",
                "title" : "TokenTypeProtocol",
                "type" : "protocol"
              },
              {
                "title" : "Abstract Syntax Tree",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntax\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntax\/toexpression()",
                    "title" : "func toExpression() -> UnboundExpression",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/expressionsyntax",
                "title" : "ExpressionSyntax",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/parenthesissyntax\/init(leftparen:expression:rightparen:)",
                    "title" : "init(leftParen: ExpressionToken, expression: any ExpressionSyntax, rightParen: ExpressionToken)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/parenthesissyntax\/expression",
                    "title" : "let expression: any ExpressionSyntax",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/parenthesissyntax\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/parenthesissyntax\/leftparen",
                    "title" : "let leftParen: ExpressionToken",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/parenthesissyntax\/rightparen",
                    "title" : "let rightParen: ExpressionToken",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/parenthesissyntax\/toexpression()",
                        "title" : "func toExpression() -> UnboundExpression",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/parenthesissyntax\/expressionsyntax-implementations",
                    "title" : "ExpressionSyntax Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/parenthesissyntax",
                "title" : "ParenthesisSyntax",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax\/init(op:operand:)",
                    "title" : "init(op: ExpressionToken, operand: any ExpressionSyntax)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax\/op",
                    "title" : "let op: ExpressionToken",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax\/operand",
                    "title" : "let operand: any ExpressionSyntax",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax\/toexpression()",
                        "title" : "func toExpression() -> UnboundExpression",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax\/expressionsyntax-implementations",
                    "title" : "ExpressionSyntax Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax",
                "title" : "UnaryOperatorSyntax",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/init(leftoperand:op:rightoperand:)",
                    "title" : "init(leftOperand: any ExpressionSyntax, op: ExpressionToken, rightOperand: any ExpressionSyntax)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/leftoperand",
                    "title" : "let leftOperand: any ExpressionSyntax",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/op",
                    "title" : "let op: ExpressionToken",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/rightoperand",
                    "title" : "let rightOperand: any ExpressionSyntax",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/toexpression()",
                        "title" : "func toExpression() -> UnboundExpression",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/expressionsyntax-implementations",
                    "title" : "ExpressionSyntax Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax",
                "title" : "BinaryOperatorSyntax",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variablesyntax\/init(variable:)",
                    "title" : "init(variable: ExpressionToken)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variablesyntax\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variablesyntax\/variable",
                    "title" : "let variable: ExpressionToken",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variablesyntax\/toexpression()",
                        "title" : "func toExpression() -> UnboundExpression",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variablesyntax\/expressionsyntax-implementations",
                    "title" : "ExpressionSyntax Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/variablesyntax",
                "title" : "VariableSyntax",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/literalsyntax\/init(type:literal:)",
                    "title" : "init(type: LiteralSyntax.LiteralType, literal: ExpressionToken)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/literalsyntax\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/literalsyntax\/literal",
                    "title" : "let literal: ExpressionToken",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/literalsyntax\/type",
                    "title" : "let type: LiteralSyntax.LiteralType",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/literalsyntax\/literaltype\/double",
                        "title" : "case double",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/literalsyntax\/literaltype\/int",
                        "title" : "case int",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/literalsyntax\/literaltype\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticcore\/literalsyntax\/literaltype\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/literalsyntax\/literaltype",
                    "title" : "LiteralSyntax.LiteralType",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/literalsyntax\/toexpression()",
                        "title" : "func toExpression() -> UnboundExpression",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/literalsyntax\/expressionsyntax-implementations",
                    "title" : "ExpressionSyntax Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/literalsyntax",
                "title" : "LiteralSyntax",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functioncallsyntax\/init(name:leftparen:arguments:rightparen:)",
                    "title" : "init(name: ExpressionToken, leftParen: ExpressionToken, arguments: FunctionArgumentListSyntax, rightParen: ExpressionToken)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functioncallsyntax\/arguments",
                    "title" : "let arguments: FunctionArgumentListSyntax",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functioncallsyntax\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functioncallsyntax\/leftparen",
                    "title" : "let leftParen: ExpressionToken",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functioncallsyntax\/name",
                    "title" : "let name: ExpressionToken",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functioncallsyntax\/rightparen",
                    "title" : "let rightParen: ExpressionToken",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/functioncallsyntax\/toexpression()",
                        "title" : "func toExpression() -> UnboundExpression",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/functioncallsyntax\/expressionsyntax-implementations",
                    "title" : "ExpressionSyntax Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/functioncallsyntax",
                "title" : "FunctionCallSyntax",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargumentsyntax\/init(argument:trailingcomma:)",
                    "title" : "init(argument: any ExpressionSyntax, trailingComma: ExpressionToken?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargumentsyntax\/argument",
                    "title" : "let argument: any ExpressionSyntax",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargumentsyntax\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargumentsyntax\/trailingcomma",
                    "title" : "let trailingComma: ExpressionToken?",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/functionargumentsyntax\/toexpression()",
                        "title" : "func toExpression() -> UnboundExpression",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/functionargumentsyntax\/expressionsyntax-implementations",
                    "title" : "ExpressionSyntax Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/functionargumentsyntax",
                "title" : "FunctionArgumentSyntax",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargumentlistsyntax\/init(arguments:)",
                    "title" : "init(arguments: [FunctionArgumentSyntax])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargumentlistsyntax\/arguments",
                    "title" : "let arguments: [FunctionArgumentSyntax]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargumentlistsyntax\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/functionargumentlistsyntax\/toexpression()",
                        "title" : "func toExpression() -> UnboundExpression",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/functionargumentlistsyntax\/expressionsyntax-implementations",
                    "title" : "ExpressionSyntax Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/functionargumentlistsyntax",
                "title" : "FunctionArgumentListSyntax",
                "type" : "class"
              }
            ],
            "path" : "\/documentation\/poieticcore\/formulas",
            "title" : "Formulas",
            "type" : "symbol"
          },
          {
            "title" : "Classes",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/boundneighborhood\/init(graph:nodeid:predicate:direction:)",
                "title" : "init(graph: any Graph, nodeID: ObjectID, predicate: any Predicate, direction: EdgeDirection)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/boundneighborhood\/direction",
                "title" : "let direction: EdgeDirection",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/boundneighborhood\/edges",
                "title" : "let edges: [Edge]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/boundneighborhood\/graph",
                "title" : "let graph: any Graph",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/boundneighborhood\/node",
                "title" : "let node: Node",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/boundneighborhood\/nodeid",
                "title" : "let nodeID: ObjectID",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/boundneighborhood\/nodes",
                "title" : "let nodes: [Node]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/boundneighborhood\/predicate",
                "title" : "let predicate: any Predicate",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticcore\/boundneighborhood",
            "title" : "BoundNeighborhood",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionpredicate\/init(_:)",
                "title" : "init((ObjectSnapshot) -> Bool)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionpredicate\/match(frame:object:)",
                "title" : "func match(frame: any Frame, object: ObjectSnapshot) -> Bool",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionpredicate\/and(_:)",
                    "title" : "func and(any Predicate) -> CompoundPredicate",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionpredicate\/not()",
                    "title" : "func not() -> any Predicate",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionpredicate\/or(_:)",
                    "title" : "func or(any Predicate) -> CompoundPredicate",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/functionpredicate\/predicate-implementations",
                "title" : "Predicate Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/functionpredicate",
            "title" : "FunctionPredicate",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/hastraitpredicate\/init(_:)",
                "title" : "init(Trait)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/hastraitpredicate\/match(frame:object:)",
                "title" : "func match(frame: any Frame, object: ObjectSnapshot) -> Bool",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/hastraitpredicate\/and(_:)",
                    "title" : "func and(any Predicate) -> CompoundPredicate",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/hastraitpredicate\/not()",
                    "title" : "func not() -> any Predicate",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/hastraitpredicate\/or(_:)",
                    "title" : "func or(any Predicate) -> CompoundPredicate",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/hastraitpredicate\/predicate-implementations",
                "title" : "Predicate Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/hastraitpredicate",
            "title" : "HasTraitPredicate",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/issuecatcher\/init(resume:)",
                "title" : "init(resume: Bool)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/issuecatcher\/catched(_:block:)",
                "title" : "func catched<T>(T, block: (() throws -> T)) throws -> T",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/issuecatcher\/catched(block:)",
                "title" : "func catched(block: (() throws -> Void)) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/issuecatcher",
            "title" : "IssueCatcher",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/makeshiftmemorystore\/init(url:)",
                "title" : "init(url: URL) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/makeshiftmemorystore\/collections",
                "title" : "var collections: [String : [ForeignRecord]]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/makeshiftmemorystore\/url",
                "title" : "let url: URL",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/makeshiftmemorystore\/fetch(_:snapshotid:)",
                "title" : "func fetch(String, snapshotID: ObjectID) throws -> ForeignRecord?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/makeshiftmemorystore\/fetchall(_:)",
                "title" : "func fetchAll(String) throws -> [ForeignRecord]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/makeshiftmemorystore\/load()",
                "title" : "func load() throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/makeshiftmemorystore\/replaceall(in:records:)",
                "title" : "func replaceAll(in: String, records: [ForeignRecord]) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/makeshiftmemorystore\/save()",
                "title" : "func save() throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/makeshiftmemorystore",
            "title" : "MakeshiftMemoryStore",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableobject\/children",
                "title" : "var children: ChildrenSet",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableobject\/frame",
                "title" : "let frame: MutableFrame",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableobject\/id",
                "title" : "let id: ObjectID",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableobject\/name",
                "title" : "var name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableobject\/parent",
                "title" : "var parent: ObjectID?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableobject\/snapshot",
                "title" : "var snapshot: ObjectSnapshot",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableobject\/type",
                "title" : "var type: ObjectType",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableobject\/attribute(forkey:)",
                "title" : "func attribute(forKey: String) -> ForeignValue?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableobject\/remove(_:)",
                "title" : "func remove(any Component.Type)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableobject\/set(_:)",
                "title" : "func set(any Component)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableobject\/setattribute(value:forkey:)",
                "title" : "func setAttribute(value: ForeignValue, forKey: AttributeKey) throws",
                "type" : "method"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableobject\/subscript(_:)",
                "title" : "subscript<T>(T.Type) -> T?",
                "type" : "subscript"
              }
            ],
            "path" : "\/documentation\/poieticcore\/mutableobject",
            "title" : "MutableObject",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/neighborhoodview\/init(graph:nodeid:predicate:direction:)",
                "title" : "init(graph: any Graph, nodeID: ObjectID, predicate: any Predicate, direction: EdgeDirection)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/neighborhoodview\/direction",
                "title" : "let direction: EdgeDirection",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/neighborhoodview\/graph",
                "title" : "let graph: any Graph",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/neighborhoodview\/node",
                "title" : "var node: Node",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/neighborhoodview\/nodeid",
                "title" : "let nodeID: ObjectID",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/neighborhoodview\/nodes",
                "title" : "var nodes: [Node]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/neighborhoodview\/predicate",
                "title" : "let predicate: any Predicate",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticcore\/neighborhoodview",
            "title" : "NeighborhoodView",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/transformationcontext\/init(frame:)",
                "title" : "init(frame: MutableFrame)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/transformationcontext\/frame",
                "title" : "let frame: MutableFrame",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/transformationcontext\/hasissues",
                "title" : "var hasIssues: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/transformationcontext\/issues",
                "title" : "var issues: [ObjectID : [any Error]]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/transformationcontext\/metamodel",
                "title" : "let metamodel: Metamodel",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/transformationcontext\/appendissue(_:for:)",
                "title" : "func appendIssue(any Error, for: ObjectID)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/transformationcontext",
            "title" : "TransformationContext",
            "type" : "class"
          },
          {
            "title" : "Protocols",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionconvertible\/toexpression",
                "title" : "var toExpression: UnboundExpression",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticcore\/expressionconvertible",
            "title" : "ExpressionConvertible",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/frametransformer\/update(_:)",
                "title" : "func update(TransformationContext)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/frametransformer",
            "title" : "FrameTransformer",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/inspectablecomponent\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/inspectablecomponent\/init(from:)",
                "title" : "init(from: ObjectSnapshot) throws",
                "type" : "init"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/inspectablecomponent\/init(record:)-685mm",
                        "title" : "init(record: ForeignRecord) throws",
                        "type" : "init"
                      }
                    ],
                    "title" : "InspectableComponent Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/inspectablecomponent\/init(record:)-2wqah",
                "title" : "init(record: ForeignRecord) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/inspectablecomponent\/componentname",
                "title" : "var componentName: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/inspectablecomponent\/attribute(forkey:)",
                "title" : "func attribute(forKey: AttributeKey) -> ForeignValue?",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/inspectablecomponent\/foreignrecord()-5gbpn",
                        "title" : "func foreignRecord() -> ForeignRecord",
                        "type" : "method"
                      }
                    ],
                    "title" : "InspectableComponent Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/inspectablecomponent\/foreignrecord()-5qlen",
                "title" : "func foreignRecord() -> ForeignRecord",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/inspectablecomponent\/setattribute(value:forkey:)",
                "title" : "func setAttribute(value: ForeignValue, forKey: AttributeKey) throws",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/inspectablecomponent\/trait",
                "title" : "static var trait: Trait",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/inspectablecomponent\/attributekeys",
                    "title" : "var attributeKeys: [String]",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/inspectablecomponent\/keyedattributes-implementations",
                "title" : "KeyedAttributes Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/inspectablecomponent",
            "title" : "InspectableComponent",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutablekeyedattributes\/setattribute(value:forkey:)",
                "title" : "func setAttribute(value: ForeignValue, forKey: AttributeKey) throws",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/mutablekeyedattributes\/setattributes(_:)-x2uj",
                        "title" : "func setAttributes([AttributeKey : ForeignValue]) throws",
                        "type" : "method"
                      }
                    ],
                    "title" : "MutableKeyedAttributes Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/mutablekeyedattributes\/setattributes(_:)-40hq7",
                "title" : "func setAttributes([AttributeKey : ForeignValue]) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/mutablekeyedattributes",
            "title" : "MutableKeyedAttributes",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableobjectprotocol\/remove(_:)",
                "title" : "func remove(any Component.Type)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableobjectprotocol\/set(_:)",
                "title" : "func set(any Component)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableobjectprotocol\/setattribute(value:forkey:)",
                "title" : "func setAttribute(value: ForeignValue, forKey: AttributeKey) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/mutableobjectprotocol",
            "title" : "MutableObjectProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectreference\/frame",
                "title" : "var frame: any Frame",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectreference\/id",
                "title" : "var id: ObjectID",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticcore\/objectreference",
            "title" : "ObjectReference",
            "type" : "protocol"
          },
          {
            "path" : "\/documentation\/poieticcore\/persistablecomponent",
            "title" : "PersistableComponent",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/typedvalue\/atomtype",
                "title" : "var atomType: AtomType?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticcore\/typedvalue",
            "title" : "TypedValue",
            "type" : "protocol"
          },
          {
            "title" : "Structures",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/poieticcore\/boundcomponent",
            "title" : "BoundComponent",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/frame",
                "title" : "var frame: MutableFrame",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/next()",
                "title" : "func next() -> T?",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/lazy",
                    "title" : "var lazy: LazySequence<Self>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/publisher",
                    "title" : "var publisher: Publishers.Sequence<Self, Never>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/underestimatedcount",
                    "title" : "var underestimatedCount: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/allsatisfy(_:)",
                    "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/compactmap(_:)",
                    "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/compare(_:_:)",
                    "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/contains(_:)",
                    "title" : "func contains(Self.Element) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/contains(where:)",
                    "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/drop(while:)",
                    "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/dropfirst(_:)",
                    "title" : "func dropFirst(Int) -> DropFirstSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/droplast(_:)",
                    "title" : "func dropLast(Int) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/elementsequal(_:)",
                    "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/elementsequal(_:by:)",
                    "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/enumerated()",
                    "title" : "func enumerated() -> EnumeratedSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/filter(_:)-7rj3s",
                    "title" : "func filter(Predicate<Self.Element>) throws -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/filter(_:)-9bqll",
                    "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/first(where:)",
                    "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/flatmap(_:)-3ev8s",
                    "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/flatmap(_:)-48a25",
                    "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/foreach(_:)",
                    "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/formatted()",
                    "title" : "func formatted() -> String",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/formatted(_:)",
                    "title" : "func formatted<S>(S) -> S.FormatOutput",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/joined()",
                    "title" : "func joined() -> FlattenSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/joined(separator:)-6eico",
                    "title" : "func joined(separator: String) -> String",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/joined(separator:)-6ocef",
                    "title" : "func joined<Separator>(separator: Separator) -> JoinedSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/lexicographicallyprecedes(_:)",
                    "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/lexicographicallyprecedes(_:by:)",
                    "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/makeiterator()",
                    "title" : "func makeIterator() -> Self",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/map(_:)",
                    "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/max()",
                    "title" : "func max() -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/max(by:)",
                    "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/min()",
                    "title" : "func min() -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/min(by:)",
                    "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/prefix(_:)",
                    "title" : "func prefix(Int) -> PrefixSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/prefix(while:)",
                    "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/reduce(_:_:)",
                    "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/reduce(into:_:)",
                    "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/reversed()",
                    "title" : "func reversed() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/shuffled()",
                    "title" : "func shuffled() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/shuffled(using:)",
                    "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/sorted()",
                    "title" : "func sorted() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/sorted(by:)",
                    "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/sorted(using:)-1b5p9",
                    "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/sorted(using:)-4mo0k",
                    "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                    "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/split(separator:maxsplits:omittingemptysubsequences:)",
                    "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/starts(with:)",
                    "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/starts(with:by:)",
                    "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/suffix(_:)",
                    "title" : "func suffix(Int) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/withcontiguousstorageifavailable(_:)",
                    "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/boundcomponentsequence\/sequence-implementations",
                "title" : "Sequence Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/boundcomponentsequence",
            "title" : "BoundComponentSequence",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/boundingbox\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/boundingbox\/init(square:)",
                "title" : "init(square: Double)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/boundingbox\/center",
                "title" : "var center: Point",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/boundingbox\/max",
                "title" : "var max: Point",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/boundingbox\/min",
                "title" : "var min: Point",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticcore\/boundingbox",
            "title" : "BoundingBox",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/documentationcomponent\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/documentationcomponent\/abstract",
                "title" : "var abstract: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/documentationcomponent\/documentation",
                "title" : "var documentation: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/documentationcomponent\/attribute(forkey:)",
                "title" : "func attribute(forKey: AttributeKey) -> ForeignValue?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/documentationcomponent\/setattribute(value:forkey:)",
                "title" : "func setAttribute(value: ForeignValue, forKey: AttributeKey) throws",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/documentationcomponent\/trait",
                "title" : "static let trait: Trait",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/documentationcomponent\/init(from:)",
                    "title" : "init(from: ObjectSnapshot) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/documentationcomponent\/init(record:)",
                    "title" : "init(record: ForeignRecord) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/documentationcomponent\/componentname",
                    "title" : "var componentName: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/documentationcomponent\/foreignrecord()",
                    "title" : "func foreignRecord() -> ForeignRecord",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/documentationcomponent\/inspectablecomponent-implementations",
                "title" : "InspectableComponent Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/documentationcomponent\/attributekeys",
                    "title" : "var attributeKeys: [String]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/documentationcomponent\/dictionary(withkeys:)",
                    "title" : "func dictionary(withKeys: [AttributeKey]) -> [AttributeKey : ForeignValue]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/documentationcomponent\/keyedattributes-implementations",
                "title" : "KeyedAttributes Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/documentationcomponent\/setattributes(_:)",
                    "title" : "func setAttributes([AttributeKey : ForeignValue]) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/documentationcomponent\/mutablekeyedattributes-implementations",
                "title" : "MutableKeyedAttributes Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/documentationcomponent",
            "title" : "DocumentationComponent",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/framevalidationerror\/init(violations:typeerrors:)",
                "title" : "init(violations: [ConstraintViolation], typeErrors: [ObjectID : [TypeError]])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/framevalidationerror\/prettydescriptionsbyobject",
                "title" : "var prettyDescriptionsByObject: [ObjectID : [String]]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/framevalidationerror\/typeerrors",
                "title" : "let typeErrors: [ObjectID : [TypeError]]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/framevalidationerror\/violations",
                "title" : "let violations: [ConstraintViolation]",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/framevalidationerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/framevalidationerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/framevalidationerror",
            "title" : "FrameValidationError",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionargument\/init(_:type:)",
                "title" : "init(String, type: ArgumentType)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionargument\/name",
                "title" : "let name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionargument\/type",
                "title" : "let type: ArgumentType",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticcore\/functionargument",
            "title" : "FunctionArgument",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/issuelistcomponent\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/issuelistcomponent\/init(errors:)",
                "title" : "init(errors: [any Error])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/issuelistcomponent\/errors",
                "title" : "var errors: [any Error]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/issuelistcomponent\/append(_:)",
                "title" : "func append(any Error)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/issuelistcomponent\/attribute(forkey:)",
                "title" : "func attribute(forKey: AttributeKey) -> ForeignValue?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/issuelistcomponent\/removeall()",
                "title" : "func removeAll()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/issuelistcomponent\/setattribute(value:forkey:)",
                "title" : "func setAttribute(value: ForeignValue, forKey: AttributeKey) throws",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/issuelistcomponent\/trait",
                "title" : "static var trait: Trait",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticcore\/issuelistcomponent",
            "title" : "IssueListComponent",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableobjectreference\/init(frame:id:)",
                "title" : "init(frame: MutableFrame, id: ObjectID)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableobjectreference\/frame",
                "title" : "let frame: any Frame",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableobjectreference\/id",
                "title" : "let id: ObjectID",
                "type" : "property"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableobjectreference\/subscript(_:)",
                "title" : "subscript<T>(T.Type) -> T?",
                "type" : "subscript"
              }
            ],
            "path" : "\/documentation\/poieticcore\/mutableobjectreference",
            "title" : "MutableObjectReference",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/orderedset\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/orderedset\/init(_:)",
                "title" : "init([OrderedSet<T>.Item])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/orderedset\/isempty",
                "title" : "var isEmpty: Bool",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/orderedset\/add(_:)",
                "title" : "func add(OrderedSet<T>.Item)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/orderedset\/contains(_:)",
                "title" : "func contains(OrderedSet<T>.Item) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/orderedset\/remove(_:)",
                "title" : "func remove(OrderedSet<T>.Item)",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/orderedset\/index",
                "title" : "OrderedSet.Index",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/poieticcore\/orderedset\/item",
                "title" : "OrderedSet.Item",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/count",
                    "title" : "var count: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/endindex",
                    "title" : "var endIndex: OrderedSet<T>.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/first",
                    "title" : "var first: Self.Element?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/indices",
                    "title" : "var indices: DefaultIndices<Self>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/startindex",
                    "title" : "var startIndex: OrderedSet<T>.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/underestimatedcount",
                    "title" : "var underestimatedCount: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/distance(from:to:)",
                    "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/drop(while:)",
                    "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/dropfirst(_:)",
                    "title" : "func dropFirst(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/droplast(_:)",
                    "title" : "func dropLast(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/firstindex(of:)",
                    "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/firstindex(where:)",
                    "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/firstrange(of:)",
                    "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/formindex(_:offsetby:)",
                    "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/formindex(_:offsetby:limitedby:)",
                    "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/formindex(after:)",
                    "title" : "func formIndex(after: inout Self.Index)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/index(_:offsetby:)",
                    "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/index(_:offsetby:limitedby:)",
                    "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/index(after:)",
                    "title" : "func index(after: OrderedSet<T>.Index) -> OrderedSet<T>.Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/index(of:)",
                    "title" : "func index(of: Self.Element) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/makeiterator()",
                    "title" : "func makeIterator() -> IndexingIterator<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/map(_:)-3cm6o",
                    "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/prefix(_:)",
                    "title" : "func prefix(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/prefix(through:)",
                    "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/prefix(upto:)",
                    "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/prefix(while:)",
                    "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/randomelement()",
                    "title" : "func randomElement() -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/randomelement(using:)",
                    "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/ranges(of:)",
                    "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                    "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/split(separator:maxsplits:omittingemptysubsequences:)",
                    "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/suffix(_:)",
                    "title" : "func suffix(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/suffix(from:)",
                    "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/trimmingprefix(_:)",
                    "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/trimmingprefix(while:)",
                    "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/subscript(_:)",
                    "title" : "subscript(OrderedSet<T>.Index) -> OrderedSet<T>.Item",
                    "type" : "subscript"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/orderedset\/collection-implementations",
                "title" : "Collection Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/orderedset\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/init(arrayliteral:)",
                    "title" : "init(arrayLiteral: T...)",
                    "type" : "init"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/arrayliteralelement",
                    "title" : "OrderedSet.ArrayLiteralElement",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/orderedset\/expressiblebyarrayliteral-implementations",
                "title" : "ExpressibleByArrayLiteral Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/lazy",
                    "title" : "var lazy: LazySequence<Self>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/publisher",
                    "title" : "var publisher: Publishers.Sequence<Self, Never>",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/allsatisfy(_:)",
                    "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/compactmap(_:)",
                    "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/compare(_:_:)",
                    "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/contains(where:)",
                    "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/elementsequal(_:)",
                    "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/elementsequal(_:by:)",
                    "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/enumerated()",
                    "title" : "func enumerated() -> EnumeratedSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/filter(_:)-a4a6",
                    "title" : "func filter(Predicate<Self.Element>) throws -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/filter(_:)-nfpt",
                    "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/first(where:)",
                    "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/flatmap(_:)-5l690",
                    "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/flatmap(_:)-8dgje",
                    "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/foreach(_:)",
                    "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/formatted()",
                    "title" : "func formatted() -> String",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/formatted(_:)",
                    "title" : "func formatted<S>(S) -> S.FormatOutput",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/joined()",
                    "title" : "func joined() -> FlattenSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/joined(separator:)-2mfau",
                    "title" : "func joined<Separator>(separator: Separator) -> JoinedSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/joined(separator:)-4u7hg",
                    "title" : "func joined(separator: String) -> String",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/lexicographicallyprecedes(_:)",
                    "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/lexicographicallyprecedes(_:by:)",
                    "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/map(_:)-6f6cd",
                    "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/max()",
                    "title" : "func max() -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/max(by:)",
                    "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/min()",
                    "title" : "func min() -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/min(by:)",
                    "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/reduce(_:_:)",
                    "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/reduce(into:_:)",
                    "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/reversed()",
                    "title" : "func reversed() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/shuffled()",
                    "title" : "func shuffled() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/shuffled(using:)",
                    "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/sorted()",
                    "title" : "func sorted() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/sorted(by:)",
                    "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/sorted(using:)-218pn",
                    "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/sorted(using:)-7tm2s",
                    "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/starts(with:)",
                    "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/starts(with:by:)",
                    "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/withcontiguousstorageifavailable(_:)",
                    "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/orderedset\/sequence-implementations",
                "title" : "Sequence Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/orderedset",
            "title" : "OrderedSet",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/positioncomponent\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/positioncomponent\/init(_:zindex:)",
                "title" : "init(Point, zIndex: Int)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/positioncomponent\/init(x:y:zindex:)",
                "title" : "init(x: Double, y: Double, zIndex: Int)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/positioncomponent\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/positioncomponent\/position",
                "title" : "var position: Point",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/positioncomponent\/zindex",
                "title" : "var zIndex: Int",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/positioncomponent\/attribute(forkey:)",
                "title" : "func attribute(forKey: AttributeKey) -> ForeignValue?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/positioncomponent\/setattribute(value:forkey:)",
                "title" : "func setAttribute(value: ForeignValue, forKey: AttributeKey) throws",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/positioncomponent\/trait",
                "title" : "static let trait: Trait",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/positioncomponent\/init(from:)",
                    "title" : "init(from: ObjectSnapshot) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/positioncomponent\/init(record:)",
                    "title" : "init(record: ForeignRecord) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/positioncomponent\/componentname",
                    "title" : "var componentName: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/positioncomponent\/foreignrecord()",
                    "title" : "func foreignRecord() -> ForeignRecord",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/positioncomponent\/inspectablecomponent-implementations",
                "title" : "InspectableComponent Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/positioncomponent\/attributekeys",
                    "title" : "var attributeKeys: [String]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/positioncomponent\/dictionary(withkeys:)",
                    "title" : "func dictionary(withKeys: [AttributeKey]) -> [AttributeKey : ForeignValue]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/positioncomponent\/keyedattributes-implementations",
                "title" : "KeyedAttributes Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/positioncomponent\/setattributes(_:)",
                    "title" : "func setAttributes([AttributeKey : ForeignValue]) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/positioncomponent\/mutablekeyedattributes-implementations",
                "title" : "MutableKeyedAttributes Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/positioncomponent",
            "title" : "PositionComponent",
            "type" : "struct"
          },
          {
            "path" : "\/documentation\/poieticcore\/transientobject",
            "title" : "TransientObject",
            "type" : "struct"
          },
          {
            "path" : "\/documentation\/poieticcore\/validatedobject",
            "title" : "ValidatedObject",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/workingobject\/init(frame:id:)",
                "title" : "init(frame: MutableFrame, id: ObjectID)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/workingobject\/frame",
                "title" : "let frame: any Frame",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/workingobject\/id",
                "title" : "let id: ObjectID",
                "type" : "property"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/workingobject\/subscript(_:)",
                "title" : "subscript<T>(T.Type) -> T?",
                "type" : "subscript"
              }
            ],
            "path" : "\/documentation\/poieticcore\/workingobject",
            "title" : "WorkingObject",
            "type" : "struct"
          },
          {
            "title" : "Functions",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/poieticcore\/mutablequery(component:)",
            "title" : "func mutableQuery<T>(component: T.Type) -> [BoundComponent<T>]",
            "type" : "func"
          },
          {
            "title" : "Type Aliases",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/poieticcore\/expressiontoken",
            "title" : "ExpressionToken",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/poieticcore\/id",
            "title" : "ID",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/poieticcore\/point",
            "title" : "Point",
            "type" : "typealias"
          },
          {
            "title" : "Enumerations",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/atomtype\/bool",
                "title" : "case bool",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/atomtype\/double",
                "title" : "case double",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/atomtype\/int",
                "title" : "case int",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/atomtype\/point",
                "title" : "case point",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/atomtype\/string",
                "title" : "case string",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/atomtype\/init(rawvalue:)",
                "title" : "init?(rawValue: String)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/atomtype\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/atomtype\/isnumeric",
                "title" : "var isNumeric: Bool",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/atomtype\/isconvertible(to:)",
                "title" : "func isConvertible(to: AtomType) -> Bool",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/atomtype\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/init(from:)",
                    "title" : "init(from: any Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/encode(to:)",
                    "title" : "func encode(to: any Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/atomtype\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/atomtype",
            "title" : "AtomType",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/attributeerror\/typemismatch(_:_:)",
                "title" : "case typeMismatch(ForeignValue, AtomType)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/attributeerror\/unexpectednil",
                "title" : "case unexpectedNil",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/attributeerror\/unknownattribute(name:type:)",
                "title" : "case unknownAttribute(name: String, type: String)",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attributeerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/attributeerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/attributeerror",
            "title" : "AttributeError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/audiencelevel\/advanced",
                "title" : "case advanced",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/audiencelevel\/any",
                "title" : "case any",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/audiencelevel\/beginner",
                "title" : "case beginner",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/audiencelevel\/expert",
                "title" : "case expert",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/audiencelevel\/intermediate",
                "title" : "case intermediate",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/audiencelevel\/init(rawvalue:)",
                "title" : "init(rawValue: Int)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/audiencelevel\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/init(from:)",
                    "title" : "init(from: any Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/encode(to:)",
                    "title" : "func encode(to: any Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/audiencelevel\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/audiencelevel",
            "title" : "AudienceLevel",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/memorystoreerror\/brokenintegrity(_:)",
                "title" : "case brokenIntegrity(String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/memorystoreerror\/cannotcreatearchivedata(_:)",
                "title" : "case cannotCreateArchiveData(any Error)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/memorystoreerror\/cannotopenstore(_:)",
                "title" : "case cannotOpenStore(URL)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/memorystoreerror\/cannotwritetostore(_:)",
                "title" : "case cannotWriteToStore(any Error)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/memorystoreerror\/duplicatesnapshot(_:)",
                "title" : "case duplicateSnapshot(ObjectID)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/memorystoreerror\/invalidreference(_:_:_:)",
                "title" : "case invalidReference(ObjectID, String, String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/memorystoreerror\/invalidreferences(_:_:)",
                "title" : "case invalidReferences(String, String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/memorystoreerror\/malformedarchivedata(_:)",
                "title" : "case malformedArchiveData(any Error)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/memorystoreerror\/missingormalformedstateinfo",
                "title" : "case missingOrMalformedStateInfo",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/memorystoreerror\/missingreference(_:_:)",
                "title" : "case missingReference(String, String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/memorystoreerror\/unknowncollection(_:)",
                "title" : "case unknownCollection(String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/memorystoreerror\/unknowncomponenttype(_:)",
                "title" : "case unknownComponentType(String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/memorystoreerror\/unknownobjecttype(_:)",
                "title" : "case unknownObjectType(String)",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/memorystoreerror\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/memorystoreerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/memorystoreerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/memorystoreerror",
            "title" : "MemoryStoreError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/plane\/system",
                "title" : "case system",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/plane\/user",
                "title" : "case user",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/plane\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/plane\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/plane",
            "title" : "Plane",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/scannererror\/unexpectedend",
                "title" : "case unexpectedEnd",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/scannererror\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/scannererror\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/scannererror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/scannererror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/scannererror",
            "title" : "ScannerError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/typeerror\/missingtraitattribute(_:_:)",
                "title" : "case missingTraitAttribute(String, String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/typeerror\/typemismatch(_:_:)",
                "title" : "case typeMismatch(String, String)",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/typeerror\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/typeerror\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/typeerror\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/typeerror",
            "title" : "TypeError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/valueerror\/invalidbooleanvalue(_:)",
                "title" : "case invalidBooleanValue(String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/valueerror\/typemismatch(_:_:)",
                "title" : "case typeMismatch(String, String)",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/valueerror\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valueerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/valueerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/valueerror",
            "title" : "ValueError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/array(_:)",
                "title" : "case array(AtomType)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/atom(_:)",
                "title" : "case atom(AtomType)",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/init(from:)",
                "title" : "init(from: any Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/isarray",
                "title" : "var isArray: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/isatom",
                "title" : "var isAtom: Bool",
                "type" : "property"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/bool",
                "title" : "static let bool: ValueType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/bools",
                "title" : "static let bools: ValueType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/double",
                "title" : "static let double: ValueType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/doubles",
                "title" : "static let doubles: ValueType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/int",
                "title" : "static let int: ValueType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/ints",
                "title" : "static let ints: ValueType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/point",
                "title" : "static let point: ValueType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/points",
                "title" : "static let points: ValueType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/string",
                "title" : "static let string: ValueType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/strings",
                "title" : "static let strings: ValueType",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/valuetype\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/valuetype",
            "title" : "ValueType",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/variablereference\/==(_:_:)",
                "title" : "static func == (VariableReference, VariableReference) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/variablereference\/builtin(_:)",
                "title" : "case builtin(BuiltinVariable)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/variablereference\/object(_:)",
                "title" : "case object(ObjectID)",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/variablereference\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variablereference\/valuetype",
                "title" : "var valueType: AtomType",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variablereference\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/variablereference\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/variablereference",
            "title" : "VariableReference",
            "type" : "enum"
          }
        ],
        "path" : "\/documentation\/poieticcore",
        "title" : "PoieticCore",
        "type" : "module"
      }
    ]
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 1
  }
}