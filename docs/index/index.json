{
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "title" : "Object Memory",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/init(metamodel:)",
                "title" : "init(metamodel: Metamodel.Type)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/canredo",
                "title" : "var canRedo: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/canundo",
                "title" : "var canUndo: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/constraints",
                "title" : "var constraints: [Constraint]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/currentframe",
                "title" : "var currentFrame: StableFrame",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/currentframeid",
                "title" : "var currentFrameID: FrameID?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/frames",
                "title" : "var frames: [StableFrame]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/isempty",
                "title" : "var isEmpty: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/metamodel",
                "title" : "let metamodel: Metamodel.Type",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/redoableframes",
                "title" : "var redoableFrames: [FrameID]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/snapshots",
                "title" : "var snapshots: [ObjectSnapshot]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/undoableframes",
                "title" : "var undoableFrames: [FrameID]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/versionhistory",
                "title" : "var versionHistory: [FrameID]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/accept(_:appendhistory:)",
                "title" : "func accept(MutableFrame, appendHistory: Bool) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/containsframe(_:)",
                "title" : "func containsFrame(FrameID) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/createframe(id:)",
                "title" : "func createFrame(id: FrameID?) -> MutableFrame",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/createid(_:)",
                "title" : "func createID(ID?) -> ID",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/deriveframe(original:id:)",
                "title" : "func deriveFrame(original: FrameID?, id: FrameID?) -> MutableFrame",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/discard(_:)",
                "title" : "func discard(MutableFrame)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/frame(_:)",
                "title" : "func frame(FrameID) -> StableFrame?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/redo(to:)",
                "title" : "func redo(to: FrameID)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/removeframe(_:)",
                "title" : "func removeFrame(FrameID)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/restoreall(from:)",
                "title" : "func restoreAll(from: URL) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/saveall(to:)",
                "title" : "func saveAll(to: URL) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectmemory\/undo(to:)",
                "title" : "func undo(to: FrameID)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/objectmemory",
            "title" : "ObjectMemory",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/init(fromrecord:metamodel:components:)",
                "title" : "convenience init(fromRecord: ForeignRecord, metamodel: Metamodel.Type, components: [String : ForeignRecord]) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/init(id:snapshotid:type:components:)",
                "title" : "init(id: ObjectID, snapshotID: SnapshotID, type: ObjectType?, components: [Component])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/components",
                "title" : "var components: ComponentSet",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/composedidstring",
                "title" : "var composedIDString: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/id-swift.property",
                "title" : "let id: ObjectID",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/name",
                "title" : "var name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/prettydescription",
                "title" : "var prettyDescription: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/snapshotid",
                "title" : "let snapshotID: SnapshotID",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/state",
                "title" : "var state: VersionState",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/structuraltypename",
                "title" : "var structuralTypeName: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/type",
                "title" : "let type: ObjectType?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/attribute(forkey:)",
                "title" : "func attribute(forKey: String) -> ForeignValue?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/derive(snapshotid:objectid:)",
                "title" : "func derive(snapshotID: SnapshotID, objectID: ObjectID?) -> ObjectSnapshot",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/foreignrecord()",
                "title" : "func foreignRecord() -> ForeignRecord",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/setattribute(value:forkey:)",
                "title" : "func setAttribute(value: ForeignValue, forKey: String) throws",
                "type" : "method"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/subscript(_:)-3b9l1",
                "title" : "subscript<T>(T.Type) -> T?",
                "type" : "subscript"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/subscript(_:)-4wdrq",
                "title" : "subscript(Component.Type) -> (Component)?",
                "type" : "subscript"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/id-swift.typealias",
                "title" : "ObjectSnapshot.ID",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/poieticcore\/objectsnapshot",
            "title" : "ObjectSnapshot",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/framebase\/graph",
                "title" : "var graph: Graph",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/framebase\/snapshots",
                "title" : "var snapshots: [ObjectSnapshot]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/framebase\/assert(constraint:)-x351",
                        "title" : "func assert(constraint: Constraint) throws",
                        "type" : "method"
                      }
                    ],
                    "title" : "FrameBase Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/framebase\/assert(constraint:)-2l2s9",
                "title" : "func assert(constraint: Constraint) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/framebase\/contains(_:)",
                "title" : "func contains(ObjectID) -> Bool",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/framebase\/hasreferentialintegrity()-30pqj",
                        "title" : "func hasReferentialIntegrity() -> Bool",
                        "type" : "method"
                      }
                    ],
                    "title" : "FrameBase Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/framebase\/hasreferentialintegrity()-rixf",
                "title" : "func hasReferentialIntegrity() -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/framebase\/object(_:)",
                "title" : "func object(ObjectID) -> ObjectSnapshot?",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/framebase\/referentialintegrityviolators()-2lkrb",
                        "title" : "func referentialIntegrityViolators() -> [ObjectID]",
                        "type" : "method"
                      }
                    ],
                    "title" : "FrameBase Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/framebase\/referentialintegrityviolators()-5qwhk",
                "title" : "func referentialIntegrityViolators() -> [ObjectID]",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/framebase\/structuraldependants(id:)-169sh",
                        "title" : "func structuralDependants(id: ObjectID) -> [ObjectID]",
                        "type" : "method"
                      }
                    ],
                    "title" : "FrameBase Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/framebase\/structuraldependants(id:)-1txds",
                "title" : "func structuralDependants(id: ObjectID) -> [ObjectID]",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/framebase",
            "title" : "FrameBase",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/stableframe\/graph",
                "title" : "var graph: Graph",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/stableframe\/id",
                "title" : "let id: FrameID",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/stableframe\/snapshots",
                "title" : "var snapshots: [ObjectSnapshot]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/stableframe\/contains(_:)",
                "title" : "func contains(ObjectID) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/stableframe\/object(_:)",
                "title" : "func object(ObjectID) -> ObjectSnapshot?",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/stableframe\/assert(constraint:)",
                    "title" : "func assert(constraint: Constraint) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/stableframe\/hasreferentialintegrity()",
                    "title" : "func hasReferentialIntegrity() -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/stableframe\/referentialintegrityviolators()",
                    "title" : "func referentialIntegrityViolators() -> [ObjectID]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/stableframe\/structuraldependants(id:)",
                    "title" : "func structuralDependants(id: ObjectID) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/stableframe\/framebase-implementations",
                "title" : "FrameBase Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/stableframe",
            "title" : "StableFrame",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableframe\/init(memory:id:snapshots:)",
                "title" : "init(memory: ObjectMemory, id: FrameID, snapshots: [ObjectSnapshot]?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableframe\/graph",
                "title" : "var graph: Graph",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableframe\/haschanges",
                "title" : "var hasChanges: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableframe\/id",
                "title" : "let id: FrameID",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableframe\/memory",
                "title" : "let memory: ObjectMemory",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableframe\/mutablegraph",
                "title" : "var mutableGraph: MutableGraph",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableframe\/removedobjects",
                "title" : "var removedObjects: Set<ObjectID>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableframe\/snapshots",
                "title" : "var snapshots: [ObjectSnapshot]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableframe\/contains(_:)",
                "title" : "func contains(ObjectID) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableframe\/create(_:components:)",
                "title" : "func create(ObjectType?, components: [Component]) -> ObjectID",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableframe\/freeze()",
                "title" : "func freeze()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableframe\/insertderived(_:id:)",
                "title" : "func insertDerived(ObjectSnapshot, id: ObjectID?) -> ObjectID",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableframe\/mutableobject(_:)",
                "title" : "func mutableObject(ObjectID) -> ObjectSnapshot",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableframe\/object(_:)",
                "title" : "func object(ObjectID) -> ObjectSnapshot?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableframe\/removecascading(_:)",
                "title" : "func removeCascading(ObjectID) -> Set<ObjectID>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableframe\/setcomponent(_:component:)",
                "title" : "func setComponent<T>(ObjectID, component: T)",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/assert(constraint:)",
                    "title" : "func assert(constraint: Constraint) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/hasreferentialintegrity()",
                    "title" : "func hasReferentialIntegrity() -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/referentialintegrityviolators()",
                    "title" : "func referentialIntegrityViolators() -> [ObjectID]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/structuraldependants(id:)",
                    "title" : "func structuralDependants(id: ObjectID) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/mutableframe\/framebase-implementations",
                "title" : "FrameBase Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/mutableframe",
            "title" : "MutableFrame",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/versionstate\/frozen",
                "title" : "case frozen",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/versionstate\/transient",
                "title" : "case transient",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/versionstate\/unstable",
                "title" : "case unstable",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/versionstate\/canderive",
                "title" : "var canDerive: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/versionstate\/ismutable",
                "title" : "var isMutable: Bool",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/versionstate\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/versionstate\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/versionstate",
            "title" : "VersionState",
            "type" : "enum"
          },
          {
            "path" : "\/documentation\/poieticcore\/objectid",
            "title" : "ObjectID",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/poieticcore\/snapshotid",
            "title" : "SnapshotID",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/poieticcore\/frameid",
            "title" : "FrameID",
            "type" : "typealias"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/identitygenerator\/markused(_:)",
                "title" : "func markUsed(ObjectID)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/identitygenerator\/next()",
                "title" : "func next() -> ObjectID",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/identitygenerator",
            "title" : "IdentityGenerator",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/sequentialidgenerator\/init(_:)",
                "title" : "init(UInt64)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/sequentialidgenerator\/markused(_:)",
                "title" : "func markUsed(ObjectID)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/sequentialidgenerator\/next()",
                "title" : "func next() -> ObjectID",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/sequentialidgenerator",
            "title" : "SequentialIDGenerator",
            "type" : "class"
          },
          {
            "title" : "Metamodel",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objecttype\/init(name:label:structuraltype:issystemowned:components:abstract:)",
                "title" : "init(name: String, label: String?, structuralType: StructuralType, isSystemOwned: Bool, components: [Component.Type], abstract: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objecttype\/abstract",
                "title" : "let abstract: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objecttype\/attributes",
                "title" : "var attributes: [AttributeDescription]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objecttype\/components",
                "title" : "let components: [Component.Type]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objecttype\/issystemowned",
                "title" : "let isSystemOwned: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objecttype\/label",
                "title" : "let label: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objecttype\/name",
                "title" : "let name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objecttype\/structuraltype",
                "title" : "let structuralType: StructuralType",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objecttype\/attribute(_:)",
                "title" : "func attribute(String) -> AttributeDescription?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objecttype\/componenttype(forattribute:)",
                "title" : "func componentType(forAttribute: String) -> Component.Type?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objecttype\/hasattribute(_:)",
                "title" : "func hasAttribute(String) -> Bool",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/objecttype",
            "title" : "ObjectType",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/component\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/component\/init(record:)-4pxja",
                        "title" : "init(record: ForeignRecord) throws",
                        "type" : "init"
                      }
                    ],
                    "title" : "Component Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/component\/init(record:)-5twez",
                "title" : "init(record: ForeignRecord) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/component\/componentname",
                "title" : "var componentName: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/component\/attribute(forkey:)",
                "title" : "func attribute(forKey: AttributeKey) -> AttributeValue?",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/component\/foreignrecord()-4l38f",
                        "title" : "func foreignRecord() -> ForeignRecord",
                        "type" : "method"
                      }
                    ],
                    "title" : "Component Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/component\/foreignrecord()-2qxlw",
                "title" : "func foreignRecord() -> ForeignRecord",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/component\/setattribute(value:forkey:)",
                "title" : "func setAttribute(value: AttributeValue, forKey: AttributeKey) throws",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/component\/componentdescription",
                "title" : "static var componentDescription: ComponentDescription",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/component\/attributekeys",
                    "title" : "var attributeKeys: [String]",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/component\/keyedattributes-implementations",
                "title" : "KeyedAttributes Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/component",
            "title" : "Component",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/componentset\/init(_:)",
                "title" : "init([Component])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/componentset\/count",
                "title" : "var count: Int",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/componentset\/has(_:)",
                "title" : "func has(Component.Type) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/componentset\/remove(_:)",
                "title" : "func remove(Component.Type)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/componentset\/removeall()",
                "title" : "func removeAll()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/componentset\/set(_:)-5rqbo",
                "title" : "func set(Component)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/componentset\/set(_:)-7o58e",
                "title" : "func set([Component])",
                "type" : "method"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-5d8h6",
                "title" : "subscript<T>(T.Type) -> T?",
                "type" : "subscript"
              },
              {
                "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-7cqju",
                "title" : "subscript(Component.Type) -> (Component)?",
                "type" : "subscript"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/endindex",
                    "title" : "var endIndex: ComponentSet.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/first",
                    "title" : "var first: Self.Element?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/indices",
                    "title" : "var indices: DefaultIndices<Self>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/isempty",
                    "title" : "var isEmpty: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/startindex",
                    "title" : "var startIndex: ComponentSet.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/underestimatedcount",
                    "title" : "var underestimatedCount: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/distance(from:to:)",
                    "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/drop(while:)",
                    "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/dropfirst(_:)",
                    "title" : "func dropFirst(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/droplast(_:)",
                    "title" : "func dropLast(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/firstindex(where:)",
                    "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/formindex(_:offsetby:)",
                    "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/formindex(_:offsetby:limitedby:)",
                    "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/formindex(after:)",
                    "title" : "func formIndex(after: inout Self.Index)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/index(_:offsetby:)",
                    "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/index(_:offsetby:limitedby:)",
                    "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/index(after:)",
                    "title" : "func index(after: ComponentSet.Index) -> ComponentSet.Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/makeiterator()",
                    "title" : "func makeIterator() -> IndexingIterator<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/map(_:)-8u8jc",
                    "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/prefix(_:)",
                    "title" : "func prefix(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/prefix(through:)",
                    "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/prefix(upto:)",
                    "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/prefix(while:)",
                    "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/randomelement()",
                    "title" : "func randomElement() -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/randomelement(using:)",
                    "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                    "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/suffix(_:)",
                    "title" : "func suffix(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/suffix(from:)",
                    "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/trimmingprefix(while:)",
                    "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-4rn2g",
                    "title" : "subscript<R>(R) -> Self.SubSequence",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-62pt4",
                    "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-9nfo4",
                    "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-9xnhm",
                    "title" : "subscript(ComponentSet.Index) -> Component",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/index",
                    "title" : "ComponentSet.Index",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/componentset\/collection-implementations",
                "title" : "Collection Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/init(arrayliteral:)",
                    "title" : "init(arrayLiteral: ComponentSet.ArrayLiteralElement...)",
                    "type" : "init"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/arrayliteralelement",
                    "title" : "ComponentSet.ArrayLiteralElement",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/componentset\/expressiblebyarrayliteral-implementations",
                "title" : "ExpressibleByArrayLiteral Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/lazy",
                    "title" : "var lazy: LazySequence<Self>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/publisher",
                    "title" : "var publisher: Publishers.Sequence<Self, Never>",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/allsatisfy(_:)",
                    "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/compactmap(_:)",
                    "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/compare(_:_:)",
                    "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/contains(where:)",
                    "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/elementsequal(_:by:)",
                    "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/enumerated()",
                    "title" : "func enumerated() -> EnumeratedSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/filter(_:)-44vw0",
                    "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/filter(_:)-6cw0t",
                    "title" : "func filter(Predicate<Self.Element>) throws -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/first(where:)",
                    "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/flatmap(_:)-4lcj",
                    "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/flatmap(_:)-5cxck",
                    "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/foreach(_:)",
                    "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/formatted(_:)",
                    "title" : "func formatted<S>(S) -> S.FormatOutput",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/lexicographicallyprecedes(_:by:)",
                    "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/map(_:)-4rjo",
                    "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/max(by:)",
                    "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/min(by:)",
                    "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/reduce(_:_:)",
                    "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/reduce(into:_:)",
                    "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/reversed()",
                    "title" : "func reversed() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/shuffled()",
                    "title" : "func shuffled() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/shuffled(using:)",
                    "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/sorted(by:)",
                    "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/sorted(using:)-14mv4",
                    "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/sorted(using:)-8ong7",
                    "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/starts(with:by:)",
                    "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/withcontiguousstorageifavailable(_:)",
                    "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/componentset\/sequence-implementations",
                "title" : "Sequence Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/componentset",
            "title" : "ComponentSet",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/metamodel\/components",
                "title" : "static var components: [Component.Type]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/metamodel\/constraints",
                "title" : "static var constraints: [Constraint]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/metamodel\/objecttypes",
                "title" : "static var objectTypes: [ObjectType]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/metamodel\/variablenames",
                "title" : "static var variableNames: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/metamodel\/variables",
                "title" : "static var variables: [BuiltinVariable]",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/metamodel\/componenttype(name:)",
                "title" : "static func componentType(name: String) -> Component.Type?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/metamodel\/objecttype(name:)",
                "title" : "static func objectType(name: String) -> ObjectType?",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/metamodel",
            "title" : "Metamodel",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/attributedescription\/init(name:type:label:abstract:)",
                "title" : "init(name: String, type: ValueType, label: String?, abstract: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/attributedescription\/abstract",
                "title" : "let abstract: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/attributedescription\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/attributedescription\/label",
                "title" : "let label: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/attributedescription\/name",
                "title" : "let name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/attributedescription\/type",
                "title" : "let type: ValueType",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticcore\/attributedescription",
            "title" : "AttributeDescription",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/componentdescription\/init(name:label:attributes:abstract:)",
                "title" : "init(name: String, label: String?, attributes: [AttributeDescription], abstract: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/componentdescription\/abstract",
                "title" : "let abstract: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/componentdescription\/attributekeys",
                "title" : "var attributeKeys: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/componentdescription\/attributes",
                "title" : "let attributes: [AttributeDescription]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/componentdescription\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/componentdescription\/label",
                "title" : "let label: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/componentdescription\/name",
                "title" : "let name: String",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticcore\/componentdescription",
            "title" : "ComponentDescription",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/emptymetamodel\/components",
                "title" : "static var components: [Component.Type]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/emptymetamodel\/constraints",
                "title" : "static var constraints: [Constraint]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/emptymetamodel\/objecttypes",
                "title" : "static var objectTypes: [ObjectType]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/emptymetamodel\/variables",
                "title" : "static var variables: [BuiltinVariable]",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/emptymetamodel\/variablenames",
                    "title" : "static var variableNames: [String]",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/emptymetamodel\/componenttype(name:)",
                    "title" : "static func componentType(name: String) -> Component.Type?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/emptymetamodel\/objecttype(name:)",
                    "title" : "static func objectType(name: String) -> ObjectType?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/emptymetamodel\/metamodel-implementations",
                "title" : "Metamodel Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/emptymetamodel",
            "title" : "EmptyMetamodel",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/namecomponent\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/namecomponent\/init(name:)",
                "title" : "init(name: String)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/namecomponent\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/namecomponent\/name",
                "title" : "var name: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/namecomponent\/attribute(forkey:)",
                "title" : "func attribute(forKey: AttributeKey) -> AttributeValue?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/namecomponent\/setattribute(value:forkey:)",
                "title" : "func setAttribute(value: AttributeValue, forKey: AttributeKey) throws",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/namecomponent\/componentdescription",
                "title" : "static var componentDescription: ComponentDescription",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/namecomponent\/init(record:)",
                    "title" : "init(record: ForeignRecord) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/namecomponent\/componentname",
                    "title" : "var componentName: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/namecomponent\/foreignrecord()",
                    "title" : "func foreignRecord() -> ForeignRecord",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/namecomponent\/component-implementations",
                "title" : "Component Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/namecomponent\/attributekeys",
                    "title" : "var attributeKeys: [String]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/namecomponent\/dictionary(withkeys:)",
                    "title" : "func dictionary(withKeys: [AttributeKey]) -> AttributeDictionary",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/namecomponent\/keyedattributes-implementations",
                "title" : "KeyedAttributes Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/namecomponent\/setattributes(_:)",
                    "title" : "func setAttributes(AttributeDictionary) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/namecomponent\/mutablekeyedattributes-implementations",
                "title" : "MutableKeyedAttributes Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/namecomponent",
            "title" : "NameComponent",
            "type" : "struct"
          },
          {
            "title" : "Graph",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/graph\/edgeids-63tny",
                        "title" : "var edgeIDs: [ObjectID]",
                        "type" : "property"
                      }
                    ],
                    "title" : "Graph Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/graph\/edgeids-7ycza",
                "title" : "var edgeIDs: [ObjectID]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/graph\/edges",
                "title" : "var edges: [Edge]",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/graph\/nodeids-3396q",
                        "title" : "var nodeIDs: [ObjectID]",
                        "type" : "property"
                      }
                    ],
                    "title" : "Graph Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/graph\/nodeids-4afw4",
                "title" : "var nodeIDs: [ObjectID]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/graph\/nodes",
                "title" : "var nodes: [Node]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/graph\/prettydebugdescription",
                "title" : "var prettyDebugDescription: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/graph\/contains(edge:)-97l6i",
                        "title" : "func contains(edge: ObjectID) -> Bool",
                        "type" : "method"
                      }
                    ],
                    "title" : "Graph Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/graph\/contains(edge:)-2upzx",
                "title" : "func contains(edge: ObjectID) -> Bool",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/graph\/contains(node:)-80fw4",
                        "title" : "func contains(node: ObjectID) -> Bool",
                        "type" : "method"
                      }
                    ],
                    "title" : "Graph Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/graph\/contains(node:)-34pej",
                "title" : "func contains(node: ObjectID) -> Bool",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/graph\/edge(_:)-9dvv1",
                        "title" : "func edge(ObjectID) -> Edge?",
                        "type" : "method"
                      }
                    ],
                    "title" : "Graph Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/graph\/edge(_:)-5agzq",
                "title" : "func edge(ObjectID) -> Edge?",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/graph\/hood(_:selector:)-47x7u",
                        "title" : "func hood(ObjectID, selector: NeighborhoodSelector) -> Neighborhood",
                        "type" : "method"
                      }
                    ],
                    "title" : "Graph Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/graph\/hood(_:selector:)-3m41k",
                "title" : "func hood(ObjectID, selector: NeighborhoodSelector) -> Neighborhood",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/graph\/incoming(_:)-7fqnc",
                        "title" : "func incoming(ObjectID) -> [Edge]",
                        "type" : "method"
                      }
                    ],
                    "title" : "Graph Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/graph\/incoming(_:)-1hlh7",
                "title" : "func incoming(ObjectID) -> [Edge]",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/graph\/neighbours(_:)-1ikbl",
                        "title" : "func neighbours(ObjectID) -> [Edge]",
                        "type" : "method"
                      }
                    ],
                    "title" : "Graph Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/graph\/neighbours(_:)-5b4gj",
                "title" : "func neighbours(ObjectID) -> [Edge]",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/graph\/node(_:)-8qcuy",
                        "title" : "func node(ObjectID) -> Node?",
                        "type" : "method"
                      }
                    ],
                    "title" : "Graph Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/graph\/node(_:)-4lyis",
                "title" : "func node(ObjectID) -> Node?",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/graph\/outgoing(_:)-8kk1k",
                        "title" : "func outgoing(ObjectID) -> [Edge]",
                        "type" : "method"
                      }
                    ],
                    "title" : "Graph Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/graph\/outgoing(_:)-ua8p",
                "title" : "func outgoing(ObjectID) -> [Edge]",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/graph\/selectedges(_:)-8o6hb",
                        "title" : "func selectEdges(EdgePredicate) -> [Edge]",
                        "type" : "method"
                      }
                    ],
                    "title" : "Graph Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/graph\/selectedges(_:)-1rzx9",
                "title" : "func selectEdges(EdgePredicate) -> [Edge]",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/graph\/selectnodes(_:)-6qcxh",
                        "title" : "func selectNodes(NodePredicate) -> [Node]",
                        "type" : "method"
                      }
                    ],
                    "title" : "Graph Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/graph\/selectnodes(_:)-7dpwr",
                "title" : "func selectNodes(NodePredicate) -> [Node]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/graph\/topologicalsort(_:edges:)",
                "title" : "func topologicalSort([ObjectID], edges: [Edge]) throws -> [ObjectID]",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/graph",
            "title" : "Graph",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/unboundgraph\/init(frame:)",
                "title" : "init(frame: FrameBase)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/unboundgraph\/edges",
                "title" : "var edges: [Edge]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/unboundgraph\/nodes",
                "title" : "var nodes: [Node]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/unboundgraph\/contains(edge:)",
                "title" : "func contains(edge: ObjectID) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/unboundgraph\/contains(node:)",
                "title" : "func contains(node: ObjectID) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/unboundgraph\/edge(_:)",
                "title" : "func edge(ObjectID) -> Edge?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/unboundgraph\/neighbours(_:selector:)",
                "title" : "func neighbours(ObjectID, selector: NeighborhoodSelector) -> [Edge]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/unboundgraph\/node(_:)",
                "title" : "func node(ObjectID) -> Node?",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/unboundgraph\/edgeids",
                    "title" : "var edgeIDs: [ObjectID]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/unboundgraph\/nodeids",
                    "title" : "var nodeIDs: [ObjectID]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/unboundgraph\/prettydebugdescription",
                    "title" : "var prettyDebugDescription: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/unboundgraph\/hood(_:selector:)",
                    "title" : "func hood(ObjectID, selector: NeighborhoodSelector) -> Neighborhood",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/unboundgraph\/incoming(_:)",
                    "title" : "func incoming(ObjectID) -> [Edge]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/unboundgraph\/neighbours(_:)",
                    "title" : "func neighbours(ObjectID) -> [Edge]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/unboundgraph\/outgoing(_:)",
                    "title" : "func outgoing(ObjectID) -> [Edge]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/unboundgraph\/selectedges(_:)",
                    "title" : "func selectEdges(EdgePredicate) -> [Edge]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/unboundgraph\/selectnodes(_:)",
                    "title" : "func selectNodes(NodePredicate) -> [Node]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/unboundgraph\/topologicalsort(_:edges:)",
                    "title" : "func topologicalSort([ObjectID], edges: [Edge]) throws -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/unboundgraph\/graph-implementations",
                "title" : "Graph Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/unboundgraph",
            "title" : "UnboundGraph",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutablegraph\/createedge(_:origin:target:)",
                "title" : "func createEdge(ObjectType, origin: ObjectID, target: ObjectID) -> ObjectID",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutablegraph\/createedge(_:origin:target:components:)",
                "title" : "func createEdge(ObjectType, origin: ObjectID, target: ObjectID, components: [Component]) -> ObjectID",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/mutablegraph\/createnode(_:)-888gn",
                        "title" : "func createNode(ObjectType) -> ObjectID",
                        "type" : "method"
                      }
                    ],
                    "title" : "MutableGraph Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/mutablegraph\/createnode(_:)-jkr4",
                "title" : "func createNode(ObjectType) -> ObjectID",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutablegraph\/createnode(_:name:components:)",
                "title" : "func createNode(ObjectType, name: String?, components: [Component]) -> ObjectID",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutablegraph\/insert(_:)-4eu2b",
                "title" : "func insert(Node)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutablegraph\/insert(_:)-9hqa8",
                "title" : "func insert(Edge)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutablegraph\/remove(edge:)",
                "title" : "func remove(edge: ObjectID)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutablegraph\/remove(node:)",
                "title" : "func remove(node: ObjectID)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/mutablegraph\/removeall()-628za",
                        "title" : "func removeAll()",
                        "type" : "method"
                      }
                    ],
                    "title" : "MutableGraph Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/mutablegraph\/removeall()-98jcu",
                "title" : "func removeAll()",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/mutablegraph",
            "title" : "MutableGraph",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableunboundgraph\/createedge(_:origin:target:components:)",
                "title" : "func createEdge(ObjectType, origin: ObjectID, target: ObjectID, components: [Component]) -> ObjectID",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableunboundgraph\/createnode(_:name:components:)",
                "title" : "func createNode(ObjectType, name: String?, components: [Component]) -> ObjectID",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableunboundgraph\/insert(_:)-6af15",
                "title" : "func insert(Node)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableunboundgraph\/insert(_:)-9fvar",
                "title" : "func insert(Edge)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableunboundgraph\/remove(edge:)",
                "title" : "func remove(edge: ObjectID)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutableunboundgraph\/remove(node:)",
                "title" : "func remove(node: ObjectID)",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableunboundgraph\/createedge(_:origin:target:)",
                    "title" : "func createEdge(ObjectType, origin: ObjectID, target: ObjectID) -> ObjectID",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableunboundgraph\/createnode(_:)",
                    "title" : "func createNode(ObjectType) -> ObjectID",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableunboundgraph\/removeall()",
                    "title" : "func removeAll()",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/mutableunboundgraph\/mutablegraph-implementations",
                "title" : "MutableGraph Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/mutableunboundgraph",
            "title" : "MutableUnboundGraph",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/node\/structuraltypename",
                "title" : "var structuralTypeName: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/node\/derive(snapshotid:objectid:)",
                "title" : "func derive(snapshotID: SnapshotID, objectID: ObjectID?) -> ObjectSnapshot",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/node",
            "title" : "Node",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/edge\/init(id:snapshotid:type:origin:target:components:)",
                "title" : "init(id: ObjectID, snapshotID: SnapshotID, type: ObjectType?, origin: ObjectID, target: ObjectID, components: [Component])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/edge\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/edge\/origin",
                "title" : "var origin: ObjectID",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/edge\/prettydescription",
                "title" : "var prettyDescription: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/edge\/structuraltypename",
                "title" : "var structuralTypeName: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/edge\/target",
                "title" : "var target: ObjectID",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/edge\/derive(snapshotid:objectid:)",
                "title" : "func derive(snapshotID: SnapshotID, objectID: ObjectID?) -> ObjectSnapshot",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/edge\/foreignrecord()",
                "title" : "func foreignRecord() -> ForeignRecord",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/edge",
            "title" : "Edge",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/edgedirection\/incoming",
                "title" : "case incoming",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/edgedirection\/outgoing",
                "title" : "case outgoing",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/edgedirection\/reversed",
                "title" : "var reversed: EdgeDirection",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgedirection\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/edgedirection\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/edgedirection",
            "title" : "EdgeDirection",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/neighborhood\/init(graph:nodeid:selector:edges:)",
                "title" : "init(graph: Graph, nodeID: ObjectID, selector: NeighborhoodSelector, edges: [Edge])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/neighborhood\/edges",
                "title" : "let edges: [Edge]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/neighborhood\/graph",
                "title" : "let graph: Graph",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/neighborhood\/nodeid",
                "title" : "let nodeID: ObjectID",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/neighborhood\/nodes",
                "title" : "var nodes: [Node]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/neighborhood\/selector",
                "title" : "let selector: NeighborhoodSelector",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticcore\/neighborhood",
            "title" : "Neighborhood",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/neighborhoodselector\/init(predicate:direction:)",
                "title" : "init(predicate: EdgePredicate, direction: EdgeDirection)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/neighborhoodselector\/direction",
                "title" : "let direction: EdgeDirection",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/neighborhoodselector\/predicate",
                "title" : "let predicate: EdgePredicate",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticcore\/neighborhoodselector",
            "title" : "NeighborhoodSelector",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/graphcycleerror\/init(edges:)",
                "title" : "init(edges: [ObjectID])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/graphcycleerror\/edges",
                "title" : "let edges: [ObjectID]",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/graphcycleerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/graphcycleerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/graphcycleerror",
            "title" : "GraphCycleError",
            "type" : "struct"
          },
          {
            "title" : "Predicates",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/predicate\/and(_:)-8pucl",
                        "title" : "func and(Predicate) -> CompoundPredicate",
                        "type" : "method"
                      }
                    ],
                    "title" : "Predicate Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/predicate\/and(_:)-61fti",
                "title" : "func and(Predicate) -> CompoundPredicate",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/predicate\/match(graph:object:)",
                "title" : "func match(graph: Graph, object: ObjectSnapshot) -> Bool",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/predicate\/not()-6r1ul",
                        "title" : "func not() -> Predicate",
                        "type" : "method"
                      }
                    ],
                    "title" : "Predicate Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/predicate\/not()-473jv",
                "title" : "func not() -> Predicate",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/predicate\/or(_:)-7gw1c",
                        "title" : "func or(Predicate) -> CompoundPredicate",
                        "type" : "method"
                      }
                    ],
                    "title" : "Predicate Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/predicate\/or(_:)-36pow",
                "title" : "func or(Predicate) -> CompoundPredicate",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/predicate",
            "title" : "Predicate",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/nodepredicate\/match(graph:node:)-39238",
                        "title" : "func match(graph: Graph, node: Node) -> Bool",
                        "type" : "method"
                      }
                    ],
                    "title" : "NodePredicate Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/nodepredicate\/match(graph:node:)-6r3og",
                "title" : "func match(graph: Graph, node: Node) -> Bool",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/nodepredicate",
            "title" : "NodePredicate",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/edgepredicate\/match(graph:edge:)-34m45",
                        "title" : "func match(graph: Graph, edge: Edge) -> Bool",
                        "type" : "method"
                      }
                    ],
                    "title" : "EdgePredicate Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/edgepredicate\/match(graph:edge:)-ek2w",
                "title" : "func match(graph: Graph, edge: Edge) -> Bool",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/edgepredicate",
            "title" : "EdgePredicate",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/compoundpredicate\/init(_:predicates:)",
                "title" : "init(LogicalConnective, predicates: Predicate...)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/compoundpredicate\/connective",
                "title" : "let connective: LogicalConnective",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/compoundpredicate\/predicates",
                "title" : "let predicates: [Predicate]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/compoundpredicate\/match(graph:object:)",
                "title" : "func match(graph: Graph, object: ObjectSnapshot) -> Bool",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/compoundpredicate\/match(graph:edge:)",
                    "title" : "func match(graph: Graph, edge: Edge) -> Bool",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/compoundpredicate\/edgepredicate-implementations",
                "title" : "EdgePredicate Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/compoundpredicate\/match(graph:node:)",
                    "title" : "func match(graph: Graph, node: Node) -> Bool",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/compoundpredicate\/nodepredicate-implementations",
                "title" : "NodePredicate Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/compoundpredicate\/and(_:)",
                    "title" : "func and(Predicate) -> CompoundPredicate",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/compoundpredicate\/not()",
                    "title" : "func not() -> Predicate",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/compoundpredicate\/or(_:)",
                    "title" : "func or(Predicate) -> CompoundPredicate",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/compoundpredicate\/predicate-implementations",
                "title" : "Predicate Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/compoundpredicate",
            "title" : "CompoundPredicate",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/edgeobjectpredicate\/init(origin:target:edge:)",
                "title" : "init(origin: NodePredicate?, target: NodePredicate?, edge: EdgePredicate?)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/edgeobjectpredicate\/match(graph:edge:)",
                "title" : "func match(graph: Graph, edge: Edge) -> Bool",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/edgeobjectpredicate",
            "title" : "EdgeObjectPredicate",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/anypredicate\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/anypredicate\/match(graph:object:)",
                "title" : "func match(graph: Graph, object: ObjectSnapshot) -> Bool",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/anypredicate\/match(graph:edge:)",
                    "title" : "func match(graph: Graph, edge: Edge) -> Bool",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/anypredicate\/edgepredicate-implementations",
                "title" : "EdgePredicate Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/anypredicate\/match(graph:node:)",
                    "title" : "func match(graph: Graph, node: Node) -> Bool",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/anypredicate\/nodepredicate-implementations",
                "title" : "NodePredicate Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/anypredicate\/and(_:)",
                    "title" : "func and(Predicate) -> CompoundPredicate",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/anypredicate\/not()",
                    "title" : "func not() -> Predicate",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/anypredicate\/or(_:)",
                    "title" : "func or(Predicate) -> CompoundPredicate",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/anypredicate\/predicate-implementations",
                "title" : "Predicate Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/anypredicate",
            "title" : "AnyPredicate",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/istypepredicate\/init(_:)-1toby",
                "title" : "init([ObjectType])",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/istypepredicate\/init(_:)-9kpa",
                "title" : "init(ObjectType)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/istypepredicate\/match(graph:object:)",
                "title" : "func match(graph: Graph, object: ObjectSnapshot) -> Bool",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/istypepredicate\/match(graph:edge:)",
                    "title" : "func match(graph: Graph, edge: Edge) -> Bool",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/istypepredicate\/edgepredicate-implementations",
                "title" : "EdgePredicate Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/istypepredicate\/match(graph:node:)",
                    "title" : "func match(graph: Graph, node: Node) -> Bool",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/istypepredicate\/nodepredicate-implementations",
                "title" : "NodePredicate Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/istypepredicate\/and(_:)",
                    "title" : "func and(Predicate) -> CompoundPredicate",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/istypepredicate\/not()",
                    "title" : "func not() -> Predicate",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/istypepredicate\/or(_:)",
                    "title" : "func or(Predicate) -> CompoundPredicate",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/istypepredicate\/predicate-implementations",
                "title" : "Predicate Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/istypepredicate",
            "title" : "IsTypePredicate",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/negationpredicate\/init(_:)",
                "title" : "init(Predicate)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/negationpredicate\/predicate",
                "title" : "let predicate: Predicate",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/negationpredicate\/match(graph:object:)",
                "title" : "func match(graph: Graph, object: ObjectSnapshot) -> Bool",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/negationpredicate\/match(graph:edge:)",
                    "title" : "func match(graph: Graph, edge: Edge) -> Bool",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/negationpredicate\/edgepredicate-implementations",
                "title" : "EdgePredicate Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/negationpredicate\/match(graph:node:)",
                    "title" : "func match(graph: Graph, node: Node) -> Bool",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/negationpredicate\/nodepredicate-implementations",
                "title" : "NodePredicate Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/negationpredicate\/and(_:)",
                    "title" : "func and(Predicate) -> CompoundPredicate",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/negationpredicate\/not()",
                    "title" : "func not() -> Predicate",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/negationpredicate\/or(_:)",
                    "title" : "func or(Predicate) -> CompoundPredicate",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/negationpredicate\/predicate-implementations",
                "title" : "Predicate Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/negationpredicate",
            "title" : "NegationPredicate",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/init(_:)",
                "title" : "init(Component.Type)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/match(graph:object:)",
                "title" : "func match(graph: Graph, object: ObjectSnapshot) -> Bool",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/match(graph:edge:)",
                    "title" : "func match(graph: Graph, edge: Edge) -> Bool",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/edgepredicate-implementations",
                "title" : "EdgePredicate Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/match(graph:node:)",
                    "title" : "func match(graph: Graph, node: Node) -> Bool",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/nodepredicate-implementations",
                "title" : "NodePredicate Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/and(_:)",
                    "title" : "func and(Predicate) -> CompoundPredicate",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/not()",
                    "title" : "func not() -> Predicate",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/or(_:)",
                    "title" : "func or(Predicate) -> CompoundPredicate",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/predicate-implementations",
                "title" : "Predicate Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/hascomponentpredicate",
            "title" : "HasComponentPredicate",
            "type" : "class"
          },
          {
            "title" : "Constraints",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/constraint\/description",
                "title" : "var description: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/constraint\/name",
                "title" : "var name: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/constraint\/check(_:)",
                "title" : "func check(Graph) -> [ObjectID]",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/constraint",
            "title" : "Constraint",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/edgeconstraint\/init(name:description:match:requirement:)",
                "title" : "init(name: String, description: String?, match: EdgePredicate, requirement: EdgeConstraintRequirement)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/edgeconstraint\/description",
                "title" : "let description: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/edgeconstraint\/match",
                "title" : "let match: EdgePredicate",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/edgeconstraint\/name",
                "title" : "let name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/edgeconstraint\/requirement",
                "title" : "let requirement: EdgeConstraintRequirement",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/edgeconstraint\/check(_:)",
                "title" : "func check(Graph) -> [ObjectID]",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/edgeconstraint",
            "title" : "EdgeConstraint",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/nodeconstraint\/init(name:description:match:requirement:)",
                "title" : "init(name: String, description: String?, match: NodePredicate, requirement: NodeConstraintRequirement)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/nodeconstraint\/description",
                "title" : "let description: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/nodeconstraint\/match",
                "title" : "let match: NodePredicate",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/nodeconstraint\/name",
                "title" : "let name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/nodeconstraint\/requirement",
                "title" : "let requirement: NodeConstraintRequirement",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/nodeconstraint\/check(_:)",
                "title" : "func check(Graph) -> [ObjectID]",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/nodeconstraint",
            "title" : "NodeConstraint",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/edgeendpointtypes\/init(origin:target:edge:)",
                "title" : "init(origin: IsTypePredicate?, target: IsTypePredicate?, edge: IsTypePredicate?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/edgeendpointtypes\/edge",
                "title" : "let edge: IsTypePredicate?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/edgeendpointtypes\/origin",
                "title" : "let origin: IsTypePredicate?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/edgeendpointtypes\/target",
                "title" : "let target: IsTypePredicate?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/edgeendpointtypes\/check(graph:edges:)",
                "title" : "func check(graph: Graph, edges: [Edge]) -> [ObjectID]",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/edgeendpointtypes",
            "title" : "EdgeEndpointTypes",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/rejectall\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/rejectall\/check(graph:objects:)",
                "title" : "func check(graph: Graph, objects: [ObjectSnapshot]) -> [ObjectID]",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rejectall\/check(graph:edges:)",
                    "title" : "func check(graph: Graph, edges: [Edge]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/rejectall\/edgeconstraintrequirement-implementations",
                "title" : "EdgeConstraintRequirement Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rejectall\/check(graph:nodes:)",
                    "title" : "func check(graph: Graph, nodes: [Node]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/rejectall\/nodeconstraintrequirement-implementations",
                "title" : "NodeConstraintRequirement Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/rejectall",
            "title" : "RejectAll",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/acceptall\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/acceptall\/check(graph:objects:)",
                "title" : "func check(graph: Graph, objects: [ObjectSnapshot]) -> [ObjectID]",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/acceptall\/check(graph:edges:)",
                    "title" : "func check(graph: Graph, edges: [Edge]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/acceptall\/edgeconstraintrequirement-implementations",
                "title" : "EdgeConstraintRequirement Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/acceptall\/check(graph:nodes:)",
                    "title" : "func check(graph: Graph, nodes: [Node]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/acceptall\/nodeconstraintrequirement-implementations",
                "title" : "NodeConstraintRequirement Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/acceptall",
            "title" : "AcceptAll",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/constraintviolation\/init(constraint:objects:)",
                "title" : "init(constraint: Constraint, objects: [ObjectID])",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintviolation\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/constraintviolation\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/constraintviolation",
            "title" : "ConstraintViolation",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/constraintviolationerror\/prettydescriptionsbyobject",
                "title" : "var prettyDescriptionsByObject: [ObjectID : [String]]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/constraintviolationerror\/violations",
                "title" : "let violations: [ConstraintViolation]",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintviolationerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/constraintviolationerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/constraintviolationerror",
            "title" : "ConstraintViolationError",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/uniqueneighbourrequirement\/init(_:required:)",
                "title" : "init(NeighborhoodSelector, required: Bool)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/uniqueneighbourrequirement\/isrequired",
                "title" : "let isRequired: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/uniqueneighbourrequirement\/selector",
                "title" : "let selector: NeighborhoodSelector",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/uniqueneighbourrequirement\/check(graph:node:)",
                "title" : "func check(graph: Graph, node: Node) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/uniqueneighbourrequirement\/check(graph:nodes:)",
                "title" : "func check(graph: Graph, nodes: [Node]) -> [ObjectID]",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/uniqueneighbourrequirement",
            "title" : "UniqueNeighbourRequirement",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/uniqueproperty\/init(_:)",
                "title" : "init((ObjectSnapshot) -> Value?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/uniqueproperty\/extract",
                "title" : "var extract: (ObjectSnapshot) -> Value?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/uniqueproperty\/check(graph:objects:)",
                "title" : "func check(graph: Graph, objects: [ObjectSnapshot]) -> [ObjectID]",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/uniqueproperty\/check(graph:edges:)",
                    "title" : "func check(graph: Graph, edges: [Edge]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/uniqueproperty\/edgeconstraintrequirement-implementations",
                "title" : "EdgeConstraintRequirement Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/uniqueproperty\/check(graph:nodes:)",
                    "title" : "func check(graph: Graph, nodes: [Node]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/uniqueproperty\/nodeconstraintrequirement-implementations",
                "title" : "NodeConstraintRequirement Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/uniqueproperty",
            "title" : "UniqueProperty",
            "type" : "class"
          },
          {
            "title" : "Foreign Interfaces",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/array(_:)",
                "title" : "case array([ForeignAtom])",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/atom(_:)",
                "title" : "case atom(ForeignAtom)",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/init(_:)-2173e",
                "title" : "init(Int)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/init(_:)-2q19a",
                "title" : "init(Double)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/init(_:)-45u2y",
                "title" : "init(Point)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/init(_:)-4tepc",
                "title" : "init([Point])",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/init(_:)-7ln3y",
                "title" : "init(String)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/init(_:)-8l2id",
                "title" : "init([Double])",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/init(_:)-8l4o5",
                "title" : "init(Bool)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/init(_:)-8oklt",
                "title" : "init(ObjectID)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/init(ids:)",
                "title" : "init(ids: [ObjectID])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/arrayitemtype",
                "title" : "var arrayItemType: AtomType?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/isarray",
                "title" : "var isArray: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/isnumeric",
                "title" : "var isNumeric: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/valuetype",
                "title" : "var valueType: AtomType?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/boolarray()",
                "title" : "func boolArray() throws -> [Bool]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/boolvalue()",
                "title" : "func boolValue() throws -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/doublearray()",
                "title" : "func doubleArray() throws -> [Double]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/doublevalue()",
                "title" : "func doubleValue() throws -> Double",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/idvalue()",
                "title" : "func idValue() throws -> ObjectID",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/intarray()",
                "title" : "func intArray() throws -> [Int]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/intvalue()",
                "title" : "func intValue() throws -> Int",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/pointarray()",
                "title" : "func pointArray() throws -> [Point]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/pointvalue()",
                "title" : "func pointValue() throws -> Point",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/stringarray()",
                "title" : "func stringArray() throws -> [String]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/stringvalue()",
                "title" : "func stringValue() throws -> String",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/tojson()",
                "title" : "func toJSON() throws -> String",
                "type" : "method"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignvalue\/fromjson(_:)",
                "title" : "static func fromJSON(String) throws -> ForeignValue",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignvalue\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignvalue\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignvalue\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/init(extendedgraphemeclusterliteral:)",
                    "title" : "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                    "type" : "init"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignvalue\/expressiblebyextendedgraphemeclusterliteral-implementations",
                "title" : "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/init(floatliteral:)",
                    "title" : "init(floatLiteral: Double)",
                    "type" : "init"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/floatliteraltype",
                    "title" : "ForeignValue.FloatLiteralType",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignvalue\/expressiblebyfloatliteral-implementations",
                "title" : "ExpressibleByFloatLiteral Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/init(integerliteral:)",
                    "title" : "init(integerLiteral: Int)",
                    "type" : "init"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/integerliteraltype",
                    "title" : "ForeignValue.IntegerLiteralType",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignvalue\/expressiblebyintegerliteral-implementations",
                "title" : "ExpressibleByIntegerLiteral Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/init(stringliteral:)",
                    "title" : "init(stringLiteral: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/stringliteraltype",
                    "title" : "ForeignValue.StringLiteralType",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignvalue\/expressiblebystringliteral-implementations",
                "title" : "ExpressibleByStringLiteral Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalue\/init(unicodescalarliteral:)",
                    "title" : "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                    "type" : "init"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignvalue\/expressiblebyunicodescalarliteral-implementations",
                "title" : "ExpressibleByUnicodeScalarLiteral Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/foreignvalue",
            "title" : "ForeignValue",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignrecord\/init(_:)",
                "title" : "init([String : ForeignValue])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignrecord\/allkeys",
                "title" : "var allKeys: [String]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignrecord\/idvalue(for:)",
                "title" : "func IDValue(for: String) throws -> UInt64",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignrecord\/idvalueifpresent(for:)",
                "title" : "func IDValueIfPresent(for: String) throws -> UInt64?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignrecord\/boolvalue(for:)",
                "title" : "func boolValue(for: String) throws -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignrecord\/boolvalueifpresent(for:)",
                "title" : "func boolValueIfPresent(for: String) throws -> Bool?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignrecord\/doublevalue(for:)",
                "title" : "func doubleValue(for: String) throws -> Double",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignrecord\/doublevalueifpresent(for:)",
                "title" : "func doubleValueIfPresent(for: String) throws -> Double?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignrecord\/intvalue(for:)",
                "title" : "func intValue(for: String) throws -> Int",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignrecord\/intvalueifpresent(for:)",
                "title" : "func intValueIfPresent(for: String) throws -> Int?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignrecord\/stringvalue(for:)",
                "title" : "func stringValue(for: String) throws -> String",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignrecord\/stringvalueifpresent(for:)",
                "title" : "func stringValueIfPresent(for: String) throws -> String?",
                "type" : "method"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignrecord\/subscript(_:)",
                "title" : "subscript(String) -> ForeignValue?",
                "type" : "subscript"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignrecord\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignrecord\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/==(_:_:)",
                    "title" : "static func == (ForeignRecord, ForeignRecord) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignrecord\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/foreignrecord",
            "title" : "ForeignRecord",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/bool(_:)",
                "title" : "case bool(Bool)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/double(_:)",
                "title" : "case double(Double)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/id(_:)",
                "title" : "case id(ObjectID)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/int(_:)",
                "title" : "case int(Int)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/point(_:)",
                "title" : "case point(Point)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/string(_:)",
                "title" : "case string(String)",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/init(_:)-18ij6",
                "title" : "init(ObjectID)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/init(_:)-47uxw",
                "title" : "init(Int)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/init(_:)-5o0r8",
                "title" : "init(Bool)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/init(_:)-6p40z",
                "title" : "init(Point)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/init(_:)-9e33v",
                "title" : "init(Double)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/init(_:)-hj81",
                "title" : "init(String)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/isnumeric",
                "title" : "var isNumeric: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/valuetype",
                "title" : "var valueType: AtomType",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/boolvalue()",
                "title" : "func boolValue() throws -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/doublevalue()",
                "title" : "func doubleValue() throws -> Double",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/idvalue()",
                "title" : "func idValue() throws -> ObjectID",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/intvalue()",
                "title" : "func intValue() throws -> Int",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/pointvalue()",
                "title" : "func pointValue() throws -> Point",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/stringvalue()",
                "title" : "func stringValue() -> String",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/tojson()",
                "title" : "func toJSON() throws -> String",
                "type" : "method"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignatom\/fromjson(_:)",
                "title" : "static func fromJSON(String) throws -> ForeignAtom",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignatom\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignatom\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignatom\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignatom\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/foreignatom",
            "title" : "ForeignAtom",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignrecorderror\/typemismatch(_:_:)",
                "title" : "case typeMismatch(String, String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignrecorderror\/unknownkey(_:)",
                "title" : "case unknownKey(String)",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecorderror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignrecorderror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/foreignrecorderror",
            "title" : "ForeignRecordError",
            "type" : "enum"
          },
          {
            "title" : "Arithmetic Expression",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/arithmeticexpression\/binary(_:_:_:)",
                "title" : "case binary(ArithmeticExpression<L, V, F>.FunctionReference, ArithmeticExpression<L, V, F>, ArithmeticExpression<L, V, F>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/arithmeticexpression\/function(_:_:)",
                "title" : "case function(ArithmeticExpression<L, V, F>.FunctionReference, [ArithmeticExpression<L, V, F>])",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/arithmeticexpression\/unary(_:_:)",
                "title" : "case unary(ArithmeticExpression<L, V, F>.FunctionReference, ArithmeticExpression<L, V, F>)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/arithmeticexpression\/value(_:)",
                "title" : "case value(ArithmeticExpression<L, V, F>.LiteralValue)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/arithmeticexpression\/variable(_:)",
                "title" : "case variable(ArithmeticExpression<L, V, F>.VariableReference)",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/arithmeticexpression\/allvariables",
                "title" : "var allVariables: [ArithmeticExpression<L, V, F>.VariableReference]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/arithmeticexpression\/children",
                "title" : "var children: [ArithmeticExpression<L, V, F>]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/arithmeticexpression\/valuetype",
                "title" : "var valueType: AtomType",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/arithmeticexpression\/evaluate(_:)",
                "title" : "func evaluate([BoundVariableReference : ForeignValue]) throws -> ForeignValue",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/arithmeticexpression\/functionreference",
                "title" : "ArithmeticExpression.FunctionReference",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/poieticcore\/arithmeticexpression\/literalvalue",
                "title" : "ArithmeticExpression.LiteralValue",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/poieticcore\/arithmeticexpression\/variablereference",
                "title" : "ArithmeticExpression.VariableReference",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/==(_:_:)",
                    "title" : "static func == (ArithmeticExpression<L, V, F>, ArithmeticExpression<L, V, F>) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/arithmeticexpression\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/arithmeticexpression",
            "title" : "ArithmeticExpression",
            "type" : "enum"
          },
          {
            "path" : "\/documentation\/poieticcore\/unboundexpression",
            "title" : "UnboundExpression",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/poieticcore\/boundexpression",
            "title" : "BoundExpression",
            "type" : "typealias"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/boundvariablereference\/==(_:_:)",
                "title" : "static func == (BoundVariableReference, BoundVariableReference) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/boundvariablereference\/builtin(_:)",
                "title" : "case builtin(BuiltinVariable)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/boundvariablereference\/object(_:)",
                "title" : "case object(ObjectID)",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/boundvariablereference\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/boundvariablereference\/valuetype",
                "title" : "var valueType: AtomType",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/boundvariablereference\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/boundvariablereference\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/boundvariablereference",
            "title" : "BoundVariableReference",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/builtinvariable\/==(_:_:)",
                "title" : "static func == (BuiltinVariable, BuiltinVariable) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/builtinvariable\/init(name:value:description:)",
                "title" : "init(name: String, value: ForeignValue?, description: String?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/builtinvariable\/description",
                "title" : "let description: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/builtinvariable\/initialvalue",
                "title" : "let initialValue: ForeignValue?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/builtinvariable\/name",
                "title" : "let name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/builtinvariable\/valuetype",
                "title" : "let valueType: AtomType",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/builtinvariable\/hash(into:)",
                "title" : "func hash(into: inout Hasher)",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/builtinvariable\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/builtinvariable\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/builtinvariable",
            "title" : "BuiltinVariable",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionprotocol\/name",
                "title" : "var name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionprotocol\/signature",
                "title" : "var signature: Signature",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionprotocol\/apply(_:)",
                "title" : "func apply([ForeignValue]) throws -> ForeignValue",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/functionprotocol",
            "title" : "FunctionProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericfunction\/==(_:_:)",
                "title" : "static func == (NumericFunction, NumericFunction) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericfunction\/init(name:signature:implementation:)",
                "title" : "init(name: String, signature: Signature, implementation: NumericFunction.Implementation)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericfunction\/implementation-swift.property",
                "title" : "let implementation: NumericFunction.Implementation",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericfunction\/name",
                "title" : "let name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericfunction\/signature",
                "title" : "let signature: Signature",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericfunction\/apply(_:)",
                "title" : "func apply([ForeignValue]) throws -> ForeignValue",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericfunction\/hash(into:)",
                "title" : "func hash(into: inout Hasher)",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericfunction\/implementation-swift.typealias",
                "title" : "NumericFunction.Implementation",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericfunction\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/numericfunction\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/numericfunction",
            "title" : "NumericFunction",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericunaryfunction\/==(_:_:)",
                "title" : "static func == (NumericUnaryFunction, NumericUnaryFunction) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericunaryfunction\/init(name:argumentname:implementation:)",
                "title" : "init(name: String, argumentName: String, implementation: NumericUnaryFunction.Implementation)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericunaryfunction\/implementation-swift.property",
                "title" : "let implementation: NumericUnaryFunction.Implementation",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericunaryfunction\/name",
                "title" : "let name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericunaryfunction\/signature",
                "title" : "let signature: Signature",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericunaryfunction\/apply(_:)",
                "title" : "func apply([ForeignValue]) throws -> ForeignValue",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericunaryfunction\/hash(into:)",
                "title" : "func hash(into: inout Hasher)",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericunaryfunction\/implementation-swift.typealias",
                "title" : "NumericUnaryFunction.Implementation",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericunaryfunction\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/numericunaryfunction\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/numericunaryfunction",
            "title" : "NumericUnaryFunction",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/==(_:_:)",
                "title" : "static func == (NumericBinaryFunction, NumericBinaryFunction) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/init(name:implementation:)",
                "title" : "init(name: String, implementation: NumericBinaryFunction.Implementation)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/implementation-swift.property",
                "title" : "let implementation: NumericBinaryFunction.Implementation",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/name",
                "title" : "let name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/signature",
                "title" : "let signature: Signature",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/apply(_:)",
                "title" : "func apply([ForeignValue]) throws -> ForeignValue",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/hash(into:)",
                "title" : "func hash(into: inout Hasher)",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/implementation-swift.typealias",
                "title" : "NumericBinaryFunction.Implementation",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/numericbinaryfunction\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/numericbinaryfunction",
            "title" : "NumericBinaryFunction",
            "type" : "class"
          },
          {
            "title" : "Arithmetic Expression Parsing and Syntax",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/scanner\/init(string:)",
                "title" : "init(string: String)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/scanner\/currentchar",
                "title" : "var currentChar: Character?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/scanner\/currentindex",
                "title" : "var currentIndex: String.Index",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/scanner\/location",
                "title" : "var location: TextLocation",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/scanner\/source",
                "title" : "let source: String",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticcore\/scanner",
            "title" : "Scanner",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionparser\/init(lexer:)",
                "title" : "init(lexer: ExpressionLexer)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionparser\/init(string:)",
                "title" : "convenience init(string: String)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionparser\/atend",
                "title" : "var atEnd: Bool",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionparser\/parse()",
                "title" : "func parse() throws -> UnboundExpression",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/expressionparser",
            "title" : "ExpressionParser",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionlexer\/init(scanner:)",
                "title" : "init(scanner: Scanner)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionlexer\/init(string:)",
                "title" : "convenience init(string: String)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionlexer\/atend",
                "title" : "var atEnd: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionlexer\/scanner",
                "title" : "let scanner: Scanner",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionlexer\/accept()",
                "title" : "func accept()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionlexer\/accept(_:)-3ev9z",
                "title" : "func accept((Character) -> Bool) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionlexer\/accept(_:)-76xhd",
                "title" : "func accept(Character) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionlexer\/acceptleadingtrivia()",
                "title" : "func acceptLeadingTrivia()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionlexer\/accepttoken()",
                "title" : "func acceptToken() -> TokenType?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionlexer\/accepttrailingtrivia()",
                "title" : "func acceptTrailingTrivia()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionlexer\/advance()",
                "title" : "func advance()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionlexer\/next()",
                "title" : "func next() -> Token",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/expressionlexer",
            "title" : "ExpressionLexer",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/functioncallsyntax\/init(name:leftparen:arguments:rightparen:)",
                "title" : "init(name: Token, leftParen: Token, arguments: FunctionArgumentListSyntax, rightParen: Token)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/functioncallsyntax\/arguments",
                "title" : "let arguments: FunctionArgumentListSyntax",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/functioncallsyntax\/fulltext",
                "title" : "var fullText: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/functioncallsyntax\/leftparen",
                "title" : "let leftParen: Token",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/functioncallsyntax\/name",
                "title" : "let name: Token",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/functioncallsyntax\/rightparen",
                "title" : "let rightParen: Token",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functioncallsyntax\/toexpression()",
                    "title" : "func toExpression() -> UnboundExpression",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/functioncallsyntax\/expressionsyntax-implementations",
                "title" : "ExpressionSyntax Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/functioncallsyntax",
            "title" : "FunctionCallSyntax",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionargumentsyntax\/init(argument:trailingcomma:)",
                "title" : "init(argument: ExpressionSyntax, trailingComma: Token?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionargumentsyntax\/argument",
                "title" : "let argument: ExpressionSyntax",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionargumentsyntax\/fulltext",
                "title" : "var fullText: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionargumentsyntax\/trailingcomma",
                "title" : "let trailingComma: Token?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargumentsyntax\/toexpression()",
                    "title" : "func toExpression() -> UnboundExpression",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/functionargumentsyntax\/expressionsyntax-implementations",
                "title" : "ExpressionSyntax Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/functionargumentsyntax",
            "title" : "FunctionArgumentSyntax",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionargumentlistsyntax\/init(arguments:)",
                "title" : "init(arguments: [FunctionArgumentSyntax])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionargumentlistsyntax\/arguments",
                "title" : "let arguments: [FunctionArgumentSyntax]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionargumentlistsyntax\/fulltext",
                "title" : "var fullText: String",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargumentlistsyntax\/toexpression()",
                    "title" : "func toExpression() -> UnboundExpression",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/functionargumentlistsyntax\/expressionsyntax-implementations",
                "title" : "ExpressionSyntax Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/functionargumentlistsyntax",
            "title" : "FunctionArgumentListSyntax",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/parenthesissyntax\/init(leftparen:expression:rightparen:)",
                "title" : "init(leftParen: Token, expression: ExpressionSyntax, rightParen: Token)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/parenthesissyntax\/expression",
                "title" : "let expression: ExpressionSyntax",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/parenthesissyntax\/fulltext",
                "title" : "var fullText: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/parenthesissyntax\/leftparen",
                "title" : "let leftParen: Token",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/parenthesissyntax\/rightparen",
                "title" : "let rightParen: Token",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/parenthesissyntax\/toexpression()",
                    "title" : "func toExpression() -> UnboundExpression",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/parenthesissyntax\/expressionsyntax-implementations",
                "title" : "ExpressionSyntax Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/parenthesissyntax",
            "title" : "ParenthesisSyntax",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax\/init(op:operand:)",
                "title" : "init(op: Token, operand: ExpressionSyntax)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax\/fulltext",
                "title" : "var fullText: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax\/op",
                "title" : "let op: Token",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax\/operand",
                "title" : "let operand: ExpressionSyntax",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax\/toexpression()",
                    "title" : "func toExpression() -> UnboundExpression",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax\/expressionsyntax-implementations",
                "title" : "ExpressionSyntax Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax",
            "title" : "UnaryOperatorSyntax",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/init(leftoperand:op:rightoperand:)",
                "title" : "init(leftOperand: ExpressionSyntax, op: Token, rightOperand: ExpressionSyntax)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/fulltext",
                "title" : "var fullText: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/leftoperand",
                "title" : "let leftOperand: ExpressionSyntax",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/op",
                "title" : "let op: Token",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/rightoperand",
                "title" : "let rightOperand: ExpressionSyntax",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/toexpression()",
                    "title" : "func toExpression() -> UnboundExpression",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/expressionsyntax-implementations",
                "title" : "ExpressionSyntax Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax",
            "title" : "BinaryOperatorSyntax",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/variablesyntax\/init(variable:)",
                "title" : "init(variable: Token)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/variablesyntax\/fulltext",
                "title" : "var fullText: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variablesyntax\/variable",
                "title" : "let variable: Token",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variablesyntax\/toexpression()",
                    "title" : "func toExpression() -> UnboundExpression",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/variablesyntax\/expressionsyntax-implementations",
                "title" : "ExpressionSyntax Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/variablesyntax",
            "title" : "VariableSyntax",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/literalsyntax\/init(type:literal:)",
                "title" : "init(type: LiteralSyntax.LiteralType, literal: Token)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/literalsyntax\/fulltext",
                "title" : "var fullText: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/literalsyntax\/literal",
                "title" : "let literal: Token",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/literalsyntax\/type",
                "title" : "let type: LiteralSyntax.LiteralType",
                "type" : "property"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/literalsyntax\/literaltype\/double",
                    "title" : "case double",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/literalsyntax\/literaltype\/int",
                    "title" : "case int",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/literalsyntax\/literaltype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/literalsyntax\/literaltype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/literalsyntax\/literaltype",
                "title" : "LiteralSyntax.LiteralType",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/literalsyntax\/toexpression()",
                    "title" : "func toExpression() -> UnboundExpression",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/literalsyntax\/expressionsyntax-implementations",
                "title" : "ExpressionSyntax Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/literalsyntax",
            "title" : "LiteralSyntax",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/textlocation\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/textlocation\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/textlocation\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/textlocation",
            "title" : "TextLocation",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/token\/init(type:source:range:leadingtriviarange:trailingtriviarange:textlocation:)",
                "title" : "init(type: TokenType, source: String, range: Range<String.Index>, leadingTriviaRange: Range<String.Index>?, trailingTriviaRange: Range<String.Index>?, textLocation: TextLocation)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/token\/fulltext",
                "title" : "var fullText: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/token\/leadingtrivia",
                "title" : "let leadingTrivia: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/token\/leadingtriviarange",
                "title" : "let leadingTriviaRange: Range<String.Index>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/token\/range",
                "title" : "let range: Range<String.Index>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/token\/text",
                "title" : "let text: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/token\/textlocation",
                "title" : "let textLocation: TextLocation",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/token\/trailingtrivia",
                "title" : "let trailingTrivia: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/token\/trailingtriviarange",
                "title" : "let trailingTriviaRange: Range<String.Index>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/token\/type",
                "title" : "let type: TokenType",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/token\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/token",
            "title" : "Token",
            "type" : "struct"
          },
          {
            "title" : "Persistence and Foreign Interfaces",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/poieticcore\/attributedictionary",
            "title" : "AttributeDictionary",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/poieticcore\/attributekey",
            "title" : "AttributeKey",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/poieticcore\/attributevalue",
            "title" : "AttributeValue",
            "type" : "typealias"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignrecorderror\/typemismatch(_:_:)",
                "title" : "case typeMismatch(String, String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/foreignrecorderror\/unknownkey(_:)",
                "title" : "case unknownKey(String)",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecorderror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignrecorderror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/foreignrecorderror",
            "title" : "ForeignRecordError",
            "type" : "enum"
          },
          {
            "title" : "Classes",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/init(_:fields:options:)",
                "title" : "init(String, fields: [String]?, options: CSVOptions) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/next()",
                "title" : "func next() -> ForeignRecord?",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/lazy",
                    "title" : "var lazy: LazySequence<Self>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/publisher",
                    "title" : "var publisher: Publishers.Sequence<Self, Never>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/underestimatedcount",
                    "title" : "var underestimatedCount: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/allsatisfy(_:)",
                    "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/compactmap(_:)",
                    "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/compare(_:_:)",
                    "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/contains(_:)",
                    "title" : "func contains(Self.Element) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/contains(where:)",
                    "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/drop(while:)",
                    "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/dropfirst(_:)",
                    "title" : "func dropFirst(Int) -> DropFirstSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/droplast(_:)",
                    "title" : "func dropLast(Int) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/elementsequal(_:)",
                    "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/elementsequal(_:by:)",
                    "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/enumerated()",
                    "title" : "func enumerated() -> EnumeratedSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/filter(_:)-3af86",
                    "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/filter(_:)-7a8sg",
                    "title" : "func filter(Predicate<Self.Element>) throws -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/first(where:)",
                    "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/flatmap(_:)-3oq6e",
                    "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/flatmap(_:)-8remy",
                    "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/foreach(_:)",
                    "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/formatted(_:)",
                    "title" : "func formatted<S>(S) -> S.FormatOutput",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/lexicographicallyprecedes(_:by:)",
                    "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/makeiterator()",
                    "title" : "func makeIterator() -> Self",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/map(_:)",
                    "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/max(by:)",
                    "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/min(by:)",
                    "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/prefix(_:)",
                    "title" : "func prefix(Int) -> PrefixSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/prefix(while:)",
                    "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/reduce(_:_:)",
                    "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/reduce(into:_:)",
                    "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/reversed()",
                    "title" : "func reversed() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/shuffled()",
                    "title" : "func shuffled() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/shuffled(using:)",
                    "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/sorted(by:)",
                    "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/sorted(using:)-5b172",
                    "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/sorted(using:)-94azp",
                    "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                    "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/split(separator:maxsplits:omittingemptysubsequences:)",
                    "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/starts(with:)",
                    "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/starts(with:by:)",
                    "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/suffix(_:)",
                    "title" : "func suffix(Int) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/withcontiguousstorageifavailable(_:)",
                    "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/sequence-implementations",
                "title" : "Sequence Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/csvforeignrecordreader",
            "title" : "CSVForeignRecordReader",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/csvformatter\/init(options:)",
                "title" : "init(options: CSVOptions)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/csvformatter\/options",
                "title" : "let options: CSVOptions",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/csvformatter\/format(row:)",
                "title" : "func format(row: [String]) -> String",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/csvformatter\/quote(_:)",
                "title" : "func quote(String) -> String",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/csvformatter",
            "title" : "CSVFormatter",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/csvoptions\/init(fielddelimiter:recorddelimiter:)",
                "title" : "init(fieldDelimiter: Character, recordDelimiter: Character)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/csvoptions\/fielddelimiter",
                "title" : "let fieldDelimiter: Character",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/csvoptions\/recorddelimiter",
                "title" : "let recordDelimiter: Character",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticcore\/csvoptions",
            "title" : "CSVOptions",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/csvwriter\/init(path:)",
                "title" : "init(path: String) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/csvwriter\/close()",
                "title" : "func close() throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/csvwriter\/write(row:)",
                "title" : "func write(row: [String]) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/csvwriter",
            "title" : "CSVWriter",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/signature\/init(_:variadic:returns:)",
                "title" : "init([FunctionArgument], variadic: FunctionArgument?, returns: AtomType?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/signature\/init(numeric:)",
                "title" : "convenience init(numeric: [String])",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/signature\/init(numericvariadic:)",
                "title" : "convenience init(numericVariadic: String)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/signature\/isvariadic",
                "title" : "var isVariadic: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/signature\/minimalargumentcount",
                "title" : "var minimalArgumentCount: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/signature\/positional",
                "title" : "let positional: [FunctionArgument]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/signature\/returntype",
                "title" : "var returnType: AtomType?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/signature\/variadic",
                "title" : "let variadic: FunctionArgument?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/signature\/validate(_:)",
                "title" : "func validate([AtomType]) -> Signature.ValidationResult",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/signature\/numericunary",
                "title" : "static let NumericUnary: Signature",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/signature\/numericvariadic",
                "title" : "static let NumericVariadic: Signature",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/signature\/void",
                "title" : "static let Void: Signature",
                "type" : "property"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/validationresult\/invalidnumberofarguments",
                    "title" : "case invalidNumberOfArguments",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/validationresult\/ok",
                    "title" : "case ok",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/validationresult\/typemismatch(_:)",
                    "title" : "case typeMismatch([Int])",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/signature\/validationresult\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/signature\/validationresult\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/signature\/validationresult",
                "title" : "Signature.ValidationResult",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/poieticcore\/signature",
            "title" : "Signature",
            "type" : "class"
          },
          {
            "title" : "Protocols",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/edgeconstraintrequirement\/check(graph:edges:)-5zmv",
                        "title" : "func check(graph: Graph, edges: [Edge]) -> [ObjectID]",
                        "type" : "method"
                      }
                    ],
                    "title" : "EdgeConstraintRequirement Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/edgeconstraintrequirement\/check(graph:edges:)-cpwh",
                "title" : "func check(graph: Graph, edges: [Edge]) -> [ObjectID]",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/edgeconstraintrequirement",
            "title" : "EdgeConstraintRequirement",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionconvertible\/toexpression",
                "title" : "var toExpression: UnboundExpression",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticcore\/expressionconvertible",
            "title" : "ExpressionConvertible",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionsyntax\/fulltext",
                "title" : "var fullText: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionsyntax\/toexpression()",
                "title" : "func toExpression() -> UnboundExpression",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/expressionsyntax",
            "title" : "ExpressionSyntax",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/keyedattributes\/attributekeys",
                "title" : "var attributeKeys: [AttributeKey]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/keyedattributes\/attribute(forkey:)",
                "title" : "func attribute(forKey: String) -> AttributeValue?",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/keyedattributes\/dictionary(withkeys:)-8fe4k",
                        "title" : "func dictionary(withKeys: [AttributeKey]) -> AttributeDictionary",
                        "type" : "method"
                      }
                    ],
                    "title" : "KeyedAttributes Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/keyedattributes\/dictionary(withkeys:)-511xu",
                "title" : "func dictionary(withKeys: [AttributeKey]) -> AttributeDictionary",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/keyedattributes",
            "title" : "KeyedAttributes",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutablekeyedattributes\/setattribute(value:forkey:)",
                "title" : "func setAttribute(value: AttributeValue, forKey: AttributeKey) throws",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/mutablekeyedattributes\/setattributes(_:)-x2uj",
                        "title" : "func setAttributes(AttributeDictionary) throws",
                        "type" : "method"
                      }
                    ],
                    "title" : "MutableKeyedAttributes Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/mutablekeyedattributes\/setattributes(_:)-40hq7",
                "title" : "func setAttributes(AttributeDictionary) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/mutablekeyedattributes",
            "title" : "MutableKeyedAttributes",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/nodeconstraintrequirement\/check(graph:nodes:)-n2uy",
                        "title" : "func check(graph: Graph, nodes: [Node]) -> [ObjectID]",
                        "type" : "method"
                      }
                    ],
                    "title" : "NodeConstraintRequirement Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/nodeconstraintrequirement\/check(graph:nodes:)-923pq",
                "title" : "func check(graph: Graph, nodes: [Node]) -> [ObjectID]",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/nodeconstraintrequirement",
            "title" : "NodeConstraintRequirement",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectconstraintrequirement\/check(graph:objects:)",
                "title" : "func check(graph: Graph, objects: [ObjectSnapshot]) -> [ObjectID]",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/objectconstraintrequirement",
            "title" : "ObjectConstraintRequirement",
            "type" : "protocol"
          },
          {
            "title" : "Structures",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/extendedforeignrecord\/components",
                "title" : "let components: [String : ForeignRecord]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/extendedforeignrecord\/main",
                "title" : "let main: ForeignRecord",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/extendedforeignrecord\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/extendedforeignrecord\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/extendedforeignrecord\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/extendedforeignrecord\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/extendedforeignrecord",
            "title" : "ExtendedForeignRecord",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionargument\/init(_:type:)",
                "title" : "init(String, type: ArgumentType)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionargument\/name",
                "title" : "let name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionargument\/type",
                "title" : "let type: ArgumentType",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticcore\/functionargument",
            "title" : "FunctionArgument",
            "type" : "struct"
          },
          {
            "title" : "Functions",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/poieticcore\/bindexpression(_:variables:functions:)",
            "title" : "func bindExpression(UnboundExpression, variables: [String : BoundVariableReference], functions: [String : FunctionProtocol]) throws -> BoundExpression",
            "type" : "func"
          },
          {
            "path" : "\/documentation\/poieticcore\/persistablecomponent(name:)",
            "title" : "func persistableComponent(name: String) -> Component.Type?",
            "type" : "func"
          },
          {
            "path" : "\/documentation\/poieticcore\/registerpersistablecomponent(name:type:)",
            "title" : "func registerPersistableComponent(name: String, type: Component.Type)",
            "type" : "func"
          },
          {
            "title" : "Type Aliases",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/poieticcore\/id",
            "title" : "ID",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/poieticcore\/point",
            "title" : "Point",
            "type" : "typealias"
          },
          {
            "title" : "Enumerations",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/argumenttype\/any",
                "title" : "case any",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/argumenttype\/concrete(_:)",
                "title" : "case concrete(AtomType)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/argumenttype\/union(_:)",
                "title" : "case union([AtomType])",
                "type" : "case"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/argumenttype\/matches(_:)",
                "title" : "func matches(AtomType) -> Bool",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/argumenttype\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/argumenttype\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/argumenttype",
            "title" : "ArgumentType",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/atomtype\/bool",
                "title" : "case bool",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/atomtype\/double",
                "title" : "case double",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/atomtype\/int",
                "title" : "case int",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/atomtype\/point",
                "title" : "case point",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/atomtype\/string",
                "title" : "case string",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/atomtype\/init(rawvalue:)",
                "title" : "init?(rawValue: String)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/atomtype\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/atomtype\/isnumeric",
                "title" : "var isNumeric: Bool",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/atomtype\/isconvertible(to:)",
                "title" : "func isConvertible(to: AtomType) -> Bool",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/atomtype\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/atomtype\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/atomtype",
            "title" : "AtomType",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/attributeerror\/typemismatch(_:_:)",
                "title" : "case typeMismatch(ForeignValue, AtomType)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/attributeerror\/unexpectednil",
                "title" : "case unexpectedNil",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/attributeerror\/unknownattribute(name:type:)",
                "title" : "case unknownAttribute(name: String, type: String)",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attributeerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/attributeerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/attributeerror",
            "title" : "AttributeError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/csverror\/headerexpected",
                "title" : "case headerExpected",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/csverror\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csverror\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/csverror\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csverror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/csverror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/csverror",
            "title" : "CSVError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/expressionexpected",
                "title" : "case expressionExpected",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/invalidcharacterinnumber",
                "title" : "case invalidCharacterInNumber",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/missingrightparenthesis",
                "title" : "case missingRightParenthesis",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/unexpectedcharacter",
                "title" : "case unexpectedCharacter",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/unexpectedtoken",
                "title" : "case unexpectedToken",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/expressionsyntaxerror",
            "title" : "ExpressionSyntaxError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionerror\/invalidnumberofarguments(_:_:)",
                "title" : "case invalidNumberOfArguments(Int, Int)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionerror\/typemismatch(_:_:)",
                "title" : "case typeMismatch(Int, String)",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionerror\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/functionerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/functionerror",
            "title" : "FunctionError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/logicalconnective\/and",
                "title" : "case and",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/logicalconnective\/or",
                "title" : "case or",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/logicalconnective\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/logicalconnective\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/logicalconnective",
            "title" : "LogicalConnective",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/structuraltype\/edge",
                "title" : "case edge",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/structuraltype\/node",
                "title" : "case node",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/structuraltype\/object",
                "title" : "case object",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/structuraltype\/init(rawvalue:)",
                "title" : "init?(rawValue: String)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuraltype\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/structuraltype\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuraltype\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuraltype\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/structuraltype\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/structuraltype",
            "title" : "StructuralType",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/tokentype\/comma",
                "title" : "case comma",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/tokentype\/double",
                "title" : "case double",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/tokentype\/empty",
                "title" : "case empty",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/tokentype\/error(_:)",
                "title" : "case error(ExpressionSyntaxError)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/tokentype\/identifier",
                "title" : "case identifier",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/tokentype\/int",
                "title" : "case int",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/tokentype\/leftparen",
                "title" : "case leftParen",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/tokentype\/operator",
                "title" : "case `operator`",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/tokentype\/rightparen",
                "title" : "case rightParen",
                "type" : "case"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/tokentype\/tokenerror",
                "title" : "TokenType.TokenError",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/tokentype\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/tokentype\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/tokentype",
            "title" : "TokenType",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/valueerror\/invalidbooleanvalue(_:)",
                "title" : "case invalidBooleanValue(String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/valueerror\/typemismatch(_:_:)",
                "title" : "case typeMismatch(String, String)",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/valueerror\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valueerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/valueerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/valueerror",
            "title" : "ValueError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/array(_:)",
                "title" : "case array(AtomType)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/atom(_:)",
                "title" : "case atom(AtomType)",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/isarray",
                "title" : "var isArray: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/isatom",
                "title" : "var isAtom: Bool",
                "type" : "property"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/bool",
                "title" : "static let bool: ValueType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/bools",
                "title" : "static let bools: ValueType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/double",
                "title" : "static let double: ValueType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/doubles",
                "title" : "static let doubles: ValueType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/int",
                "title" : "static let int: ValueType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/ints",
                "title" : "static let ints: ValueType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/point",
                "title" : "static let point: ValueType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/points",
                "title" : "static let points: ValueType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/string",
                "title" : "static let string: ValueType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/valuetype\/strings",
                "title" : "static let strings: ValueType",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/valuetype\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/valuetype",
            "title" : "ValueType",
            "type" : "enum"
          }
        ],
        "path" : "\/documentation\/poieticcore",
        "title" : "PoieticCore",
        "type" : "module"
      }
    ]
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 1
  }
}