{
  "includedArchiveIdentifiers" : [
    "PoieticCore"
  ],
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "title" : "Essentials",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Object",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/init(id:snapshotid:type:structure:parent:attributes:components:)",
                    "title" : "init(id: ObjectID, snapshotID: SnapshotID, type: ObjectType, structure: StructuralComponent, parent: ObjectID?, attributes: [String : Variant], components: [any Component])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/attributekeys",
                    "title" : "var attributeKeys: [AttributeKey]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/attributes",
                    "title" : "var attributes: [String : Variant]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/children",
                    "title" : "var children: ChildrenSet",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/components",
                    "title" : "var components: ComponentSet",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/debugid",
                    "title" : "var debugID: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/hasissues",
                    "title" : "var hasIssues: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/id-swift.property",
                    "title" : "let id: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/inspectablecomponents",
                    "title" : "var inspectableComponents: [any InspectableComponent]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/issues",
                    "title" : "var issues: [any Error]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/name",
                    "title" : "var name: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/parent",
                    "title" : "var parent: ObjectID?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/position",
                    "title" : "var position: Point?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/prettydescription",
                    "title" : "var prettyDescription: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/snapshotid",
                    "title" : "let snapshotID: SnapshotID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/state",
                    "title" : "var state: VersionState",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/structure",
                    "title" : "var structure: StructuralComponent",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/type",
                    "title" : "let type: ObjectType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/appendissue(_:)",
                    "title" : "func appendIssue(any Error)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/attribute(forkey:)",
                    "title" : "func attribute(forKey: String) -> Variant?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/check(conformsto:)",
                    "title" : "func check(conformsTo: Trait) throws(ObjectConstraintError)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/promote(_:)",
                    "title" : "func promote(VersionState)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/removeallissues()",
                    "title" : "func removeAllIssues()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/removeattribute(forkey:)",
                    "title" : "func removeAttribute(forKey: String)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/setattribute(value:forkey:)",
                    "title" : "func setAttribute(value: Variant, forKey: String)",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/subscript(_:)-3b9l1",
                    "title" : "subscript<T>(T.Type) -> T?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/subscript(_:)-3wrl3",
                    "title" : "subscript(String) -> (Variant)?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/subscript(_:)-4wdrq",
                    "title" : "subscript(any Component.Type) -> (any Component)?",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/id-swift.typealias",
                    "title" : "ObjectSnapshot.ID",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/reservedattributenames",
                    "title" : "static let ReservedAttributeNames: [String]",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/objectsnapshot\/dictionary(withkeys:)",
                        "title" : "func dictionary(withKeys: [AttributeKey]) -> [AttributeKey : Variant]",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/keyedattributes-implementations",
                    "title" : "KeyedAttributes Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/objectsnapshot\/setattributes(_:)",
                        "title" : "func setAttributes([AttributeKey : Variant]) throws",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/mutablekeyedattributes-implementations",
                    "title" : "MutableKeyedAttributes Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/objectsnapshot",
                "title" : "ObjectSnapshot",
                "type" : "class"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectid",
                "title" : "ObjectID",
                "type" : "typealias"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuralcomponent\/edge(_:_:)",
                    "title" : "case edge(ObjectID, ObjectID)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuralcomponent\/node",
                    "title" : "case node",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuralcomponent\/unstructured",
                    "title" : "case unstructured",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuralcomponent\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuralcomponent\/type",
                    "title" : "var type: StructuralType",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/structuralcomponent\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/structuralcomponent\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/structuralcomponent",
                "title" : "StructuralComponent",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuraltype\/edge",
                    "title" : "case edge",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuraltype\/node",
                    "title" : "case node",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuraltype\/unstructured",
                    "title" : "case unstructured",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuraltype\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/structuraltype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/structuraltype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/structuraltype\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/structuraltype\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/structuraltype\/encode(to:)",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/structuraltype\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/structuraltype\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/structuraltype",
                "title" : "StructuralType",
                "type" : "enum"
              },
              {
                "path" : "\/documentation\/poieticcore\/snapshotid",
                "title" : "SnapshotID",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/poieticcore\/childrenset",
                "title" : "ChildrenSet",
                "type" : "typealias"
              },
              {
                "title" : "Design and Version Frames",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/design",
                    "title" : "var design: Design",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/id",
                    "title" : "var id: FrameID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/snapshots",
                    "title" : "var snapshots: [ObjectSnapshot]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/assert(constraint:)-79bse",
                    "title" : "func assert(constraint: Constraint) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/brokenreferences()-pz81",
                    "title" : "func brokenReferences() -> [ObjectID]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/brokenreferences(snapshot:)",
                    "title" : "func brokenReferences(snapshot: ObjectSnapshot) -> [ObjectID]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/contains(_:)",
                    "title" : "func contains(ObjectID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/filter(_:)-44p52",
                    "title" : "func filter((ObjectSnapshot) -> Bool) -> [ObjectSnapshot]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/filter(_:)-50lwx",
                    "title" : "func filter(any Predicate) -> [ObjectSnapshot]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/filter(component:)",
                    "title" : "func filter<T>(component: T.Type) -> [(ObjectSnapshot, T)]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/filter(trait:)",
                    "title" : "func filter(trait: Trait) -> [ObjectSnapshot]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/filter(type:)-2khoe",
                    "title" : "func filter(type: ObjectType) -> [ObjectSnapshot]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/filteredges(_:)",
                    "title" : "func filterEdges((Edge) -> Bool) -> [Edge]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/filternodes(_:)",
                    "title" : "func filterNodes((ObjectSnapshot) -> Bool) -> [Node]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/first(trait:)",
                    "title" : "func first(trait: Trait) -> ObjectSnapshot?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/first(type:)",
                    "title" : "func first(type: ObjectType) -> ObjectSnapshot?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/first(where:)",
                    "title" : "func first(where: (ObjectSnapshot) -> Bool) -> ObjectSnapshot?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/hasreferentialintegrity()-78e2a",
                    "title" : "func hasReferentialIntegrity() -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/neighbours(_:selector:)",
                    "title" : "func neighbours(ObjectID, selector: NeighborhoodSelector) -> [Edge]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/object(_:)",
                    "title" : "func object(ObjectID) -> ObjectSnapshot",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/object(named:)",
                    "title" : "func object(named: String) -> ObjectSnapshot?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/object(stringreference:)",
                    "title" : "func object(stringReference: String) -> ObjectSnapshot?",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/subscript(_:)-1a183",
                    "title" : "subscript(ObjectID) -> ObjectSnapshot",
                    "type" : "subscript"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/frame",
                "title" : "Frame",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/stableframe\/design",
                    "title" : "let design: Design",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/stableframe\/graph",
                    "title" : "var graph: any Graph",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/stableframe\/id",
                    "title" : "let id: FrameID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/stableframe\/snapshots",
                    "title" : "var snapshots: [ObjectSnapshot]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/stableframe\/contains(_:)",
                    "title" : "func contains(ObjectID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/stableframe\/object(_:)",
                    "title" : "func object(ObjectID) -> ObjectSnapshot",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/assert(constraint:)",
                        "title" : "func assert(constraint: Constraint) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/brokenreferences()",
                        "title" : "func brokenReferences() -> [ObjectID]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/brokenreferences(snapshot:)",
                        "title" : "func brokenReferences(snapshot: ObjectSnapshot) -> [ObjectID]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/edge(_:)",
                        "title" : "func edge(ObjectID) -> Edge",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/filter(_:)-3i21s",
                        "title" : "func filter((ObjectSnapshot) -> Bool) -> [ObjectSnapshot]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/filter(_:)-8i9o3",
                        "title" : "func filter(any Predicate) -> [ObjectSnapshot]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/filter(component:)",
                        "title" : "func filter<T>(component: T.Type) -> [(ObjectSnapshot, T)]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/filter(trait:)",
                        "title" : "func filter(trait: Trait) -> [ObjectSnapshot]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/filter(type:)",
                        "title" : "func filter(type: ObjectType) -> [ObjectSnapshot]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/filteredges(_:)",
                        "title" : "func filterEdges((Edge) -> Bool) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/filternodes(_:)",
                        "title" : "func filterNodes((ObjectSnapshot) -> Bool) -> [Node]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/first(trait:)",
                        "title" : "func first(trait: Trait) -> ObjectSnapshot?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/first(type:)",
                        "title" : "func first(type: ObjectType) -> ObjectSnapshot?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/first(where:)",
                        "title" : "func first(where: (ObjectSnapshot) -> Bool) -> ObjectSnapshot?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/hasreferentialintegrity()",
                        "title" : "func hasReferentialIntegrity() -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/neighbours(_:selector:)",
                        "title" : "func neighbours(ObjectID, selector: NeighborhoodSelector) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/node(_:)",
                        "title" : "func node(ObjectID) -> Node",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/object(named:)",
                        "title" : "func object(named: String) -> ObjectSnapshot?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/object(stringreference:)",
                        "title" : "func object(stringReference: String) -> ObjectSnapshot?",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/subscript(_:)",
                        "title" : "subscript(ObjectID) -> ObjectSnapshot",
                        "type" : "subscript"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/stableframe\/frame-implementations",
                    "title" : "Frame Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/edgeids",
                        "title" : "var edgeIDs: [ObjectID]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/edges",
                        "title" : "var edges: [Edge]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/frame",
                        "title" : "var frame: any Frame",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/nodeids",
                        "title" : "var nodeIDs: [ObjectID]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/nodes",
                        "title" : "var nodes: [Node]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/prettydebugdescription",
                        "title" : "var prettyDebugDescription: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/contains(edge:)",
                        "title" : "func contains(edge: ObjectID) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/contains(node:)",
                        "title" : "func contains(node: ObjectID) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/hood(_:selector:)",
                        "title" : "func hood(ObjectID, selector: NeighborhoodSelector) -> Neighborhood",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/incoming(_:)",
                        "title" : "func incoming(ObjectID) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/neighbours(_:)",
                        "title" : "func neighbours(ObjectID) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/outgoing(_:)",
                        "title" : "func outgoing(ObjectID) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/selectedges(_:)",
                        "title" : "func selectEdges(any Predicate) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/selectnodes(_:)",
                        "title" : "func selectNodes(any Predicate) -> [Node]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/stableframe\/topologicalsort(_:edges:)",
                        "title" : "func topologicalSort([ObjectID], edges: [Edge]) throws(GraphCycleError) -> [ObjectID]",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/stableframe\/graph-implementations",
                    "title" : "Graph Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/stableframe",
                "title" : "StableFrame",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/init(design:id:snapshots:)",
                    "title" : "init(design: Design, id: FrameID, snapshots: [ObjectSnapshot]?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/design",
                    "title" : "let design: Design",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/haschanges",
                    "title" : "var hasChanges: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/id",
                    "title" : "let id: FrameID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/removedobjects",
                    "title" : "var removedObjects: Set<ObjectID>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/snapshots",
                    "title" : "var snapshots: [ObjectSnapshot]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/addchild(_:to:)",
                    "title" : "func addChild(ObjectID, to: ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/contains(_:)",
                    "title" : "func contains(ObjectID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/create(_:structure:attributes:components:)",
                    "title" : "func create(ObjectType, structure: StructuralComponent?, attributes: [String : Variant], components: [any Component]) -> ObjectID",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/debugprint()",
                    "title" : "func debugPrint()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/insert(_:)",
                    "title" : "func insert(ObjectSnapshot)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/mutableobject(_:)",
                    "title" : "func mutableObject(ObjectID) -> ObjectSnapshot",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/object(_:)",
                    "title" : "func object(ObjectID) -> ObjectSnapshot",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/promote(_:)",
                    "title" : "func promote(VersionState)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/removecascading(_:)",
                    "title" : "func removeCascading(ObjectID) -> Set<ObjectID>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/removechild(_:from:)",
                    "title" : "func removeChild(ObjectID, from: ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/removefromparent(_:)",
                    "title" : "func removeFromParent(ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/setparent(_:to:)",
                    "title" : "func setParent(ObjectID, to: ObjectID?)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/unsafeinsert(_:owned:)",
                    "title" : "func unsafeInsert(ObjectSnapshot, owned: Bool)",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableframe\/subscript(_:)",
                    "title" : "subscript(ObjectID) -> ObjectSnapshot",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/assert(constraint:)",
                        "title" : "func assert(constraint: Constraint) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/brokenreferences()",
                        "title" : "func brokenReferences() -> [ObjectID]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/brokenreferences(snapshot:)",
                        "title" : "func brokenReferences(snapshot: ObjectSnapshot) -> [ObjectID]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/edge(_:)",
                        "title" : "func edge(ObjectID) -> Edge",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/filter(_:)-4lwkz",
                        "title" : "func filter((ObjectSnapshot) -> Bool) -> [ObjectSnapshot]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/filter(_:)-5kajd",
                        "title" : "func filter(any Predicate) -> [ObjectSnapshot]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/filter(component:)",
                        "title" : "func filter<T>(component: T.Type) -> [(ObjectSnapshot, T)]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/filter(trait:)",
                        "title" : "func filter(trait: Trait) -> [ObjectSnapshot]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/filter(type:)",
                        "title" : "func filter(type: ObjectType) -> [ObjectSnapshot]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/filteredges(_:)",
                        "title" : "func filterEdges((Edge) -> Bool) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/filternodes(_:)",
                        "title" : "func filterNodes((ObjectSnapshot) -> Bool) -> [Node]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/first(trait:)",
                        "title" : "func first(trait: Trait) -> ObjectSnapshot?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/first(type:)",
                        "title" : "func first(type: ObjectType) -> ObjectSnapshot?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/first(where:)",
                        "title" : "func first(where: (ObjectSnapshot) -> Bool) -> ObjectSnapshot?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/hasreferentialintegrity()",
                        "title" : "func hasReferentialIntegrity() -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/neighbours(_:selector:)",
                        "title" : "func neighbours(ObjectID, selector: NeighborhoodSelector) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/node(_:)",
                        "title" : "func node(ObjectID) -> Node",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/object(named:)",
                        "title" : "func object(named: String) -> ObjectSnapshot?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/object(stringreference:)",
                        "title" : "func object(stringReference: String) -> ObjectSnapshot?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/mutableframe\/frame-implementations",
                    "title" : "Frame Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/edgeids",
                        "title" : "var edgeIDs: [ObjectID]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/edges",
                        "title" : "var edges: [Edge]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/frame",
                        "title" : "var frame: any Frame",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/nodeids",
                        "title" : "var nodeIDs: [ObjectID]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/nodes",
                        "title" : "var nodes: [Node]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/prettydebugdescription",
                        "title" : "var prettyDebugDescription: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/contains(edge:)",
                        "title" : "func contains(edge: ObjectID) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/contains(node:)",
                        "title" : "func contains(node: ObjectID) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/hood(_:selector:)",
                        "title" : "func hood(ObjectID, selector: NeighborhoodSelector) -> Neighborhood",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/incoming(_:)",
                        "title" : "func incoming(ObjectID) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/neighbours(_:)",
                        "title" : "func neighbours(ObjectID) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/outgoing(_:)",
                        "title" : "func outgoing(ObjectID) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/selectedges(_:)",
                        "title" : "func selectEdges(any Predicate) -> [Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/selectnodes(_:)",
                        "title" : "func selectNodes(any Predicate) -> [Node]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/topologicalsort(_:edges:)",
                        "title" : "func topologicalSort([ObjectID], edges: [Edge]) throws(GraphCycleError) -> [ObjectID]",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/mutableframe\/graph-implementations",
                    "title" : "Graph Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/createedge(_:origin:target:)",
                        "title" : "func createEdge(ObjectType, origin: ObjectID, target: ObjectID) -> ObjectID",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/createedge(_:origin:target:attributes:components:)",
                        "title" : "func createEdge(ObjectType, origin: ObjectID, target: ObjectID, attributes: [String : Variant], components: [any Component]) -> ObjectID",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/createnode(_:)",
                        "title" : "func createNode(ObjectType) -> ObjectID",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/createnode(_:name:attributes:components:)",
                        "title" : "func createNode(ObjectType, name: String?, attributes: [String : Variant], components: [any Component]) -> ObjectID",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/remove(edge:)",
                        "title" : "func remove(edge: ObjectID)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/remove(node:)",
                        "title" : "func remove(node: ObjectID)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableframe\/removeall()",
                        "title" : "func removeAll()",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/mutableframe\/mutablegraph-implementations",
                    "title" : "MutableGraph Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/mutableframe",
                "title" : "MutableFrame",
                "type" : "class"
              },
              {
                "path" : "\/documentation\/poieticcore\/frameid",
                "title" : "FrameID",
                "type" : "typealias"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/versionstate\/_(_:_:)-9u9qu",
                    "title" : "static func < (VersionState, VersionState) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/versionstate\/stable",
                    "title" : "case stable",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/versionstate\/transient",
                    "title" : "case transient",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/versionstate\/validated",
                    "title" : "case validated",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/versionstate\/canderive",
                    "title" : "var canDerive: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/versionstate\/ismutable",
                    "title" : "var isMutable: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/versionstate\/'...(_:)-4ciq3",
                        "title" : "static func ... (Self) -> PartialRangeFrom<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/versionstate\/'...(_:)-9kg8s",
                        "title" : "static func ... (Self) -> PartialRangeThrough<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/versionstate\/'...(_:_:)",
                        "title" : "static func ... (Self, Self) -> ClosedRange<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/versionstate\/'.._(_:)",
                        "title" : "static func ..< (Self) -> PartialRangeUpTo<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/versionstate\/'.._(_:_:)",
                        "title" : "static func ..< (Self, Self) -> Range<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/versionstate\/_(_:_:)-42g4d",
                        "title" : "static func > (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/versionstate\/_=(_:_:)-2v90h",
                        "title" : "static func >= (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/versionstate\/_=(_:_:)-8g7xr",
                        "title" : "static func <= (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/versionstate\/comparable-implementations",
                    "title" : "Comparable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/versionstate\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/versionstate\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/versionstate",
                "title" : "VersionState",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frameconstrainterror\/init(violations:objecterrors:)",
                    "title" : "init(violations: [ConstraintViolation], objectErrors: [ObjectID : [ObjectTypeError]])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frameconstrainterror\/objecterrors",
                    "title" : "let objectErrors: [ObjectID : [ObjectTypeError]]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frameconstrainterror\/violations",
                    "title" : "let violations: [ConstraintViolation]",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/frameconstrainterror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/frameconstrainterror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/frameconstrainterror",
                "title" : "FrameConstraintError",
                "type" : "struct"
              },
              {
                "title" : "Value and Variant",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/!=(_:_:)-3aev2",
                    "title" : "static func != (Variant, Variant) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/_(_:_:)-2edgh",
                    "title" : "static func < (Variant, Variant) throws -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/_(_:_:)-2l04v",
                    "title" : "static func > (Variant, Variant) throws -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/_=(_:_:)-4spz8",
                    "title" : "static func >= (Variant, Variant) throws -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/_=(_:_:)-55gw4",
                    "title" : "static func <= (Variant, Variant) throws -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/array(_:)",
                    "title" : "case array(VariantArray)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/atom(_:)",
                    "title" : "case atom(VariantAtom)",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(_:)-14oy2",
                    "title" : "init([String])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(_:)-2qqms",
                    "title" : "init(String)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(_:)-35da5",
                    "title" : "init([Int])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(_:)-3mw6n",
                    "title" : "init(Point)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(_:)-3n1b0",
                    "title" : "init([Double])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(_:)-5fv6f",
                    "title" : "init(Double)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(_:)-6g1v5",
                    "title" : "init([Point])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(_:)-6h10l",
                    "title" : "init([Bool])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(_:)-9746l",
                    "title" : "init(Bool)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(_:)-nogc",
                    "title" : "init(Int)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(any:)",
                    "title" : "init?(any: Any)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/arrayitemtype",
                    "title" : "var arrayItemType: AtomType?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/atomtype",
                    "title" : "var atomType: AtomType?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/atomvalue",
                    "title" : "var atomValue: VariantAtom?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/isarray",
                    "title" : "var isArray: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/isnumeric",
                    "title" : "var isNumeric: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/items",
                    "title" : "var items: [VariantAtom]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/valuetype",
                    "title" : "var valueType: ValueType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/asjson()",
                    "title" : "func asJSON() -> JSONValue",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/boolarray()",
                    "title" : "func boolArray() throws(ValueError) -> [Bool]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/boolvalue()",
                    "title" : "func boolValue() throws(ValueError) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/doublearray()",
                    "title" : "func doubleArray() throws(ValueError) -> [Double]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/doublevalue()",
                    "title" : "func doubleValue() throws(ValueError) -> Double",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/intarray()",
                    "title" : "func intArray() throws(ValueError) -> [Int]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/intvalue()",
                    "title" : "func intValue() throws(ValueError) -> Int",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/isconvertible(to:)",
                    "title" : "func isConvertible(to: ValueType) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/isrepresentable(as:)",
                    "title" : "func isRepresentable(as: VariableType) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/pointarray()",
                    "title" : "func pointArray() throws(ValueError) -> [Point]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/pointvalue()",
                    "title" : "func pointValue() throws(ValueError) -> Point",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/stringarray()",
                    "title" : "func stringArray() throws(ValueError) -> [String]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/stringvalue()",
                    "title" : "func stringValue() throws(ValueError) -> String",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/fromjson(_:path:)",
                    "title" : "static func fromJSON(JSONValue, path: [String]) throws(ForeignValueError) -> Variant",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variant\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/encode(to:)",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variant\/encodable-implementations",
                    "title" : "Encodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/!=(_:_:)-pqel",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/==(_:_:)",
                        "title" : "static func == (Variant, Variant) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variant\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/init(extendedgraphemeclusterliteral:)",
                        "title" : "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variant\/expressiblebyextendedgraphemeclusterliteral-implementations",
                    "title" : "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/init(floatliteral:)",
                        "title" : "init(floatLiteral: Double)",
                        "type" : "init"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/floatliteraltype",
                        "title" : "Variant.FloatLiteralType",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variant\/expressiblebyfloatliteral-implementations",
                    "title" : "ExpressibleByFloatLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/init(integerliteral:)",
                        "title" : "init(integerLiteral: Int)",
                        "type" : "init"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/integerliteraltype",
                        "title" : "Variant.IntegerLiteralType",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variant\/expressiblebyintegerliteral-implementations",
                    "title" : "ExpressibleByIntegerLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/init(stringliteral:)",
                        "title" : "init(stringLiteral: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/stringliteraltype",
                        "title" : "Variant.StringLiteralType",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variant\/expressiblebystringliteral-implementations",
                    "title" : "ExpressibleByStringLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/init(unicodescalarliteral:)",
                        "title" : "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variant\/expressiblebyunicodescalarliteral-implementations",
                    "title" : "ExpressibleByUnicodeScalarLiteral Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/variant",
                "title" : "Variant",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/!=(_:_:)-6rl99",
                    "title" : "static func != (VariantAtom, VariantAtom) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/_(_:_:)-6f479",
                    "title" : "static func > (VariantAtom, VariantAtom) throws -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/_(_:_:)-6o7rj",
                    "title" : "static func < (VariantAtom, VariantAtom) throws -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/_=(_:_:)-6gcxs",
                    "title" : "static func >= (VariantAtom, VariantAtom) throws -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/_=(_:_:)-9j2yz",
                    "title" : "static func <= (VariantAtom, VariantAtom) throws -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/bool(_:)",
                    "title" : "case bool(Bool)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/double(_:)",
                    "title" : "case double(Double)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/int(_:)",
                    "title" : "case int(Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/point(_:)",
                    "title" : "case point(Point)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/string(_:)",
                    "title" : "case string(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/init(_:)-36fth",
                    "title" : "init(Point)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/init(_:)-463ws",
                    "title" : "init(String)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/init(_:)-5eu5u",
                    "title" : "init(Bool)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/init(_:)-aul7",
                    "title" : "init(Int)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/init(_:)-xgxt",
                    "title" : "init(Double)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/init(any:)",
                    "title" : "init?(any: Any)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/isnumeric",
                    "title" : "var isNumeric: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/valuetype",
                    "title" : "var valueType: AtomType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/asjson()",
                    "title" : "func asJSON() -> JSONValue",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/boolvalue()",
                    "title" : "func boolValue() throws(ValueError) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/doublevalue()",
                    "title" : "func doubleValue() throws(ValueError) -> Double",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/intvalue()",
                    "title" : "func intValue() throws(ValueError) -> Int",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/isconvertible(to:)",
                    "title" : "func isConvertible(to: ValueType) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/pointvalue()",
                    "title" : "func pointValue() throws(ValueError) -> Point",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/stringvalue()",
                    "title" : "func stringValue() -> String",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/fromjson(_:path:)",
                    "title" : "static func fromJSON(JSONValue, path: [String]) throws(ForeignValueError) -> VariantAtom",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantatom\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variantatom\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantatom\/!=(_:_:)-9afxr",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantatom\/==(_:_:)",
                        "title" : "static func == (VariantAtom, VariantAtom) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variantatom\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/variantatom",
                "title" : "VariantAtom",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/!=(_:_:)-98fys",
                    "title" : "static func != (VariantArray, VariantArray) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/_(_:_:)-4bk3p",
                    "title" : "static func < (VariantArray, VariantArray) throws -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/_(_:_:)-65lpi",
                    "title" : "static func > (VariantArray, VariantArray) throws -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/_=(_:_:)-5hpwk",
                    "title" : "static func <= (VariantArray, VariantArray) throws -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/_=(_:_:)-8cozq",
                    "title" : "static func >= (VariantArray, VariantArray) throws -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/bool(_:)",
                    "title" : "case bool([Bool])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/double(_:)",
                    "title" : "case double([Double])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/int(_:)",
                    "title" : "case int([Int])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/point(_:)",
                    "title" : "case point([Point])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/string(_:)",
                    "title" : "case string([String])",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/init(_:)-1lmbd",
                    "title" : "init([Int])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/init(_:)-3p0qu",
                    "title" : "init([Double])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/init(_:)-5yuvb",
                    "title" : "init([Bool])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/init(_:)-81h9n",
                    "title" : "init([Point])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/init(_:)-9klfb",
                    "title" : "init([String])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/init(any:)",
                    "title" : "init?<T>(any: [T])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/count",
                    "title" : "var count: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/itemtype",
                    "title" : "var itemType: AtomType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/items",
                    "title" : "var items: [VariantAtom]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/stringitems",
                    "title" : "var stringItems: [String]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/asjson()",
                    "title" : "func asJSON() -> JSONValue",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/isconvertible(to:)",
                    "title" : "func isConvertible(to: ValueType) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/fromjsonitems(_:path:)",
                    "title" : "static func fromJSONItems([JSONValue], path: [String]) throws(ForeignValueError) -> VariantArray",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variantarray\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/!=(_:_:)-2je8q",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/==(_:_:)",
                        "title" : "static func == (VariantArray, VariantArray) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variantarray\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/variantarray",
                "title" : "VariantArray",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/array(_:)",
                    "title" : "case array(AtomType)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/atom(_:)",
                    "title" : "case atom(AtomType)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/isarray",
                    "title" : "var isArray: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/isatom",
                    "title" : "var isAtom: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/typecode",
                    "title" : "var typeCode: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/isconvertible(to:)-7ysj7",
                    "title" : "func isConvertible(to: ValueType) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/isconvertible(to:)-8jlej",
                    "title" : "func isConvertible(to: VariableType) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/bool",
                    "title" : "static let bool: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/bools",
                    "title" : "static let bools: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/double",
                    "title" : "static let double: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/doubles",
                    "title" : "static let doubles: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/int",
                    "title" : "static let int: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/ints",
                    "title" : "static let ints: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/point",
                    "title" : "static let point: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/points",
                    "title" : "static let points: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/string",
                    "title" : "static let string: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/strings",
                    "title" : "static let strings: ValueType",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/valuetype\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/valuetype\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/valuetype\/encode(to:)",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/valuetype\/encodable-implementations",
                    "title" : "Encodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/valuetype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/valuetype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/valuetype",
                "title" : "ValueType",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valueerror\/conversionfailed(_:_:)",
                    "title" : "case conversionFailed(ValueType, ValueType)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valueerror\/conversiontoidfailed(_:)",
                    "title" : "case conversionToIDFailed(ValueType)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valueerror\/notcomparabletypes(_:_:)",
                    "title" : "case notComparableTypes(ValueType, ValueType)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valueerror\/notconvertible(_:_:)",
                    "title" : "case notConvertible(ValueType, ValueType)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valueerror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/valueerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/valueerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/valueerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/valueerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/valueerror",
                "title" : "ValueError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/bool",
                    "title" : "case bool",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/double",
                    "title" : "case double",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/int",
                    "title" : "case int",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/point",
                    "title" : "case point",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/string",
                    "title" : "case string",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/isnumeric",
                    "title" : "var isNumeric: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/isconvertible(to:)",
                    "title" : "func isConvertible(to: AtomType) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/atomtype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/atomtype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/atomtype\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/atomtype\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/atomtype\/encode(to:)",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/atomtype\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/atomtype\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/atomtype",
                "title" : "AtomType",
                "type" : "enum"
              },
              {
                "path" : "\/documentation\/poieticcore\/id",
                "title" : "ID",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/poieticcore\/point",
                "title" : "Point",
                "type" : "typealias"
              },
              {
                "title" : "Component",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/component",
                "title" : "Component",
                "type" : "protocol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/understandingdesign",
            "title" : "Understanding Design Objects and Frames",
            "type" : "symbol"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/init(metamodel:)",
                "title" : "init(metamodel: Metamodel)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/allsnapshots",
                "title" : "var allSnapshots: any Sequence<ObjectSnapshot>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/canredo",
                "title" : "var canRedo: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/canundo",
                "title" : "var canUndo: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/currentframe",
                "title" : "var currentFrame: StableFrame",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/currentframeid",
                "title" : "var currentFrameID: FrameID?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/frames",
                "title" : "var frames: [StableFrame]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/isempty",
                "title" : "var isEmpty: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/metamodel",
                "title" : "let metamodel: Metamodel",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/redoableframes",
                "title" : "var redoableFrames: [FrameID]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/undoableframes",
                "title" : "var undoableFrames: [FrameID]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/validatedsnapshots",
                "title" : "var validatedSnapshots: [ObjectSnapshot]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/versionhistory",
                "title" : "var versionHistory: [FrameID]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/accept(_:appendhistory:)",
                "title" : "func accept(MutableFrame, appendHistory: Bool) throws(FrameConstraintError) -> StableFrame",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/allocateid(required:)",
                "title" : "func allocateID(required: ID?) -> ID",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/checkconstraints(_:)",
                "title" : "func checkConstraints(any Frame) -> [ConstraintViolation]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/containsframe(_:)",
                "title" : "func containsFrame(FrameID) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/createframe(id:)",
                "title" : "func createFrame(id: FrameID?) -> MutableFrame",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/createsnapshot(_:id:snapshotid:structure:parent:attributes:components:state:)",
                "title" : "func createSnapshot(ObjectType, id: ObjectID?, snapshotID: SnapshotID?, structure: StructuralComponent?, parent: ObjectID?, attributes: [String : Variant], components: [any Component], state: VersionState) -> ObjectSnapshot",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/deriveframe(original:id:)",
                "title" : "func deriveFrame(original: FrameID?, id: FrameID?) -> MutableFrame",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/derivesnapshot(_:)",
                "title" : "func deriveSnapshot(SnapshotID) -> ObjectSnapshot",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/discard(_:)",
                "title" : "func discard(MutableFrame)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/frame(_:)",
                "title" : "func frame(FrameID) -> StableFrame?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/redo(to:)",
                "title" : "func redo(to: FrameID)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/removeframe(_:)",
                "title" : "func removeFrame(FrameID)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/snapshot(_:)",
                "title" : "func snapshot(ObjectID) -> ObjectSnapshot?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/undo(to:)",
                "title" : "func undo(to: FrameID)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/design",
            "title" : "Design",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/design",
                "title" : "var design: Design",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/id",
                "title" : "var id: FrameID",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/snapshots",
                "title" : "var snapshots: [ObjectSnapshot]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/assert(constraint:)-79bse",
                "title" : "func assert(constraint: Constraint) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/brokenreferences()-pz81",
                "title" : "func brokenReferences() -> [ObjectID]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/brokenreferences(snapshot:)",
                "title" : "func brokenReferences(snapshot: ObjectSnapshot) -> [ObjectID]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/contains(_:)",
                "title" : "func contains(ObjectID) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/filter(_:)-44p52",
                "title" : "func filter((ObjectSnapshot) -> Bool) -> [ObjectSnapshot]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/filter(_:)-50lwx",
                "title" : "func filter(any Predicate) -> [ObjectSnapshot]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/filter(component:)",
                "title" : "func filter<T>(component: T.Type) -> [(ObjectSnapshot, T)]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/filter(trait:)",
                "title" : "func filter(trait: Trait) -> [ObjectSnapshot]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/filter(type:)-2khoe",
                "title" : "func filter(type: ObjectType) -> [ObjectSnapshot]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/filteredges(_:)",
                "title" : "func filterEdges((Edge) -> Bool) -> [Edge]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/filternodes(_:)",
                "title" : "func filterNodes((ObjectSnapshot) -> Bool) -> [Node]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/first(trait:)",
                "title" : "func first(trait: Trait) -> ObjectSnapshot?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/first(type:)",
                "title" : "func first(type: ObjectType) -> ObjectSnapshot?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/first(where:)",
                "title" : "func first(where: (ObjectSnapshot) -> Bool) -> ObjectSnapshot?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/hasreferentialintegrity()-78e2a",
                "title" : "func hasReferentialIntegrity() -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/neighbours(_:selector:)",
                "title" : "func neighbours(ObjectID, selector: NeighborhoodSelector) -> [Edge]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/object(_:)",
                "title" : "func object(ObjectID) -> ObjectSnapshot",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/object(named:)",
                "title" : "func object(named: String) -> ObjectSnapshot?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/object(stringreference:)",
                "title" : "func object(stringReference: String) -> ObjectSnapshot?",
                "type" : "method"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/frame\/subscript(_:)-1a183",
                "title" : "subscript(ObjectID) -> ObjectSnapshot",
                "type" : "subscript"
              }
            ],
            "path" : "\/documentation\/poieticcore\/frame",
            "title" : "Frame",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/init(id:snapshotid:type:structure:parent:attributes:components:)",
                "title" : "init(id: ObjectID, snapshotID: SnapshotID, type: ObjectType, structure: StructuralComponent, parent: ObjectID?, attributes: [String : Variant], components: [any Component])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/attributekeys",
                "title" : "var attributeKeys: [AttributeKey]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/attributes",
                "title" : "var attributes: [String : Variant]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/children",
                "title" : "var children: ChildrenSet",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/components",
                "title" : "var components: ComponentSet",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/debugid",
                "title" : "var debugID: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/hasissues",
                "title" : "var hasIssues: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/id-swift.property",
                "title" : "let id: ObjectID",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/inspectablecomponents",
                "title" : "var inspectableComponents: [any InspectableComponent]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/issues",
                "title" : "var issues: [any Error]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/name",
                "title" : "var name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/parent",
                "title" : "var parent: ObjectID?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/position",
                "title" : "var position: Point?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/prettydescription",
                "title" : "var prettyDescription: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/snapshotid",
                "title" : "let snapshotID: SnapshotID",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/state",
                "title" : "var state: VersionState",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/structure",
                "title" : "var structure: StructuralComponent",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/type",
                "title" : "let type: ObjectType",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/appendissue(_:)",
                "title" : "func appendIssue(any Error)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/attribute(forkey:)",
                "title" : "func attribute(forKey: String) -> Variant?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/check(conformsto:)",
                "title" : "func check(conformsTo: Trait) throws(ObjectConstraintError)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/promote(_:)",
                "title" : "func promote(VersionState)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/removeallissues()",
                "title" : "func removeAllIssues()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/removeattribute(forkey:)",
                "title" : "func removeAttribute(forKey: String)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/setattribute(value:forkey:)",
                "title" : "func setAttribute(value: Variant, forKey: String)",
                "type" : "method"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/subscript(_:)-3b9l1",
                "title" : "subscript<T>(T.Type) -> T?",
                "type" : "subscript"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/subscript(_:)-3wrl3",
                "title" : "subscript(String) -> (Variant)?",
                "type" : "subscript"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/subscript(_:)-4wdrq",
                "title" : "subscript(any Component.Type) -> (any Component)?",
                "type" : "subscript"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/id-swift.typealias",
                "title" : "ObjectSnapshot.ID",
                "type" : "typealias"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/reservedattributenames",
                "title" : "static let ReservedAttributeNames: [String]",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/dictionary(withkeys:)",
                    "title" : "func dictionary(withKeys: [AttributeKey]) -> [AttributeKey : Variant]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/keyedattributes-implementations",
                "title" : "KeyedAttributes Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/setattributes(_:)",
                    "title" : "func setAttributes([AttributeKey : Variant]) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/objectsnapshot\/mutablekeyedattributes-implementations",
                "title" : "MutableKeyedAttributes Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/objectsnapshot",
            "title" : "ObjectSnapshot",
            "type" : "class"
          },
          {
            "title" : "Problem Domain",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Metamodel and Object Types",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/init(name:merging:)",
                    "title" : "init(name: String?, merging: Metamodel...)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/init(name:traits:types:constraints:)",
                    "title" : "init(name: String?, traits: [Trait], types: [ObjectType], constraints: [Constraint])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/constraints",
                    "title" : "let constraints: [Constraint]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/name",
                    "title" : "let name: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/traits",
                    "title" : "let traits: [Trait]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/types",
                    "title" : "let types: [ObjectType]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/objecttype(name:)",
                    "title" : "func objectType(name: String) -> ObjectType?",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/subscript(_:)",
                    "title" : "subscript(String) -> ObjectType?",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/basic",
                    "title" : "static let Basic: Metamodel",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/changelanguage",
                    "title" : "static let ChangeLanguage: Metamodel",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/stockflow",
                    "title" : "static let StockFlow: Metamodel",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/metamodel",
                "title" : "Metamodel",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/init(name:label:structuraltype:traits:abstract:)",
                    "title" : "init(name: String, label: String?, structuralType: StructuralType, traits: [Trait], abstract: String?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/abstract",
                    "title" : "let abstract: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/attributekeys",
                    "title" : "var attributeKeys: [AttributeKey]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/attributes",
                    "title" : "let attributes: [Attribute]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/label",
                    "title" : "let label: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/structuraltype",
                    "title" : "let structuralType: StructuralType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/traits",
                    "title" : "let traits: [Trait]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/attribute(_:)",
                    "title" : "func attribute(String) -> Attribute?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/hasattribute(_:)",
                    "title" : "func hasAttribute(String) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/hastrait(_:)",
                    "title" : "func hasTrait(Trait) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/trait(forattribute:)",
                    "title" : "func trait(forAttribute: String) -> Trait?",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/auxiliary",
                    "title" : "static let Auxiliary: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/bibliographicalreference",
                    "title" : "static let BibliographicalReference: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/chart",
                    "title" : "static let Chart: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/chartseries",
                    "title" : "static let ChartSeries: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/control",
                    "title" : "static let Control: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/controls",
                    "title" : "static let Controls: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/delay",
                    "title" : "static let Delay: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/drains",
                    "title" : "static let Drains: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/enables",
                    "title" : "static let Enables: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/fills",
                    "title" : "static let Fills: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/flow",
                    "title" : "static let Flow: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/graphicalfunction",
                    "title" : "static let GraphicalFunction: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/inhibits",
                    "title" : "static let Inhibits: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/note",
                    "title" : "static let Note: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/parameter",
                    "title" : "static let Parameter: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/produces",
                    "title" : "static let Produces: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/scenario",
                    "title" : "static let Scenario: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/simulation",
                    "title" : "static let Simulation: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/stimulates",
                    "title" : "static let Stimulates: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/stock",
                    "title" : "static let Stock: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/valuebinding",
                    "title" : "static let ValueBinding: ObjectType",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/objecttype",
                "title" : "ObjectType",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/init(name:label:attributes:abstract:)",
                    "title" : "init(name: String, label: String?, attributes: [Attribute], abstract: String?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/abstract",
                    "title" : "let abstract: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/attributes",
                    "title" : "let attributes: [Attribute]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/label",
                    "title" : "let label: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/name-swift.property",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/bibliographicalreference",
                    "title" : "static let BibliographicalReference: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/causalrelationship",
                    "title" : "static let CausalRelationship: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/chart",
                    "title" : "static let Chart: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/control",
                    "title" : "static let Control: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/delay",
                    "title" : "static let Delay: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/flow",
                    "title" : "static let Flow: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/formula",
                    "title" : "static let Formula: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/graphicalfunction",
                    "title" : "static let GraphicalFunction: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/position",
                    "title" : "static let Position: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/simulation",
                    "title" : "static let Simulation: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/stock",
                    "title" : "static let Stock: Trait",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/trait",
                "title" : "Trait",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/init(_:type:default:optional:label:abstract:)",
                    "title" : "init(String, type: VariableType, default: Variant?, optional: Bool, label: String?, abstract: String?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/abstract",
                    "title" : "let abstract: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/defaultvalue",
                    "title" : "let defaultValue: Variant?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/label",
                    "title" : "let label: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/optional",
                    "title" : "let optional: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/type",
                    "title" : "let type: VariableType",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/attribute\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/attribute\/==(_:_:)",
                        "title" : "static func == (Attribute, Attribute) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/attribute\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/attribute",
                "title" : "Attribute",
                "type" : "class"
              },
              {
                "title" : "Constraints",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraint\/init(name:abstract:match:requirement:)",
                    "title" : "init(name: String, abstract: String?, match: any Predicate, requirement: any ConstraintRequirement)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraint\/abstract",
                    "title" : "let abstract: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraint\/match",
                    "title" : "let match: any Predicate",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraint\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraint\/requirement",
                    "title" : "let requirement: any ConstraintRequirement",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraint\/check(_:)",
                    "title" : "func check(any Frame) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/constraint",
                "title" : "Constraint",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintchecker\/init(_:)",
                    "title" : "init(Metamodel)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintchecker\/metamodel",
                    "title" : "let metamodel: Metamodel",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintchecker\/check(_:)",
                    "title" : "func check(any Frame) throws(FrameConstraintError)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/constraintchecker",
                "title" : "ConstraintChecker",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectconstrainterror\/init(underlyingerrors:)",
                    "title" : "init(underlyingErrors: [ObjectTypeError])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectconstrainterror\/underlyingerrors",
                    "title" : "let underlyingErrors: [ObjectTypeError]",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/objectconstrainterror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/objectconstrainterror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/objectconstrainterror",
                "title" : "ObjectConstraintError",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeendpointtypes\/init(origin:target:edge:)",
                    "title" : "init(origin: IsTypePredicate?, target: IsTypePredicate?, edge: IsTypePredicate?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeendpointtypes\/edge",
                    "title" : "let edge: IsTypePredicate?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeendpointtypes\/origin",
                    "title" : "let origin: IsTypePredicate?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeendpointtypes\/target",
                    "title" : "let target: IsTypePredicate?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeendpointtypes\/check(frame:objects:)",
                    "title" : "func check(frame: any Frame, objects: [ObjectSnapshot]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/edgeendpointtypes",
                "title" : "EdgeEndpointTypes",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rejectall\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rejectall\/check(frame:objects:)",
                    "title" : "func check(frame: any Frame, objects: [ObjectSnapshot]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/rejectall",
                "title" : "RejectAll",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/acceptall\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/acceptall\/check(frame:objects:)",
                    "title" : "func check(frame: any Frame, objects: [ObjectSnapshot]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/acceptall",
                "title" : "AcceptAll",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintviolation\/init(constraint:objects:)",
                    "title" : "init(constraint: Constraint, objects: [ObjectID])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintviolation\/constraint",
                    "title" : "let constraint: Constraint",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintviolation\/debugdescription",
                    "title" : "var debugDescription: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintviolation\/objects",
                    "title" : "let objects: [ObjectID]",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/constraintviolation\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/constraintviolation\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/constraintviolation",
                "title" : "ConstraintViolation",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/uniqueneighbourrequirement\/init(_:required:)",
                    "title" : "init(NeighborhoodSelector, required: Bool)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/uniqueneighbourrequirement\/isrequired",
                    "title" : "let isRequired: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/uniqueneighbourrequirement\/selector",
                    "title" : "let selector: NeighborhoodSelector",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/uniqueneighbourrequirement\/check(frame:objects:)",
                    "title" : "func check(frame: any Frame, objects: [ObjectSnapshot]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/uniqueneighbourrequirement",
                "title" : "UniqueNeighbourRequirement",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/uniqueproperty\/init(_:)",
                    "title" : "init(String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/uniqueproperty\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/uniqueproperty\/check(frame:objects:)",
                    "title" : "func check(frame: any Frame, objects: [ObjectSnapshot]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/uniqueproperty",
                "title" : "UniqueProperty",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintrequirement\/check(frame:objects:)",
                    "title" : "func check(frame: any Frame, objects: [ObjectSnapshot]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/constraintrequirement",
                "title" : "ConstraintRequirement",
                "type" : "protocol"
              },
              {
                "title" : "Common Components and Types",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/name-swift.type.property",
                "title" : "static let Name: Trait",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/documentation",
                "title" : "static let Documentation: Trait",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/keywords",
                "title" : "static let Keywords: Trait",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/note",
                "title" : "static let Note: Trait",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/designinfo",
                "title" : "static let DesignInfo: Trait",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/designinfo",
                "title" : "static let DesignInfo: Trait",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objecttype\/designinfo",
                "title" : "static let DesignInfo: ObjectType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/audiencelevel",
                "title" : "static let AudienceLevel: Trait",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/advanced",
                    "title" : "case advanced",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/any",
                    "title" : "case any",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/beginner",
                    "title" : "case beginner",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/expert",
                    "title" : "case expert",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/intermediate",
                    "title" : "case intermediate",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/init(rawvalue:)",
                    "title" : "init(rawValue: Int)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/audiencelevel\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/audiencelevel\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/audiencelevel\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/audiencelevel",
                "title" : "AudienceLevel",
                "type" : "enum"
              },
              {
                "title" : "Other",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variable\/==(_:_:)",
                    "title" : "static func == (Variable, Variable) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variable\/init(name:value:abstract:)",
                    "title" : "init(name: String, value: Variant?, abstract: String?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variable\/abstract",
                    "title" : "let abstract: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variable\/initialvalue",
                    "title" : "let initialValue: Variant?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variable\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variable\/valuetype",
                    "title" : "let valueType: ValueType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variable\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variable\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variable\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/variable",
                "title" : "Variable",
                "type" : "class"
              }
            ],
            "path" : "\/documentation\/poieticcore\/metamodelandtypes",
            "title" : "Metamodel and Types",
            "type" : "symbol"
          },
          {
            "children" : [
              {
                "title" : "Predicates",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/predicate\/and(_:)-8pucl",
                            "title" : "func and(any Predicate) -> CompoundPredicate",
                            "type" : "method"
                          }
                        ],
                        "title" : "Predicate Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/predicate\/and(_:)-61fti",
                    "title" : "func and(any Predicate) -> CompoundPredicate",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/predicate\/match(frame:object:)",
                    "title" : "func match(frame: any Frame, object: ObjectSnapshot) -> Bool",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/predicate\/not()-6r1ul",
                            "title" : "func not() -> any Predicate",
                            "type" : "method"
                          }
                        ],
                        "title" : "Predicate Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/predicate\/not()-473jv",
                    "title" : "func not() -> any Predicate",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/predicate\/or(_:)-7gw1c",
                            "title" : "func or(any Predicate) -> CompoundPredicate",
                            "type" : "method"
                          }
                        ],
                        "title" : "Predicate Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/predicate\/or(_:)-36pow",
                    "title" : "func or(any Predicate) -> CompoundPredicate",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/predicate",
                "title" : "Predicate",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/compoundpredicate\/init(_:predicates:)",
                    "title" : "init(LogicalConnective, predicates: any Predicate...)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/compoundpredicate\/connective",
                    "title" : "let connective: LogicalConnective",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/compoundpredicate\/predicates",
                    "title" : "let predicates: [any Predicate]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/compoundpredicate\/match(frame:object:)",
                    "title" : "func match(frame: any Frame, object: ObjectSnapshot) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/compoundpredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/compoundpredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/compoundpredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/compoundpredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/compoundpredicate",
                "title" : "CompoundPredicate",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgepredicate\/init(_:origin:target:)",
                    "title" : "init((any Predicate)?, origin: (any Predicate)?, target: (any Predicate)?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgepredicate\/match(frame:object:)",
                    "title" : "func match(frame: any Frame, object: ObjectSnapshot) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/edgepredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/edgepredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/edgepredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/edgepredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/edgepredicate",
                "title" : "EdgePredicate",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/anypredicate\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/anypredicate\/match(frame:object:)",
                    "title" : "func match(frame: any Frame, object: ObjectSnapshot) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/anypredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/anypredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/anypredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/anypredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/anypredicate",
                "title" : "AnyPredicate",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/istypepredicate\/init(_:)-1toby",
                    "title" : "init([ObjectType])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/istypepredicate\/init(_:)-9kpa",
                    "title" : "init(ObjectType)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/istypepredicate\/match(frame:object:)",
                    "title" : "func match(frame: any Frame, object: ObjectSnapshot) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/istypepredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/istypepredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/istypepredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/istypepredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/istypepredicate",
                "title" : "IsTypePredicate",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/hastraitpredicate\/init(_:)",
                    "title" : "init(Trait)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/hastraitpredicate\/match(frame:object:)",
                    "title" : "func match(frame: any Frame, object: ObjectSnapshot) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/hastraitpredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/hastraitpredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/hastraitpredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/hastraitpredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/hastraitpredicate",
                "title" : "HasTraitPredicate",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/negationpredicate\/init(_:)",
                    "title" : "init(any Predicate)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/negationpredicate\/predicate",
                    "title" : "let predicate: any Predicate",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/negationpredicate\/match(frame:object:)",
                    "title" : "func match(frame: any Frame, object: ObjectSnapshot) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/negationpredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/negationpredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/negationpredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/negationpredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/negationpredicate",
                "title" : "NegationPredicate",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/init(_:)",
                    "title" : "init(any Component.Type)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/match(frame:object:)",
                    "title" : "func match(frame: any Frame, object: ObjectSnapshot) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> CompoundPredicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/hascomponentpredicate",
                "title" : "HasComponentPredicate",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/allsatisfy\/init(_:)",
                    "title" : "init(any Predicate)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/allsatisfy\/predicate",
                    "title" : "let predicate: any Predicate",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/allsatisfy\/check(frame:objects:)",
                    "title" : "func check(frame: any Frame, objects: [ObjectSnapshot]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/allsatisfy",
                "title" : "AllSatisfy",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/logicalconnective\/and",
                    "title" : "case and",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/logicalconnective\/or",
                    "title" : "case or",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/logicalconnective\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/logicalconnective\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/logicalconnective",
                "title" : "LogicalConnective",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/poieticcore\/predicates",
            "title" : "Predicates and Constraints",
            "type" : "symbol"
          },
          {
            "title" : "Persistence, Import and Export",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Object Import and Export",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonframereader\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonframereader\/read(bundleaturl:)",
                    "title" : "func read(bundleAtURL: URL) throws(ForeignFrameError) -> any ForeignFrame",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonframereader\/read(data:)",
                    "title" : "func read(data: Data) throws(ForeignFrameError) -> any ForeignFrame",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonframereader\/read(fileaturl:)",
                    "title" : "func read(fileAtURL: URL) throws(ForeignFrameError) -> any ForeignFrame",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonframereader\/versionkey",
                    "title" : "static let VersionKey: CodingUserInfoKey",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/jsonframereader",
                "title" : "JSONFrameReader",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonframewriter\/objecttojson(_:)",
                    "title" : "static func objectToJSON(ObjectSnapshot) throws -> Data",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/jsonframewriter",
                "title" : "JSONFrameWriter",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframeloader\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframeloader\/references",
                    "title" : "var references: [String : ObjectID]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframeloader\/load(_:into:)",
                    "title" : "func load(any ForeignFrame, into: MutableFrame) throws(FrameLoaderError)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignframeloader",
                "title" : "ForeignFrameLoader",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframe\/objects",
                    "title" : "var objects: [any ForeignObject]",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignframe",
                "title" : "ForeignFrame",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframeerror\/jsonerror(_:)",
                    "title" : "case JSONError(JSONError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframeerror\/datacorrupted(_:_:)",
                    "title" : "case dataCorrupted(String, [String])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframeerror\/foreignobjecterror(_:_:)",
                    "title" : "case foreignObjectError(ForeignObjectError, Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframeerror\/invalidreference(_:_:_:)",
                    "title" : "case invalidReference(String, String, Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframeerror\/missingframeformatversion",
                    "title" : "case missingFrameFormatVersion",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframeerror\/propertynotfound(_:_:)",
                    "title" : "case propertyNotFound(String, [String])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframeerror\/typemismatch(_:_:)",
                    "title" : "case typeMismatch(String, [String])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframeerror\/unabletoreaddata",
                    "title" : "case unableToReadData",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframeerror\/unknowndecodingerror(_:)",
                    "title" : "case unknownDecodingError(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframeerror\/unknownobjecttype(_:_:)",
                    "title" : "case unknownObjectType(String, Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframeerror\/unsupportedversion(_:)",
                    "title" : "case unsupportedVersion(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframeerror\/valuenotfound(_:_:)",
                    "title" : "case valueNotFound(String, [String])",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignframeerror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignframeerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignframeerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignframeerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignframeerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignframeerror",
                "title" : "ForeignFrameError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobject\/attributes",
                    "title" : "var attributes: [String : Variant]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobject\/children",
                    "title" : "var children: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobject\/id",
                    "title" : "var id: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobject\/name",
                    "title" : "var name: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobject\/origin",
                    "title" : "var origin: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobject\/parent",
                    "title" : "var parent: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobject\/snapshotid",
                    "title" : "var snapshotID: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobject\/structuraltype",
                    "title" : "var structuralType: StructuralType?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobject\/target",
                    "title" : "var target: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobject\/type",
                    "title" : "var type: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobject\/validatestructure(_:)",
                    "title" : "func validateStructure(StructuralType) throws(ForeignObjectError)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignobject",
                "title" : "ForeignObject",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobjecterror\/extrapropertyfound(_:)",
                    "title" : "case extraPropertyFound(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobjecterror\/foreignvalueerror(_:_:)",
                    "title" : "case foreignValueError(String, ForeignValueError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobjecterror\/malformedattributes",
                    "title" : "case malformedAttributes",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobjecterror\/malformedforeignobject",
                    "title" : "case malformedForeignObject",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobjecterror\/missingobjecttype",
                    "title" : "case missingObjectType",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobjecterror\/propertynotfound(_:)",
                    "title" : "case propertyNotFound(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobjecterror\/typemismatch(_:_:)",
                    "title" : "case typeMismatch(ValueType, String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobjecterror\/valueerror(_:_:)",
                    "title" : "case valueError(String, ValueError)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignobjecterror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignobjecterror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignobjecterror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignobjecterror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignobjecterror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignobjecterror",
                "title" : "ForeignObjectError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalueerror\/invalidpointvalue",
                    "title" : "case invalidPointValue",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalueerror\/notconvertible",
                    "title" : "case notConvertible",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalueerror\/sameitemtypeexpected",
                    "title" : "case sameItemTypeExpected",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignvalueerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignvalueerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignvalueerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignvalueerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignvalueerror",
                "title" : "ForeignValueError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frameloadererror\/foreignobjecterror(_:_:)",
                    "title" : "case foreignObjectError(ForeignObjectError, String?)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frameloadererror\/invalidreference(_:_:_:)",
                    "title" : "case invalidReference(String, String, String?)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frameloadererror\/unknownobjecttype(_:_:)",
                    "title" : "case unknownObjectType(String, String?)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frameloadererror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/frameloadererror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/frameloadererror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/frameloadererror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/frameloadererror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/frameloadererror",
                "title" : "FrameLoaderError",
                "type" : "enum"
              },
              {
                "path" : "\/documentation\/poieticcore\/variant\/coalescedcodingtypekey",
                "title" : "static let CoalescedCodingTypeKey: CodingUserInfoKey",
                "type" : "property"
              },
              {
                "title" : "Foreign Value",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/init(_:)",
                    "title" : "init([String : Variant])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/allkeys",
                    "title" : "var allKeys: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/dictionary",
                    "title" : "var dictionary: [String : Variant]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/idvalue(for:)",
                    "title" : "func IDValue(for: String) throws(ForeignRecordError) -> UInt64",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/idvalueifpresent(for:)",
                    "title" : "func IDValueIfPresent(for: String) throws(ForeignRecordError) -> UInt64?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/boolvalue(for:)",
                    "title" : "func boolValue(for: String) throws(ForeignRecordError) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/boolvalueifpresent(for:)",
                    "title" : "func boolValueIfPresent(for: String) throws(ForeignRecordError) -> Bool?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/contains(_:)",
                    "title" : "func contains(String) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/doublevalue(for:)",
                    "title" : "func doubleValue(for: String) throws(ForeignRecordError) -> Double",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/doublevalueifpresent(for:)",
                    "title" : "func doubleValueIfPresent(for: String) throws(ForeignRecordError) -> Double?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/intvalue(for:)",
                    "title" : "func intValue(for: String) throws(ForeignRecordError) -> Int",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/intvalueifpresent(for:)",
                    "title" : "func intValueIfPresent(for: String) throws(ForeignRecordError) -> Int?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/stringvalue(for:)",
                    "title" : "func stringValue(for: String) throws(ForeignRecordError) -> String",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/stringvalueifpresent(for:)",
                    "title" : "func stringValueIfPresent(for: String) throws(ForeignRecordError) -> String?",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/subscript(_:)",
                    "title" : "subscript(String) -> Variant?",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/encode(to:)",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/encodable-implementations",
                    "title" : "Encodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/==(_:_:)",
                        "title" : "static func == (ForeignRecord, ForeignRecord) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/publisher",
                        "title" : "var publisher: Publishers.Sequence<Self, Never>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/underestimatedcount",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/compare(_:_:)",
                        "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/count(where:)",
                        "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> DropFirstSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/droplast(_:)",
                        "title" : "func dropLast(Int) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/filter(_:)-9tjtz",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/filter(_:)-9ts4z",
                        "title" : "func filter(Predicate<Self.Element>) throws -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/flatmap(_:)-17wbo",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/flatmap(_:)-2qh47",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/formatted(_:)",
                        "title" : "func formatted<S>(S) -> S.FormatOutput",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/makeiterator()",
                        "title" : "func makeIterator() -> ForeignRecord.Iterator",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/map(_:)",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/prefix(_:)",
                        "title" : "func prefix(Int) -> PrefixSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/reversed()",
                        "title" : "func reversed() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/sorted(using:)-2g2s5",
                        "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/sorted(using:)-5d8nr",
                        "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/suffix(_:)",
                        "title" : "func suffix(Int) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecord\/iterator",
                        "title" : "ForeignRecord.Iterator",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignrecord\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignrecord",
                "title" : "ForeignRecord",
                "type" : "struct"
              },
              {
                "path" : "\/documentation\/poieticcore\/attributekey",
                "title" : "AttributeKey",
                "type" : "typealias"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/keyedattributes\/attributekeys",
                    "title" : "var attributeKeys: [AttributeKey]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/keyedattributes\/attribute(forkey:)",
                    "title" : "func attribute(forKey: String) -> Variant?",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/keyedattributes\/dictionary(withkeys:)-8c5b1",
                            "title" : "func dictionary(withKeys: [AttributeKey]) -> [AttributeKey : Variant]",
                            "type" : "method"
                          }
                        ],
                        "title" : "KeyedAttributes Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/keyedattributes\/dictionary(withkeys:)-710sv",
                    "title" : "func dictionary(withKeys: [AttributeKey]) -> [AttributeKey : Variant]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/keyedattributes",
                "title" : "KeyedAttributes",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecorderror\/unknownkey(_:)",
                    "title" : "case unknownKey(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignrecorderror\/valueerror(_:_:)",
                    "title" : "case valueError(String, ValueError)",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignrecorderror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignrecorderror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignrecorderror",
                "title" : "ForeignRecordError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantcodingerror\/invalidpointvalue",
                    "title" : "case invalidPointValue",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantcodingerror\/invalidvaluetypecode(_:)",
                    "title" : "case invalidValueTypeCode(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantcodingerror\/invalidvariantvalue",
                    "title" : "case invalidVariantValue",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantcodingerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variantcodingerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/variantcodingerror",
                "title" : "VariantCodingError",
                "type" : "enum"
              },
              {
                "title" : "CSV Reading and Writing",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/init(_:fields:options:)",
                    "title" : "init(String, fields: [String]?, options: CSVOptions) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/next()",
                    "title" : "func next() -> ForeignRecord?",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/publisher",
                        "title" : "var publisher: Publishers.Sequence<Self, Never>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/underestimatedcount",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/compare(_:_:)",
                        "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/contains(_:)",
                        "title" : "func contains(Self.Element) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/count(where:)",
                        "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> DropFirstSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/droplast(_:)",
                        "title" : "func dropLast(Int) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/elementsequal(_:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/filter(_:)-3af86",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/filter(_:)-4gppa",
                        "title" : "func filter(Predicate<Self.Element>) throws -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/flatmap(_:)-3oq6e",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/flatmap(_:)-8remy",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/formatted(_:)",
                        "title" : "func formatted<S>(S) -> S.FormatOutput",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/joined()",
                        "title" : "func joined() -> FlattenSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/joined(separator:)",
                        "title" : "func joined<Separator>(separator: Separator) -> JoinedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/makeiterator()",
                        "title" : "func makeIterator() -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/map(_:)",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/prefix(_:)",
                        "title" : "func prefix(Int) -> PrefixSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/reversed()",
                        "title" : "func reversed() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/sorted(using:)-5b172",
                        "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/sorted(using:)-94azp",
                        "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/split(separator:maxsplits:omittingemptysubsequences:)",
                        "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/starts(with:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/suffix(_:)",
                        "title" : "func suffix(Int) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/csvforeignrecordreader\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/csvforeignrecordreader",
                "title" : "CSVForeignRecordReader",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvformatter\/init(options:)",
                    "title" : "init(options: CSVOptions)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvformatter\/options",
                    "title" : "let options: CSVOptions",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvformatter\/format(_:)",
                    "title" : "func format([String]) -> String",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvformatter\/quote(_:)",
                    "title" : "func quote(String) -> String",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/csvformatter",
                "title" : "CSVFormatter",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvoptions\/init(fielddelimiter:recorddelimiter:)",
                    "title" : "init(fieldDelimiter: Character, recordDelimiter: Character)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvoptions\/fielddelimiter",
                    "title" : "let fieldDelimiter: Character",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvoptions\/recorddelimiter",
                    "title" : "let recordDelimiter: Character",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/csvoptions",
                "title" : "CSVOptions",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvwriter\/init(_:formatter:)",
                    "title" : "init(FileDescriptor, formatter: CSVFormatter) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvwriter\/init(path:formatter:)",
                    "title" : "convenience init(path: String, formatter: CSVFormatter) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvwriter\/close()",
                    "title" : "func close() throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvwriter\/write(row:)",
                    "title" : "func write(row: [String]) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/csvwriter",
                "title" : "CSVWriter",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csverror\/headerexpected",
                    "title" : "case headerExpected",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csverror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csverror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/csverror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csverror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/csverror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/csverror",
                "title" : "CSVError",
                "type" : "enum"
              },
              {
                "title" : "JSON",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/array(_:)",
                    "title" : "case array([JSONValue])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/bool(_:)",
                    "title" : "case bool(Bool)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/double(_:)",
                    "title" : "case double(Double)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/int(_:)",
                    "title" : "case int(Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/null",
                    "title" : "case null",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/object(_:)",
                    "title" : "case object([String : JSONValue])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/string(_:)",
                    "title" : "case string(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/init(data:)",
                    "title" : "init(data: Data) throws(JSONError)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/init(from:)",
                    "title" : "init(from: any Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/init(string:)",
                    "title" : "init(string: String) throws(JSONError)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/type",
                    "title" : "var type: JSONType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/asanyvalue()",
                    "title" : "func asAnyValue() -> Any?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/asarray()",
                    "title" : "func asArray() -> Array<JSONValue>?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/asbool()",
                    "title" : "func asBool() throws(JSONError) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/asdictionary()",
                    "title" : "func asDictionary() -> [String : JSONValue]?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/asdouble()",
                    "title" : "func asDouble() throws(JSONError) -> Double",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/asint()",
                    "title" : "func asInt() throws(JSONError) -> Int",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/asjsonstring()",
                    "title" : "func asJSONString() throws -> String",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/asstring()",
                    "title" : "func asString() throws(JSONError) -> String",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/encode(to:)",
                    "title" : "func encode(to: any Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/jsonvalue\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/jsonvalue",
                "title" : "JSONValue",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsontype\/array",
                    "title" : "case array",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsontype\/bool",
                    "title" : "case bool",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsontype\/double",
                    "title" : "case double",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsontype\/int",
                    "title" : "case int",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsontype\/null",
                    "title" : "case null",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsontype\/object",
                    "title" : "case object",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsontype\/string",
                    "title" : "case string",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/jsontype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/jsontype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/jsontype",
                "title" : "JSONType",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonerror\/datacorrupted",
                    "title" : "case dataCorrupted",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonerror\/propertynotfound(_:)",
                    "title" : "case propertyNotFound(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonerror\/typemismatch(_:_:)",
                    "title" : "case typeMismatch(JSONType, String?)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonerror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/jsonerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/jsonerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/jsonerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/jsonerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/jsonerror",
                "title" : "JSONError",
                "type" : "enum"
              },
              {
                "path" : "\/documentation\/poieticcore\/jsondictionary",
                "title" : "JSONDictionary",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/poieticcore\/foreigninterfaces",
            "title" : "Foreign Interfaces",
            "type" : "symbol"
          },
          {
            "children" : [
              {
                "title" : "Store",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/makeshiftdesignstore\/init(data:url:)",
                    "title" : "init(data: Data?, url: URL?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/makeshiftdesignstore\/data",
                    "title" : "let data: Data?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/makeshiftdesignstore\/url",
                    "title" : "let url: URL?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/makeshiftdesignstore\/load(metamodel:)",
                    "title" : "func load(metamodel: Metamodel) throws -> Design",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/makeshiftdesignstore\/save(design:)",
                    "title" : "func save(design: Design) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/makeshiftdesignstore",
                "title" : "MakeshiftDesignStore",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/persistentstoreerror\/cannotopenstore(_:)",
                    "title" : "case cannotOpenStore(URL)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/persistentstoreerror\/currentframeidnotset",
                    "title" : "case currentFrameIDNotSet",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/persistentstoreerror\/datacorrupted",
                    "title" : "case dataCorrupted",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/persistentstoreerror\/duplicateframe(_:)",
                    "title" : "case duplicateFrame(ObjectID)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/persistentstoreerror\/duplicatesnapshot(_:)",
                    "title" : "case duplicateSnapshot(ObjectID)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/persistentstoreerror\/extraneousstructuralproperty(_:_:)",
                    "title" : "case extraneousStructuralProperty(StructuralType, String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/persistentstoreerror\/invalidframereference(_:_:)",
                    "title" : "case invalidFrameReference(String, ObjectID)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/persistentstoreerror\/invalidsnapshotreference(_:_:)",
                    "title" : "case invalidSnapshotReference(ObjectID, ObjectID)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/persistentstoreerror\/invalidstructuraltype(_:)",
                    "title" : "case invalidStructuralType(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/persistentstoreerror\/missingproperty(_:_:)",
                    "title" : "case missingProperty(String, [String])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/persistentstoreerror\/missingstructuralproperty(_:_:)",
                    "title" : "case missingStructuralProperty(StructuralType, String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/persistentstoreerror\/storemissing",
                    "title" : "case storeMissing",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/persistentstoreerror\/structuraltypemismatch(_:_:)",
                    "title" : "case structuralTypeMismatch(StructuralType, StructuralType)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/persistentstoreerror\/typemismatch(_:)",
                    "title" : "case typeMismatch([String])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/persistentstoreerror\/unknownobjecttype(_:)",
                    "title" : "case unknownObjectType(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/persistentstoreerror\/unsupportedformatversion(_:)",
                    "title" : "case unsupportedFormatVersion(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/persistentstoreerror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/persistentstoreerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/persistentstoreerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/persistentstoreerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/persistentstoreerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/persistentstoreerror",
                "title" : "PersistentStoreError",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/poieticcore\/persistence",
            "title" : "Persistence",
            "type" : "symbol"
          },
          {
            "title" : "Others",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Graph, Nodes and Edges",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/edgeids-63tny",
                            "title" : "var edgeIDs: [ObjectID]",
                            "type" : "property"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/edgeids-7ycza",
                    "title" : "var edgeIDs: [ObjectID]",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/edges-31fd4",
                            "title" : "var edges: [Edge]",
                            "type" : "property"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/edges-53jr7",
                    "title" : "var edges: [Edge]",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/frame-nrxg",
                            "title" : "var frame: any Frame",
                            "type" : "property"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/frame-7ji4z",
                    "title" : "var frame: any Frame",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/nodeids-3396q",
                            "title" : "var nodeIDs: [ObjectID]",
                            "type" : "property"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/nodeids-4afw4",
                    "title" : "var nodeIDs: [ObjectID]",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/nodes-4z20u",
                            "title" : "var nodes: [Node]",
                            "type" : "property"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/nodes-41elf",
                    "title" : "var nodes: [Node]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/graph\/prettydebugdescription",
                    "title" : "var prettyDebugDescription: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/contains(edge:)-9v9o",
                            "title" : "func contains(edge: ObjectID) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/contains(edge:)-97l6i",
                            "title" : "func contains(edge: ObjectID) -> Bool",
                            "type" : "method"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/contains(edge:)-2upzx",
                    "title" : "func contains(edge: ObjectID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/contains(node:)-80fw4",
                            "title" : "func contains(node: ObjectID) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/contains(node:)-4zshy",
                            "title" : "func contains(node: ObjectID) -> Bool",
                            "type" : "method"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/contains(node:)-34pej",
                    "title" : "func contains(node: ObjectID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/edge(_:)-1a5ez",
                            "title" : "func edge(ObjectID) -> Edge",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/edge(_:)-74sgs",
                            "title" : "func edge(ObjectID) -> Edge",
                            "type" : "method"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/edge(_:)-31vec",
                    "title" : "func edge(ObjectID) -> Edge",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/hood(_:selector:)-47x7u",
                            "title" : "func hood(ObjectID, selector: NeighborhoodSelector) -> Neighborhood",
                            "type" : "method"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/hood(_:selector:)-3m41k",
                    "title" : "func hood(ObjectID, selector: NeighborhoodSelector) -> Neighborhood",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/incoming(_:)-1d1ga",
                            "title" : "func incoming(ObjectID) -> [Edge]",
                            "type" : "method"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/incoming(_:)-1tb9h",
                    "title" : "func incoming(ObjectID) -> [Edge]",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/neighbours(_:)-jblt",
                            "title" : "func neighbours(ObjectID) -> [Edge]",
                            "type" : "method"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/neighbours(_:)-55pd7",
                    "title" : "func neighbours(ObjectID) -> [Edge]",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/node(_:)-6huic",
                            "title" : "func node(ObjectID) -> Node",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/node(_:)-10660",
                            "title" : "func node(ObjectID) -> Node",
                            "type" : "method"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/node(_:)-82lgd",
                    "title" : "func node(ObjectID) -> Node",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/outgoing(_:)-l3sj",
                            "title" : "func outgoing(ObjectID) -> [Edge]",
                            "type" : "method"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/outgoing(_:)-6wz8l",
                    "title" : "func outgoing(ObjectID) -> [Edge]",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/selectedges(_:)-17s86",
                            "title" : "func selectEdges(any Predicate) -> [Edge]",
                            "type" : "method"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/selectedges(_:)-4ip8t",
                    "title" : "func selectEdges(any Predicate) -> [Edge]",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graph\/selectnodes(_:)-7qxt8",
                            "title" : "func selectNodes(any Predicate) -> [Node]",
                            "type" : "method"
                          }
                        ],
                        "title" : "Graph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/selectnodes(_:)-89ih1",
                    "title" : "func selectNodes(any Predicate) -> [Node]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/graph\/topologicalsort(_:edges:)",
                    "title" : "func topologicalSort([ObjectID], edges: [Edge]) throws(GraphCycleError) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/graph",
                "title" : "Graph",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutablegraph\/createedge(_:origin:target:)",
                    "title" : "func createEdge(ObjectType, origin: ObjectID, target: ObjectID) -> ObjectID",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutablegraph\/createedge(_:origin:target:attributes:components:)",
                    "title" : "func createEdge(ObjectType, origin: ObjectID, target: ObjectID, attributes: [String : Variant], components: [any Component]) -> ObjectID",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutablegraph\/createnode(_:)",
                    "title" : "func createNode(ObjectType) -> ObjectID",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutablegraph\/createnode(_:name:attributes:components:)",
                    "title" : "func createNode(ObjectType, name: String?, attributes: [String : Variant], components: [any Component]) -> ObjectID",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutablegraph\/remove(edge:)",
                    "title" : "func remove(edge: ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutablegraph\/remove(node:)",
                    "title" : "func remove(node: ObjectID)",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/mutablegraph\/removeall()-628za",
                            "title" : "func removeAll()",
                            "type" : "method"
                          }
                        ],
                        "title" : "MutableGraph Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/mutablegraph\/removeall()-98jcu",
                    "title" : "func removeAll()",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/mutablegraph",
                "title" : "MutableGraph",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/node\/init(_:)",
                    "title" : "init?(ObjectSnapshot)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/node\/id",
                    "title" : "var id: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/node\/name",
                    "title" : "var name: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/node\/snapshot",
                    "title" : "let snapshot: ObjectSnapshot",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/node\/type",
                    "title" : "var type: ObjectType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/node\/attribute(forkey:)",
                    "title" : "func attribute(forKey: String) -> Variant?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/node",
                "title" : "Node",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edge\/init(_:)",
                    "title" : "init?(ObjectSnapshot)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edge\/id",
                    "title" : "var id: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edge\/name",
                    "title" : "var name: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edge\/origin",
                    "title" : "let origin: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edge\/snapshot",
                    "title" : "let snapshot: ObjectSnapshot",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edge\/target",
                    "title" : "let target: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edge\/type",
                    "title" : "var type: ObjectType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edge\/attribute(forkey:)",
                    "title" : "func attribute(forKey: String) -> Variant?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/edge",
                "title" : "Edge",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgetype\/origin",
                    "title" : "var origin: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgetype\/target",
                    "title" : "var target: ObjectID",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/edgetype",
                "title" : "EdgeType",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgedirection\/incoming",
                    "title" : "case incoming",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgedirection\/outgoing",
                    "title" : "case outgoing",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgedirection\/reversed",
                    "title" : "var reversed: EdgeDirection",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/edgedirection\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/edgedirection\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/edgedirection",
                "title" : "EdgeDirection",
                "type" : "enum"
              },
              {
                "path" : "\/documentation\/poieticcore\/topologicalsort(_:edges:)",
                "title" : "func topologicalSort<T>([ObjectID], edges: [T]) throws(GraphCycleError) -> [ObjectID]",
                "type" : "func"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/graphcycleerror\/init(edges:)",
                    "title" : "init(edges: [ObjectID])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/graphcycleerror\/edges",
                    "title" : "let edges: [ObjectID]",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/graphcycleerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graphcycleerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/graphcycleerror",
                "title" : "GraphCycleError",
                "type" : "struct"
              },
              {
                "title" : "Neighbourhoods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/neighborhood\/init(graph:nodeid:direction:edges:)",
                    "title" : "init(graph: any Graph, nodeID: ObjectID, direction: EdgeDirection, edges: [Edge])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/neighborhood\/direction",
                    "title" : "let direction: EdgeDirection",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/neighborhood\/edges",
                    "title" : "let edges: [Edge]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/neighborhood\/graph",
                    "title" : "let graph: any Graph",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/neighborhood\/nodeid",
                    "title" : "let nodeID: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/neighborhood\/nodes",
                    "title" : "var nodes: [Node]",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/neighborhood",
                "title" : "Neighborhood",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/neighborhoodselector\/init(predicate:direction:)",
                    "title" : "init(predicate: any Predicate, direction: EdgeDirection)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/neighborhoodselector\/direction",
                    "title" : "let direction: EdgeDirection",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/neighborhoodselector\/predicate",
                    "title" : "let predicate: any Predicate",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/neighborhoodselector",
                "title" : "NeighborhoodSelector",
                "type" : "class"
              }
            ],
            "path" : "\/documentation\/poieticcore\/graphs",
            "title" : "Graph",
            "type" : "symbol"
          },
          {
            "children" : [
              {
                "title" : "Arithmetic Expression",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/binary(_:_:_:)",
                    "title" : "case binary(ArithmeticExpression<V, F>.FunctionReference, ArithmeticExpression<V, F>, ArithmeticExpression<V, F>)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/function(_:_:)",
                    "title" : "case function(ArithmeticExpression<V, F>.FunctionReference, [ArithmeticExpression<V, F>])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/unary(_:_:)",
                    "title" : "case unary(ArithmeticExpression<V, F>.FunctionReference, ArithmeticExpression<V, F>)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/value(_:)",
                    "title" : "case value(ArithmeticExpression<V, F>.LiteralValue)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/variable(_:)",
                    "title" : "case variable(ArithmeticExpression<V, F>.VariableReference)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/allvariables",
                    "title" : "var allVariables: [ArithmeticExpression<V, F>.VariableReference]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/children",
                    "title" : "var children: [ArithmeticExpression<V, F>]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/functionreference",
                    "title" : "ArithmeticExpression.FunctionReference",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/literalvalue",
                    "title" : "ArithmeticExpression.LiteralValue",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/variablereference",
                    "title" : "ArithmeticExpression.VariableReference",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/arithmeticexpression\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/arithmeticexpression\/==(_:_:)",
                        "title" : "static func == (ArithmeticExpression<V, F>, ArithmeticExpression<V, F>) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/arithmeticexpression",
                "title" : "ArithmeticExpression",
                "type" : "enum"
              },
              {
                "path" : "\/documentation\/poieticcore\/unboundexpression",
                "title" : "UnboundExpression",
                "type" : "typealias"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionconvertible\/toexpression",
                    "title" : "var toExpression: UnboundExpression",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/expressionconvertible",
                "title" : "ExpressionConvertible",
                "type" : "protocol"
              },
              {
                "title" : "Functions",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/init(name:signature:body:)",
                    "title" : "init(name: String, signature: Signature, body: Function.Body)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/apply",
                    "title" : "let apply: Function.Body",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/signature",
                    "title" : "let signature: Signature",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/body",
                    "title" : "Function.Body",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/booleanvariadic(_:body:)",
                    "title" : "static func BooleanVariadic(String, body: ([Bool]) -> Bool) -> Function",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/comparison(_:body:)",
                    "title" : "static func Comparison(String, body: (Variant, Variant) throws -> Bool) -> Function",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/numericbinary(_:leftargument:rightargument:body:)",
                    "title" : "static func NumericBinary(String, leftArgument: String, rightArgument: String, body: (Double, Double) -> Double) -> Function",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/numericunary(_:argumentname:body:)",
                    "title" : "static func NumericUnary(String, argumentName: String, body: (Double) -> Double) -> Function",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/numericvariadic(_:body:)",
                    "title" : "static func NumericVariadic(String, body: ([Double]) -> Double) -> Function",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/function",
                "title" : "Function",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/init(_:variadic:returns:)",
                    "title" : "init([FunctionArgument], variadic: FunctionArgument?, returns: ValueType)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/init(numeric:)",
                    "title" : "convenience init(numeric: [String])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/init(numericvariadic:)",
                    "title" : "convenience init(numericVariadic: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/isvariadic",
                    "title" : "var isVariadic: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/minimalargumentcount",
                    "title" : "var minimalArgumentCount: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/positional",
                    "title" : "let positional: [FunctionArgument]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/returntype",
                    "title" : "let returnType: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/variadic",
                    "title" : "let variadic: FunctionArgument?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/validate(_:)",
                    "title" : "func validate([ValueType]) -> Signature.ValidationResult",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/numericunary",
                    "title" : "static let NumericUnary: Signature",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/numericvariadic",
                    "title" : "static let NumericVariadic: Signature",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/signature\/validationresult\/invalidnumberofarguments",
                        "title" : "case invalidNumberOfArguments",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/signature\/validationresult\/ok",
                        "title" : "case ok",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/signature\/validationresult\/typemismatch(_:)",
                        "title" : "case typeMismatch([Int])",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/signature\/validationresult\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticcore\/signature\/validationresult\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/signature\/validationresult",
                    "title" : "Signature.ValidationResult",
                    "type" : "enum"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/signature",
                "title" : "Signature",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargument\/init(_:type:isconstant:)",
                    "title" : "init(String, type: VariableType, isConstant: Bool)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargument\/isconstant",
                    "title" : "let isConstant: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargument\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargument\/type",
                    "title" : "let type: VariableType",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/functionargument",
                "title" : "FunctionArgument",
                "type" : "struct"
              },
              {
                "path" : "\/documentation\/poieticcore\/builtincomparisonoperators",
                "title" : "let BuiltinComparisonOperators: [Function]",
                "type" : "var"
              },
              {
                "path" : "\/documentation\/poieticcore\/builtinfunctions",
                "title" : "let BuiltinFunctions: [Function]",
                "type" : "var"
              },
              {
                "title" : "Parsing",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Associated Types",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/lexer\/tokentype",
                    "title" : "TokenType",
                    "type" : "associatedtype"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/lexer\/atend-5lkrl",
                            "title" : "var atEnd: Bool",
                            "type" : "property"
                          }
                        ],
                        "title" : "Lexer Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/lexer\/atend-5zjy4",
                    "title" : "var atEnd: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/lexer\/scanner",
                    "title" : "var scanner: Scanner",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/lexer\/acceptleadingtrivia()",
                    "title" : "func acceptLeadingTrivia()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/lexer\/accepttoken()",
                    "title" : "func acceptToken() -> Self.TokenType?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/lexer\/accepttrailingtrivia()",
                    "title" : "func acceptTrailingTrivia()",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/lexer\/next()-2ucgz",
                            "title" : "func next() -> Token<Self.TokenType>",
                            "type" : "method"
                          }
                        ],
                        "title" : "Lexer Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/lexer\/next()-2g4r7",
                    "title" : "func next() -> Token<Self.TokenType>",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/lexer",
                "title" : "Lexer",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/scanner\/init(string:)",
                    "title" : "init(string: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/scanner\/currentindex",
                    "title" : "var currentIndex: String.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/scanner\/endindex",
                    "title" : "let endIndex: String.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/scanner\/source",
                    "title" : "let source: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/scanner",
                "title" : "Scanner",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionparser\/init(lexer:)",
                    "title" : "init(lexer: ExpressionLexer)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionparser\/init(string:)",
                    "title" : "convenience init(string: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionparser\/parse()",
                    "title" : "func parse() throws -> UnboundExpression",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/expressionparser",
                "title" : "ExpressionParser",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionlexer\/init(scanner:)",
                    "title" : "init(scanner: Scanner)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionlexer\/init(string:)",
                    "title" : "convenience init(string: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionlexer\/scanner",
                    "title" : "var scanner: Scanner",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionlexer\/accepttoken()",
                    "title" : "func acceptToken() -> ExpressionTokenType?",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionlexer\/tokentype",
                    "title" : "ExpressionLexer.TokenType",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionlexer\/operatorcharacters",
                    "title" : "static let OperatorCharacters: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressionlexer\/atend",
                        "title" : "var atEnd: Bool",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressionlexer\/acceptleadingtrivia()",
                        "title" : "func acceptLeadingTrivia()",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressionlexer\/accepttrailingtrivia()",
                        "title" : "func acceptTrailingTrivia()",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressionlexer\/next()",
                        "title" : "func next() -> Token<Self.TokenType>",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/expressionlexer\/lexer-implementations",
                    "title" : "Lexer Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/expressionlexer",
                "title" : "ExpressionLexer",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/textlocation\/init(line:column:index:)",
                    "title" : "init(line: Int, column: Int, index: String.Index)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/textlocation\/init(string:index:)",
                    "title" : "init(string: String, index: String.Index)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/textlocation\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/textlocation\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/textlocation\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/textlocation",
                "title" : "TextLocation",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/init(type:source:range:leadingtriviarange:trailingtriviarange:textlocation:)",
                    "title" : "init(type: Token<T>.TokenType, source: String, range: Range<String.Index>, leadingTriviaRange: Range<String.Index>?, trailingTriviaRange: Range<String.Index>?, textLocation: TextLocation)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/leadingtrivia",
                    "title" : "let leadingTrivia: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/leadingtriviarange",
                    "title" : "let leadingTriviaRange: Range<String.Index>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/range",
                    "title" : "let range: Range<String.Index>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/text",
                    "title" : "let text: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/textlocation",
                    "title" : "let textLocation: TextLocation",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/trailingtrivia",
                    "title" : "let trailingTrivia: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/trailingtriviarange",
                    "title" : "let trailingTriviaRange: Range<String.Index>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/type",
                    "title" : "let type: T",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/token\/tokentype",
                    "title" : "Token.TokenType",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/token\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/token\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/token",
                "title" : "Token",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/comma",
                    "title" : "case comma",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/double",
                    "title" : "case double",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/empty",
                    "title" : "case empty",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/error(_:)",
                    "title" : "case error(ExpressionSyntaxError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/identifier",
                    "title" : "case identifier",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/int",
                    "title" : "case int",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/leftparen",
                    "title" : "case leftParen",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/operator",
                    "title" : "case `operator`",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/rightparen",
                    "title" : "case rightParen",
                    "type" : "case"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/tokenerror",
                    "title" : "ExpressionTokenType.TokenError",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/unexpectedcharactererror",
                    "title" : "static let unexpectedCharacterError: ExpressionTokenType",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressiontokentype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/expressiontokentype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/expressiontokentype",
                "title" : "ExpressionTokenType",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/tokentypeprotocol\/empty",
                    "title" : "static var empty: Self",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/tokentypeprotocol\/unexpectedcharactererror",
                    "title" : "static var unexpectedCharacterError: Self",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/tokentypeprotocol",
                "title" : "TokenTypeProtocol",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/expressionexpected",
                    "title" : "case expressionExpected",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/invalidcharacterinnumber",
                    "title" : "case invalidCharacterInNumber",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/missingrightparenthesis",
                    "title" : "case missingRightParenthesis",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/numberexpected",
                    "title" : "case numberExpected",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/unexpectedcharacter",
                    "title" : "case unexpectedCharacter",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/unexpectedtoken",
                    "title" : "case unexpectedToken",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/expressionsyntaxerror",
                "title" : "ExpressionSyntaxError",
                "type" : "enum"
              },
              {
                "title" : "Abstract Syntax Tree",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntax\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntax\/toexpression()",
                    "title" : "func toExpression() -> UnboundExpression",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/expressionsyntax",
                "title" : "ExpressionSyntax",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/parenthesissyntax\/init(leftparen:expression:rightparen:)",
                    "title" : "init(leftParen: ExpressionToken, expression: any ExpressionSyntax, rightParen: ExpressionToken)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/parenthesissyntax\/expression",
                    "title" : "let expression: any ExpressionSyntax",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/parenthesissyntax\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/parenthesissyntax\/leftparen",
                    "title" : "let leftParen: ExpressionToken",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/parenthesissyntax\/rightparen",
                    "title" : "let rightParen: ExpressionToken",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/parenthesissyntax\/toexpression()",
                        "title" : "func toExpression() -> UnboundExpression",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/parenthesissyntax\/expressionsyntax-implementations",
                    "title" : "ExpressionSyntax Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/parenthesissyntax",
                "title" : "ParenthesisSyntax",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax\/init(op:operand:)",
                    "title" : "init(op: ExpressionToken, operand: any ExpressionSyntax)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax\/op",
                    "title" : "let op: ExpressionToken",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax\/operand",
                    "title" : "let operand: any ExpressionSyntax",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax\/toexpression()",
                        "title" : "func toExpression() -> UnboundExpression",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax\/expressionsyntax-implementations",
                    "title" : "ExpressionSyntax Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/unaryoperatorsyntax",
                "title" : "UnaryOperatorSyntax",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/init(leftoperand:op:rightoperand:)",
                    "title" : "init(leftOperand: any ExpressionSyntax, op: ExpressionToken, rightOperand: any ExpressionSyntax)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/leftoperand",
                    "title" : "let leftOperand: any ExpressionSyntax",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/op",
                    "title" : "let op: ExpressionToken",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/rightoperand",
                    "title" : "let rightOperand: any ExpressionSyntax",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/toexpression()",
                        "title" : "func toExpression() -> UnboundExpression",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax\/expressionsyntax-implementations",
                    "title" : "ExpressionSyntax Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/binaryoperatorsyntax",
                "title" : "BinaryOperatorSyntax",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variablesyntax\/init(variable:)",
                    "title" : "init(variable: ExpressionToken)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variablesyntax\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variablesyntax\/variable",
                    "title" : "let variable: ExpressionToken",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variablesyntax\/toexpression()",
                        "title" : "func toExpression() -> UnboundExpression",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variablesyntax\/expressionsyntax-implementations",
                    "title" : "ExpressionSyntax Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/variablesyntax",
                "title" : "VariableSyntax",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/literalsyntax\/init(type:literal:)",
                    "title" : "init(type: LiteralSyntax.LiteralType, literal: ExpressionToken)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/literalsyntax\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/literalsyntax\/literal",
                    "title" : "let literal: ExpressionToken",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/literalsyntax\/type",
                    "title" : "let type: LiteralSyntax.LiteralType",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/literalsyntax\/literaltype\/double",
                        "title" : "case double",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/literalsyntax\/literaltype\/int",
                        "title" : "case int",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/literalsyntax\/literaltype\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticcore\/literalsyntax\/literaltype\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/literalsyntax\/literaltype",
                    "title" : "LiteralSyntax.LiteralType",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/literalsyntax\/toexpression()",
                        "title" : "func toExpression() -> UnboundExpression",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/literalsyntax\/expressionsyntax-implementations",
                    "title" : "ExpressionSyntax Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/literalsyntax",
                "title" : "LiteralSyntax",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functioncallsyntax\/init(name:leftparen:arguments:rightparen:)",
                    "title" : "init(name: ExpressionToken, leftParen: ExpressionToken, arguments: FunctionArgumentListSyntax, rightParen: ExpressionToken)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functioncallsyntax\/arguments",
                    "title" : "let arguments: FunctionArgumentListSyntax",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functioncallsyntax\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functioncallsyntax\/leftparen",
                    "title" : "let leftParen: ExpressionToken",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functioncallsyntax\/name",
                    "title" : "let name: ExpressionToken",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functioncallsyntax\/rightparen",
                    "title" : "let rightParen: ExpressionToken",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/functioncallsyntax\/toexpression()",
                        "title" : "func toExpression() -> UnboundExpression",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/functioncallsyntax\/expressionsyntax-implementations",
                    "title" : "ExpressionSyntax Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/functioncallsyntax",
                "title" : "FunctionCallSyntax",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargumentsyntax\/init(argument:trailingcomma:)",
                    "title" : "init(argument: any ExpressionSyntax, trailingComma: ExpressionToken?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargumentsyntax\/argument",
                    "title" : "let argument: any ExpressionSyntax",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargumentsyntax\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargumentsyntax\/trailingcomma",
                    "title" : "let trailingComma: ExpressionToken?",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/functionargumentsyntax\/toexpression()",
                        "title" : "func toExpression() -> UnboundExpression",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/functionargumentsyntax\/expressionsyntax-implementations",
                    "title" : "ExpressionSyntax Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/functionargumentsyntax",
                "title" : "FunctionArgumentSyntax",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargumentlistsyntax\/init(arguments:)",
                    "title" : "init(arguments: [FunctionArgumentSyntax])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargumentlistsyntax\/arguments",
                    "title" : "let arguments: [FunctionArgumentSyntax]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargumentlistsyntax\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/functionargumentlistsyntax\/toexpression()",
                        "title" : "func toExpression() -> UnboundExpression",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/functionargumentlistsyntax\/expressionsyntax-implementations",
                    "title" : "ExpressionSyntax Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/functionargumentlistsyntax",
                "title" : "FunctionArgumentListSyntax",
                "type" : "class"
              }
            ],
            "path" : "\/documentation\/poieticcore\/formulas",
            "title" : "Formulas",
            "type" : "symbol"
          },
          {
            "children" : [
              {
                "title" : "Types",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/runtimecontext\/init(frame:)",
                    "title" : "init(frame: any Frame)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/runtimecontext\/frame",
                    "title" : "let frame: any Frame",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/runtimecontext\/hasissues",
                    "title" : "var hasIssues: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/runtimecontext\/issues",
                    "title" : "var issues: [ObjectID : [any Error]]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/runtimecontext\/objectcomponents",
                    "title" : "var objectComponents: [ObjectID : ComponentSet]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/runtimecontext\/appendissue(_:for:)",
                    "title" : "func appendIssue(any Error, for: ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/runtimecontext\/component(for:)",
                    "title" : "func component<T>(for: ObjectID) -> T?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/runtimecontext\/setcomponent(_:for:)",
                    "title" : "func setComponent<T>(T, for: ObjectID)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/runtimecontext",
                "title" : "RuntimeContext",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/runtimesystem\/update(_:)",
                    "title" : "func update(RuntimeContext)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/runtimesystem",
                "title" : "RuntimeSystem",
                "type" : "protocol"
              },
              {
                "path" : "\/documentation\/poieticcore\/component",
                "title" : "Component",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/inspectablecomponent\/attribute(forkey:)",
                    "title" : "func attribute(forKey: AttributeKey) -> Variant?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/inspectablecomponent\/setattribute(value:forkey:)",
                    "title" : "func setAttribute(value: Variant, forKey: AttributeKey) throws",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/inspectablecomponent\/trait",
                    "title" : "static var trait: Trait",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/inspectablecomponent",
                "title" : "InspectableComponent",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/init(_:)",
                    "title" : "init([any Component])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/count",
                    "title" : "var count: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/has(_:)",
                    "title" : "func has(any Component.Type) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/remove(_:)",
                    "title" : "func remove(any Component.Type)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/removeall()",
                    "title" : "func removeAll()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/set(_:)-5rqbo",
                    "title" : "func set(any Component)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/set(_:)-7o58e",
                    "title" : "func set([any Component])",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-5d8h6",
                    "title" : "subscript<T>(T.Type) -> T?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-7cqju",
                    "title" : "subscript(any Component.Type) -> (any Component)?",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/endindex",
                        "title" : "var endIndex: ComponentSet.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/first",
                        "title" : "var first: Self.Element?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/indices",
                        "title" : "var indices: DefaultIndices<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/isempty",
                        "title" : "var isEmpty: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/startindex",
                        "title" : "var startIndex: ComponentSet.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/underestimatedcount",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/distance(from:to:)",
                        "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/droplast(_:)",
                        "title" : "func dropLast(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/firstindex(where:)",
                        "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/formindex(_:offsetby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/formindex(_:offsetby:limitedby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/formindex(after:)",
                        "title" : "func formIndex(after: inout Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/index(_:offsetby:)",
                        "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/index(_:offsetby:limitedby:)",
                        "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/index(after:)",
                        "title" : "func index(after: ComponentSet.Index) -> ComponentSet.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/indices(where:)",
                        "title" : "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/makeiterator()",
                        "title" : "func makeIterator() -> IndexingIterator<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/map(_:)-72p9i",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/prefix(_:)",
                        "title" : "func prefix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/prefix(through:)",
                        "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/prefix(upto:)",
                        "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/randomelement()",
                        "title" : "func randomElement() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/randomelement(using:)",
                        "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/removingsubranges(_:)",
                        "title" : "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/suffix(_:)",
                        "title" : "func suffix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/suffix(from:)",
                        "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/trimmingprefix(while:)",
                        "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-4rn2g",
                        "title" : "subscript<R>(R) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-62pt4",
                        "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-6ytl5",
                        "title" : "subscript(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-9nfo4",
                        "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-9xnhm",
                        "title" : "subscript(ComponentSet.Index) -> any Component",
                        "type" : "subscript"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/index",
                        "title" : "ComponentSet.Index",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/componentset\/collection-implementations",
                    "title" : "Collection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/init(arrayliteral:)",
                        "title" : "init(arrayLiteral: any ComponentSet.ArrayLiteralElement...)",
                        "type" : "init"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/arrayliteralelement",
                        "title" : "ComponentSet.ArrayLiteralElement",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/componentset\/expressiblebyarrayliteral-implementations",
                    "title" : "ExpressibleByArrayLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/publisher",
                        "title" : "var publisher: Publishers.Sequence<Self, Never>",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/compare(_:_:)",
                        "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/count(where:)",
                        "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/filter(_:)-44vw0",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/filter(_:)-68t0j",
                        "title" : "func filter(Predicate<Self.Element>) throws -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/flatmap(_:)-4lcj",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/flatmap(_:)-5cxck",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/formatted(_:)",
                        "title" : "func formatted<S>(S) -> S.FormatOutput",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/map(_:)-286dx",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/reversed()",
                        "title" : "func reversed() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/sorted(using:)-14mv4",
                        "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/sorted(using:)-8ong7",
                        "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/componentset\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/componentset",
                "title" : "ComponentSet",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/issuelistcomponent\/init(errors:)",
                    "title" : "init(errors: [any Error])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/issuelistcomponent\/errors",
                    "title" : "var errors: [any Error]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/issuelistcomponent\/append(_:)",
                    "title" : "func append(any Error)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/issuelistcomponent\/removeall()",
                    "title" : "func removeAll()",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/issuelistcomponent",
                "title" : "IssueListComponent",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/init(_:)",
                    "title" : "init([OrderedSet<T>.Item])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/isempty",
                    "title" : "var isEmpty: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/add(_:)",
                    "title" : "func add(OrderedSet<T>.Item)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/contains(_:)",
                    "title" : "func contains(OrderedSet<T>.Item) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/remove(_:)",
                    "title" : "func remove(OrderedSet<T>.Item)",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/index",
                    "title" : "OrderedSet.Index",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/item",
                    "title" : "OrderedSet.Item",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/count",
                        "title" : "var count: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/endindex",
                        "title" : "var endIndex: OrderedSet<T>.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/first",
                        "title" : "var first: Self.Element?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/indices",
                        "title" : "var indices: DefaultIndices<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/startindex",
                        "title" : "var startIndex: OrderedSet<T>.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/underestimatedcount",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/distance(from:to:)",
                        "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/droplast(_:)",
                        "title" : "func dropLast(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/firstindex(of:)",
                        "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/firstindex(where:)",
                        "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/firstrange(of:)",
                        "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/formindex(_:offsetby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/formindex(_:offsetby:limitedby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/formindex(after:)",
                        "title" : "func formIndex(after: inout Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/index(_:offsetby:)",
                        "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/index(_:offsetby:limitedby:)",
                        "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/index(after:)",
                        "title" : "func index(after: OrderedSet<T>.Index) -> OrderedSet<T>.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/index(of:)",
                        "title" : "func index(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/indices(of:)",
                        "title" : "func indices(of: Self.Element) -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/indices(where:)",
                        "title" : "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/makeiterator()",
                        "title" : "func makeIterator() -> IndexingIterator<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/map(_:)-157y7",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/prefix(_:)",
                        "title" : "func prefix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/prefix(through:)",
                        "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/prefix(upto:)",
                        "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/randomelement()",
                        "title" : "func randomElement() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/randomelement(using:)",
                        "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/ranges(of:)",
                        "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/removingsubranges(_:)",
                        "title" : "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/split(separator:maxsplits:omittingemptysubsequences:)",
                        "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/suffix(_:)",
                        "title" : "func suffix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/suffix(from:)",
                        "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/trimmingprefix(_:)",
                        "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/trimmingprefix(while:)",
                        "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/subscript(_:)",
                        "title" : "subscript(OrderedSet<T>.Index) -> OrderedSet<T>.Item",
                        "type" : "subscript"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/orderedset\/collection-implementations",
                    "title" : "Collection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/orderedset\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/init(arrayliteral:)",
                        "title" : "init(arrayLiteral: T...)",
                        "type" : "init"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/arrayliteralelement",
                        "title" : "OrderedSet.ArrayLiteralElement",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/orderedset\/expressiblebyarrayliteral-implementations",
                    "title" : "ExpressibleByArrayLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/publisher",
                        "title" : "var publisher: Publishers.Sequence<Self, Never>",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/compare(_:_:)",
                        "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/count(where:)",
                        "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/elementsequal(_:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/filter(_:)-a4a6",
                        "title" : "func filter(Predicate<Self.Element>) throws -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/filter(_:)-nfpt",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/flatmap(_:)-5l690",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/flatmap(_:)-8dgje",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/formatted()",
                        "title" : "func formatted() -> String",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/formatted(_:)",
                        "title" : "func formatted<S>(S) -> S.FormatOutput",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/joined()",
                        "title" : "func joined() -> FlattenSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/joined(separator:)-2mfau",
                        "title" : "func joined<Separator>(separator: Separator) -> JoinedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/joined(separator:)-4u7hg",
                        "title" : "func joined(separator: String) -> String",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/lexicographicallyprecedes(_:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/map(_:)-zujt",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/max()",
                        "title" : "func max() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/min()",
                        "title" : "func min() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/reversed()",
                        "title" : "func reversed() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/sorted()",
                        "title" : "func sorted() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/sorted(using:)-218pn",
                        "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/sorted(using:)-7tm2s",
                        "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/starts(with:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/orderedset\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/orderedset",
                "title" : "OrderedSet",
                "type" : "struct"
              }
            ],
            "path" : "\/documentation\/poieticcore\/runtime",
            "title" : "Runtime",
            "type" : "symbol"
          },
          {
            "title" : "Protocols",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/mutablekeyedattributes\/setattribute(value:forkey:)",
                "title" : "func setAttribute(value: Variant, forKey: AttributeKey) throws",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticcore\/mutablekeyedattributes\/setattributes(_:)-1t9us",
                        "title" : "func setAttributes([AttributeKey : Variant]) throws",
                        "type" : "method"
                      }
                    ],
                    "title" : "MutableKeyedAttributes Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/mutablekeyedattributes\/setattributes(_:)-6dg7w",
                "title" : "func setAttributes([AttributeKey : Variant]) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/mutablekeyedattributes",
            "title" : "MutableKeyedAttributes",
            "type" : "protocol"
          },
          {
            "title" : "Structures",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/designlibraryinfo\/init(from:)",
                "title" : "init(from: any Decoder) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/designlibraryinfo\/init(items:)",
                "title" : "init(items: [DesignLibraryItem])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/designlibraryinfo\/formatversion",
                "title" : "let formatVersion: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designlibraryinfo\/items",
                "title" : "let items: [DesignLibraryItem]",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticcore\/designlibraryinfo",
            "title" : "DesignLibraryInfo",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/designlibraryitem\/init(from:)",
                "title" : "init(from: any Decoder) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/designlibraryitem\/init(url:name:title:)",
                "title" : "init(url: URL, name: String, title: String)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/designlibraryitem\/name",
                "title" : "let name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designlibraryitem\/title",
                "title" : "let title: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designlibraryitem\/url",
                "title" : "let url: URL",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticcore\/designlibraryitem",
            "title" : "DesignLibraryItem",
            "type" : "struct"
          },
          {
            "title" : "Type Aliases",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/poieticcore\/expressiontoken",
            "title" : "ExpressionToken",
            "type" : "typealias"
          },
          {
            "title" : "Enumerations",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objecttypeerror\/missingtraitattribute(_:_:)",
                "title" : "case missingTraitAttribute(Attribute, String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/objecttypeerror\/typemismatch(_:_:)",
                "title" : "case typeMismatch(Attribute, ValueType)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/objecttypeerror\/unknowntype(_:)",
                "title" : "case unknownType(String)",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objecttypeerror\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttypeerror\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/objecttypeerror\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttypeerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/objecttypeerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/objecttypeerror",
            "title" : "ObjectTypeError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/scannererror\/unexpectedend",
                "title" : "case unexpectedEnd",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/scannererror\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/scannererror\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/scannererror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/scannererror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/scannererror",
            "title" : "ScannerError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/any",
                "title" : "case any",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/concrete(_:)",
                "title" : "case concrete(ValueType)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/union(_:)",
                "title" : "case union([ValueType])",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/isarray",
                "title" : "var isArray: Bool",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/isconvertible(to:)",
                "title" : "func isConvertible(to: VariableType) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/matches(_:)",
                "title" : "func matches(ValueType) -> Bool",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/bool",
                "title" : "static let bool: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/bools",
                "title" : "static let bools: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/double",
                "title" : "static let double: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/doubles",
                "title" : "static let doubles: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/int",
                "title" : "static let int: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/ints",
                "title" : "static let ints: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/numeric",
                "title" : "static let numeric: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/objectreference",
                "title" : "static let objectReference: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/point",
                "title" : "static let point: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/points",
                "title" : "static let points: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/string",
                "title" : "static let string: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/strings",
                "title" : "static let strings: VariableType",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variabletype\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/variabletype\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/variabletype",
            "title" : "VariableType",
            "type" : "enum"
          },
          {
            "title" : "Extended Modules",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Extended Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/swift\/dictionary\/array(forkey:)",
                    "title" : "func array(forKey: String) throws(JSONError) -> [JSONValue]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/swift\/dictionary\/arrayifpresent(forkey:)",
                    "title" : "func arrayIfPresent(forKey: String) throws(JSONError) -> [JSONValue]?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/swift\/dictionary\/bool(forkey:)",
                    "title" : "func bool(forKey: String) throws(JSONError) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/swift\/dictionary\/boolifpresent(forkey:)",
                    "title" : "func boolIfPresent(forKey: String) throws(JSONError) -> Bool?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/swift\/dictionary\/double(forkey:)",
                    "title" : "func double(forKey: String) throws(JSONError) -> Double",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/swift\/dictionary\/doubleifpresent(forkey:)",
                    "title" : "func doubleIfPresent(forKey: String) throws(JSONError) -> Double?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/swift\/dictionary\/int(forkey:)",
                    "title" : "func int(forKey: String) throws(JSONError) -> Int",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/swift\/dictionary\/intifpresent(forkey:)",
                    "title" : "func intIfPresent(forKey: String) throws(JSONError) -> Int?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/swift\/dictionary\/string(forkey:)",
                    "title" : "func string(forKey: String) throws(JSONError) -> String",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/swift\/dictionary\/stringifpresent(forkey:)",
                    "title" : "func stringIfPresent(forKey: String) throws(JSONError) -> String?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/swift\/dictionary\/value(forkey:)",
                    "title" : "func value(forKey: String) throws(JSONError) -> JSONValue",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/swift\/dictionary\/valueifpresent(forkey:)",
                    "title" : "func valueIfPresent(forKey: String) throws(JSONError) -> JSONValue?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/swift\/dictionary",
                "title" : "Dictionary",
                "type" : "extension"
              }
            ],
            "path" : "\/documentation\/poieticcore\/swift",
            "title" : "Swift",
            "type" : "extension"
          }
        ],
        "path" : "\/documentation\/poieticcore",
        "title" : "PoieticCore",
        "type" : "module"
      }
    ]
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 2
  }
}